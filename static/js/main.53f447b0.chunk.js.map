{"version":3,"sources":["../../../../../../src/common/form/main/enums.ts","reportWebVitals.js","assets/routes.ts","../../../../../../src/common/standaloneControls/input/enums.ts","../../../../src/assets/constants.ts","../../../../../../src/common/standaloneControls/readonly/wrapper.view.tsx","../../../../../../src/common/standaloneControls/readonly/hoc.tsx","../../../../../src/common/utils/formatters.ts","../../../../../../src/common/standaloneControls/input/utils.ts","../../../../../../src/common/standaloneControls/input/readonly.view.tsx","../../../../../src/common/icon/enums.ts","../../../../../src/common/icon/view.tsx","../../../../../src/common/icon/data.ts","../../../../../../src/common/standaloneControls/input/view.tsx","../../../../../../src/common/standaloneControls/input/container.tsx","../../../../../../src/common/standaloneControls/checkbox/readonly.view.tsx","../../../../../../src/common/standaloneControls/checkbox/useControlCheckedState.hook.ts","../../../../../../src/common/standaloneControls/checkbox/view.tsx","../../../../../../src/common/standaloneControls/checkbox/container.tsx","../../../../../../src/common/form/common/enums.ts","../../../../../../src/common/form/controls/checkbox.view.tsx","../../../../../../src/common/standaloneControls/radio/view.tsx","../../../../../../src/common/standaloneControls/radio/container.tsx","../../../../../../src/common/standaloneControls/date/enums.ts","../../../../../../src/common/standaloneControls/date/useGetDateFormat.hook.ts","../../../../../../src/common/standaloneControls/date/utils.ts","../../../../../../src/common/standaloneControls/date/useProperValue.hook.ts","../../../../../../src/common/standaloneControls/date/view.tsx","../../../../../../src/common/standaloneControls/date/readonly.view.tsx","../../../../../../src/common/standaloneControls/date/container.tsx","../../../../../../src/common/standaloneControls/dropdown/readonly.view.tsx","../../../../../../src/common/standaloneControls/dropdown/option.view.tsx","../../../../../src/common/utils/clickOutside.hook.ts","../../../../../../src/common/standaloneControls/dropdown/view.tsx","../../../../../../src/common/standaloneControls/dropdown/container.tsx","../../../../../../src/common/standaloneControls/fileUpload/utils.ts","../../../../../../src/common/standaloneControls/fileUpload/enums.ts","../../../../../../src/common/standaloneControls/inlineError/view.tsx","../../../../../../src/common/standaloneControls/fileUpload/view.tsx","../../../../../../src/common/standaloneControls/fileUpload/readonly.view.tsx","../../../../../../src/common/standaloneControls/fileUpload/container.tsx","../../../../../../src/common/standaloneControls/money/view.tsx","../../../../../../src/common/standaloneControls/money/container.tsx","../../../../../../src/common/standaloneControls/pageError/view.tsx","../../../../../src/common/markdownRenderer/view.tsx","../../../../../src/common/markdownRenderer/utils.ts","../../../../../../../src/common/standaloneControls/textarea/useMarkdown/utils.ts","../../../../../src/common/modal/view.tsx","../../../../../../../src/common/standaloneControls/textarea/useMarkdown/imageUploadModal.tsx","../../../../../../../src/common/standaloneControls/textarea/useMarkdown/useMarkdown.hook.tsx","../../../../../../src/common/standaloneControls/textarea/view.tsx","../../../../../../src/common/standaloneControls/textarea/container.tsx","../../../../../../src/common/form/controls/wrapper.view.tsx","../../../../../../src/common/form/controls/index.js","../../../../../../src/common/form/controls/input.view.tsx","../../../../../../src/common/form/controls/radio.view.tsx","../../../../../../src/common/form/controls/textarea.view.tsx","../../../../../../src/common/form/controls/attachment.view.tsx","../../../../../../src/common/form/controls/dropdown.view.tsx","../../../../../../src/common/form/controls/money.view.tsx","../../../../../../src/common/form/controls/date.view.tsx","../../../../../../src/common/form/main/data.ts","../../../../../../src/common/form/main/utils.tsx","../../../../../../src/common/form/controlRow/view.tsx","../../../../../../src/common/form/arraySection/view.tsx","../../../../../../src/common/form/arraySection/useReorder.hook.tsx","../../../../../../src/common/form/main/view.tsx","../../../../../../src/common/form/main/formReducer.ts","../../../../../../src/common/form/main/props.ts","pages/basic/countries.ts","pages/basic/data.ts","assets/database.ts","pages/basic/fakeClient.ts","common/samplePage/view.tsx","pages/basic/view.tsx","pages/array/data.ts","pages/array/view.tsx","pages/standalone/view.tsx","pages/condition/data.ts","pages/condition/view.tsx","pages/inputs/data.tsx","pages/inputs/view.tsx","pages/radioCheckbox/data.tsx","pages/radioCheckbox/view.tsx","pages/textarea/data.tsx","pages/textarea/view.tsx","pages/dropdown/data.tsx","pages/dropdown/view.tsx","pages/attachment/data.tsx","pages/attachment/view.tsx","entry/view.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ROUTES","FormActionType","ValidationMode","ErrorType","PageErrorDisplayMode","SubmissionErrorScrollMode","NOKA_COLORS_CLASS","stripNonMoneyValues","value","InputType","TooltipLabelMode","checked","onChange","e","setChecked","FormControlType","ControlRowWidth","RadioLayout","DateType","prevGivenValue","setValue","o","i","setFiles","setFileSizeMsg","a","FileUploadStatus","props","formatFilenameForMarkdownRenderer","name","newValue","length","controlConfig","Object","assign","countries","text","config","onUpload","onRemove","fileUploadProgress","fileStatuses","headerText","onInfoIconClicked","alert","controlRows","width","FULL","controls","type","INPUT","label","propertyPath","isRequired","validator","fieldValue","toLocaleLowerCase","startsWith","inputType","PASSWORD","EMAIL","NUMBER","growthRatio","DATE","dateType","DATE_ONLY","RADIO_GROUP","selections","DROPDOWN","options","placeholder","pinnedValues","showClearButton","MEDIUM_LARGE","TEXTAREA","characterLimit","ATTACHMENT","supportedFileExtensions","messageOverrides","supportedFileFormats","isMultiple","SMALL","MONEY","CHECKBOX_GROUP","PHONE","emptyModel","username","password","email","gender","fields","database","users","age","dob","Date","getTime","bio","targetAnnualSalary","phone","country","photoFilename","parties","venue","date","guests","useFakeClient","useState","setFileStatuses","progress","setProgress","numTimesUploadedTest","useRef","upload","files","id","setInterval","newProgressMap","forEach","f","currentProgress","current","split","toLowerCase","FAILED","IN_PROGRESS","newProgress","undefined","UPLOADED","clearInterval","remove","filename","rest","SamplePage","submittedData","setSubmittedData","sampleDataToUse","setSampleDataToUse","className","description","sampleData","map","d","onClick","sampleDataName","icon","faCheck","renderForm","data","children","Basic","onSubmit","Form","sections","defaultValues","formatRequiredLabels","validationMode","BLUR","SUBMIT","scrollContainerSelector","isReadOnly","user","DATE_AND_TIME","earliestDate","isArray","parentPropertyPath","addEntryWhenEmpty","allowReordering","itemName","blankValues","ArraySample","party","StandaloneSample","showError","setShowError","TEXT","htmlProps","InlineError","message","defaultValue","petType","breed","color","favFood","isHidden","isDisabled","layout","GRID","ConditionalSample","isSubmitted","LOAD","disableSubmitWhenInvalid","hideErrorsOnLoad","registerLocale","es","salary","dateTime","time","rangedDate","rangedTime","minLength","maxLength","minValue","maxValue","currencyCode","TIME_ONLY","latestDate","addDays","isRanged","earliestTime","x","setHours","latestTime","MEDIUM","dateFormat","timeFormat","locale","InputsSample","submitButtonText","r1","r2","c1","c2","c3","c4","c5","c6","generateSelections","numSelections","Array","from","_","VERTICAL","numGridColumns","minNumSelections","maxNumSelections","RadioCheckboxSample","limit","resize1","resize2","resize3","md","md2","allowVerticalResize","allowHorizontalResize","useMarkdown","allowImageUpload","TextareaSample","basic","pinned","multi","multiClear","noFiltering","emptyText","ecn","DropdownSample","allowFiltering","saveSelection","onOptionSelected","option","emptyOptionsText","extraClassName","onOpen","onClose","onOptionsChanged","clientUpload","clientRemove","uploadIcon","faUpload","individualFileSizeLimit","totalFileSizeLimit","AttachmentSample","Entry","basename","to","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53f447b0.chunk.js","sourcesContent":["export var FormActionType;\n(function (FormActionType) {\n    FormActionType[\"SET_VALUE\"] = \"SET_VALUE\";\n    FormActionType[\"ADD_ARRAY_VALUE\"] = \"ADD_ARRAY_VALUE\";\n    FormActionType[\"REMOVE_ARRAY_VALUE\"] = \"REMOVE_ARRAY_VALUE\";\n    FormActionType[\"REMOVE_ARRAY_INDEX\"] = \"REMOVE_ARRAY_INDEX\";\n    FormActionType[\"REPLACE_DATA\"] = \"REPLACE_DATA\";\n    FormActionType[\"SET_ERROR\"] = \"SET_ERROR\";\n    FormActionType[\"CLEAR_ERROR\"] = \"CLEAR_ERROR\";\n})(FormActionType || (FormActionType = {}));\nexport var ValidationMode;\n(function (ValidationMode) {\n    ValidationMode[ValidationMode[\"LOAD\"] = 1] = \"LOAD\";\n    ValidationMode[ValidationMode[\"BLUR\"] = 2] = \"BLUR\";\n    ValidationMode[ValidationMode[\"CHANGE\"] = 4] = \"CHANGE\";\n    ValidationMode[ValidationMode[\"SUBMIT\"] = 8] = \"SUBMIT\";\n})(ValidationMode || (ValidationMode = {}));\nexport var ErrorType;\n(function (ErrorType) {\n    ErrorType[\"REQUIRED\"] = \"required\";\n    ErrorType[\"MIN_LENGTH\"] = \"min_length\";\n    ErrorType[\"MAX_LENGTH\"] = \"max_length\";\n    ErrorType[\"MIN_VALUE\"] = \"min_value\";\n    ErrorType[\"MAX_VALUE\"] = \"max_value\";\n    ErrorType[\"EMAIL\"] = \"email\";\n    ErrorType[\"PHONE\"] = \"phone\";\n    ErrorType[\"CUSTOM\"] = \"custom\";\n    ErrorType[\"CHECKBOX_REQUIRED\"] = \"checkbox_required\";\n    ErrorType[\"CHECKBOX_MIN_SELECTIONS\"] = \"checkbox_min_selections\";\n    ErrorType[\"CHECKBOX_MAX_SELECTIONS\"] = \"checkbox_max_selections\";\n})(ErrorType || (ErrorType = {}));\nexport var PageErrorDisplayMode;\n(function (PageErrorDisplayMode) {\n    PageErrorDisplayMode[\"SHOW_AFTER_SUBMIT\"] = \"show_after_submit\";\n    PageErrorDisplayMode[\"SHOW_ON_FIELD_ERROR\"] = \"show_on_field_error\";\n    PageErrorDisplayMode[\"HIDE\"] = \"hide\";\n})(PageErrorDisplayMode || (PageErrorDisplayMode = {}));\nexport var SubmissionErrorScrollMode;\n(function (SubmissionErrorScrollMode) {\n    SubmissionErrorScrollMode[\"PAGE_ERROR\"] = \"page_error\";\n    SubmissionErrorScrollMode[\"FIRST_FIELD_WITH_ERROR\"] = \"first_field_with_error\";\n    SubmissionErrorScrollMode[\"NONE\"] = \"none\";\n})(SubmissionErrorScrollMode || (SubmissionErrorScrollMode = {}));\n//# sourceMappingURL=enums.js.map","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const ROUTES = {\n  basic: '/overview',\n  array: '/array',\n  standalone: '/standalone',\n  conditional: '/conditional',\n  inputs: '/inputs',\n  radioCheckbox: '/radios-and-checkboxes',\n  textareas: '/textareas',\n  dropdowns: '/dropdowns',\n  attachments: '/attachments',\n}\n","export var InputType;\n(function (InputType) {\n    InputType[InputType[\"TEXT\"] = 0] = \"TEXT\";\n    InputType[InputType[\"EMAIL\"] = 1] = \"EMAIL\";\n    InputType[InputType[\"PHONE\"] = 2] = \"PHONE\";\n    InputType[InputType[\"NUMBER\"] = 3] = \"NUMBER\";\n    InputType[InputType[\"PASSWORD\"] = 4] = \"PASSWORD\";\n    InputType[InputType[\"MONEY\"] = 5] = \"MONEY\";\n    InputType[InputType[\"DATE\"] = 6] = \"DATE\";\n})(InputType || (InputType = {}));\n//# sourceMappingURL=enums.js.map","export const NOKA_COLORS_CLASS = 'noka-form-colors';\nexport const EMPTY_VALUE_TEXT = '-';\n//# sourceMappingURL=constants.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nexport const ReadOnlyControlWrapper = ({ children }) => (_jsx(\"div\", Object.assign({ className: `${NOKA_COLORS_CLASS} readonly-control-wrapper` }, { children: children }), void 0));\n//# sourceMappingURL=wrapper.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport './styles.scss';\nimport { EMPTY_VALUE_TEXT } from '../../../assets/constants';\nimport { ReadOnlyControlWrapper } from './wrapper.view';\nfunction valueExists(props, valuePath) {\n    if (valuePath in props) {\n        // @ts-expect-error\n        const v = props[valuePath];\n        if (v == null)\n            return false;\n        if (typeof v === 'string' && v === '')\n            return false;\n        return true;\n    }\n    return false;\n}\nexport function withReadOnlySwitch(renderNormalControl, renderReadOnlyControl) {\n    return (props) => {\n        if (props.isReadOnly) {\n            if (!valueExists(props, 'defaultValue') && !valueExists(props, 'value')) {\n                return _jsx(ReadOnlyControlWrapper, { children: EMPTY_VALUE_TEXT }, void 0);\n            }\n            return (_jsx(ReadOnlyControlWrapper, { children: renderReadOnlyControl(props) }, void 0));\n        }\n        return renderNormalControl(props);\n    };\n}\n//# sourceMappingURL=hoc.js.map","export function stripNonMoneyValues(value) {\n    const match = value.match(/\\d+\\.?\\d*/g);\n    if (match) {\n        return match.join('');\n    }\n    return '';\n}\nconst moneyFormatter = (currencyCode) => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currencyCode || 'USD',\n    minimumFractionDigits: 2,\n});\nexport function formatMoney(value, currencyCode, removeSymbol = true) {\n    const numericValue = typeof value === 'number' ? value : parseFloat(stripNonMoneyValues(value));\n    const formatted = moneyFormatter(currencyCode).format(numericValue);\n    return removeSymbol ? formatted.slice(1) : formatted;\n}\nexport function stripNonNumericValues(text) {\n    return text.replace(/\\D/g, '');\n}\n//# sourceMappingURL=formatters.js.map","import { stripNonNumericValues } from '../../utils/formatters';\nimport { InputType } from './enums';\nexport function formatPhoneNumber(value) {\n    const numbersOnly = stripNonNumericValues(value);\n    const match = numbersOnly.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n        return `${match[1]}-${match[2]}-${match[3]}`;\n    }\n    else {\n        return value;\n    }\n}\nexport function getFormatter(type) {\n    if (type === InputType.PHONE) {\n        return formatPhoneNumber;\n    }\n    else if (type === InputType.NUMBER) {\n        return (value) => stripNonNumericValues(value);\n    }\n    return undefined;\n}\n//# sourceMappingURL=utils.js.map","import { InputType } from './enums';\nimport { formatPhoneNumber } from './utils';\nexport const ReadOnlyInput = ({ type, defaultValue }) => {\n    switch (type) {\n        case InputType.PASSWORD:\n            return Array.from({ length: defaultValue.length })\n                .map(() => '*')\n                .join('');\n        case InputType.PHONE:\n            return formatPhoneNumber(defaultValue);\n        default:\n            return defaultValue;\n    }\n};\n//# sourceMappingURL=readonly.view.js.map","export var TooltipLabelMode;\n(function (TooltipLabelMode) {\n    TooltipLabelMode[TooltipLabelMode[\"NEVER\"] = 0] = \"NEVER\";\n    TooltipLabelMode[TooltipLabelMode[\"ALWAYS\"] = 1] = \"ALWAYS\";\n    TooltipLabelMode[TooltipLabelMode[\"ON_HOVER\"] = 2] = \"ON_HOVER\";\n})(TooltipLabelMode || (TooltipLabelMode = {}));\n//# sourceMappingURL=enums.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './styles.scss';\nimport { TooltipLabelMode } from './enums';\nimport { NOKA_COLORS_CLASS } from '../../assets/constants';\nexport function Icon(props) {\n    const className = (() => {\n        const classes = ['icon', NOKA_COLORS_CLASS];\n        if (props.onClick) {\n            classes.push('clickable');\n        }\n        if (props.extraClassName) {\n            classes.push(props.extraClassName);\n        }\n        if (props.tooltipAsLabel === TooltipLabelMode.ON_HOVER) {\n            classes.push('label-on-hover');\n        }\n        return classes.join(' ');\n    })();\n    const showTooltip = props.tooltip &&\n        props.tooltipAsLabel !== undefined &&\n        props.tooltipAsLabel !== TooltipLabelMode.NEVER;\n    return (_jsxs(\"div\", Object.assign({ className: className, title: props.tooltip, \"aria-hidden\": props.onClick === undefined, id: props.id, onClick: props.onClick }, { children: [_jsx(FontAwesomeIcon, { icon: props.icon, size: props.size }, void 0),\n            showTooltip && _jsx(\"span\", Object.assign({ className: \"label\" }, { children: props.tooltip }), void 0)] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { faFile, faFilePdf, faFileImage, faFileAudio, faFileVideo, faFilePowerpoint, faFileArchive, faFileWord, faFileExcel, faFileAlt, faCalendarAlt, faClock, faEyeSlash, } from '@fortawesome/free-regular-svg-icons';\nimport { faEllipsisV, faCheck, faPlus, faTrash, faCloudUploadAlt, faExclamation, faRedoAlt, faInfoCircle, faTimes, faEye, } from '@fortawesome/free-solid-svg-icons';\nexport const GeneralIcons = {\n    ExclaimationMark: faExclamation,\n    Move: faEllipsisV,\n    Redo: faRedoAlt,\n    Checkmark: faCheck,\n    Unchecked: faTimes,\n    Add: faPlus,\n    Remove: faTrash,\n    Upload: faCloudUploadAlt,\n    Calendar: faCalendarAlt,\n    Clock: faClock,\n    Info: faInfoCircle,\n    Visible: faEye,\n    Hidden: faEyeSlash,\n    Close: faTimes,\n};\nexport const FileIcons = {\n    Default: faFile,\n    Pdf: faFilePdf,\n    Image: faFileImage,\n    Audio: faFileAudio,\n    Video: faFileVideo,\n    Powerpoint: faFilePowerpoint,\n    Archive: faFileArchive,\n    Word: faFileWord,\n    Excel: faFileExcel,\n    Text: faFileAlt,\n};\n//# sourceMappingURL=data.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport './styles.scss';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nimport { InputType } from './enums';\nimport { getFormatter } from './utils';\nimport { GeneralIcons, Icon } from '../../icon';\nexport function Input(_a) {\n    var { type } = _a, props = __rest(_a, [\"type\"]);\n    const [value, setValue] = useState('');\n    const formatter = useRef();\n    const [showPassword, setShowPassword] = useState(false);\n    useEffect(() => {\n        setValue(props.defaultValue == null ? '' : props.defaultValue);\n    }, [props.defaultValue]);\n    useEffect(() => {\n        formatter.current = getFormatter(type);\n    }, [type]);\n    const _b = props.htmlProps || {}, { className: extraClassName } = _b, htmlProps = __rest(_b, [\"className\"]);\n    function onBlur(value) {\n        const properValue = type === InputType.NUMBER ? parseFloat(value) : value;\n        if (props.onBlur)\n            props.onBlur(properValue);\n    }\n    const isPasswordType = type === InputType.PASSWORD;\n    return (_jsxs(\"div\", Object.assign({ className: `input-wrapper ${isPasswordType ? 'password' : ''}` }, { children: [_jsx(\"input\", Object.assign({}, htmlProps, { value: value, onChange: (e) => {\n                    const value = formatter.current\n                        ? formatter.current(e.target.value)\n                        : e.target.value;\n                    setValue(value);\n                    if (props.onChange)\n                        props.onChange(value);\n                }, onBlur: (e) => onBlur(e.target.value), type: isPasswordType && !showPassword ? 'password' : 'text', className: `${NOKA_COLORS_CLASS} ${extraClassName || ''}`, onKeyPress: (e) => {\n                    if (e.key === 'Enter') {\n                        onBlur(e.currentTarget.value);\n                    }\n                } }), void 0),\n            isPasswordType && (_jsx(Icon, { icon: showPassword ? GeneralIcons.Hidden : GeneralIcons.Visible, onClick: () => setShowPassword(!showPassword), tooltip: showPassword ? 'Hide' : 'Show' }, void 0))] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withReadOnlySwitch } from '../readonly';\nimport { ReadOnlyInput } from './readonly.view';\nimport { Input } from './view';\nexport const InputContainer = withReadOnlySwitch((props) => _jsx(Input, Object.assign({}, props), void 0), (props) => _jsx(ReadOnlyInput, { type: props.type, defaultValue: props.defaultValue }, void 0));\n//# sourceMappingURL=container.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport './styles.scss';\nimport { GeneralIcons, Icon } from '../../icon';\nexport function ReadOnlyCheckbox({ label, isChecked }) {\n    return (_jsxs(\"label\", Object.assign({ className: \"radioOrCheckbox readonly\" }, { children: [_jsx(Icon, { icon: isChecked ? GeneralIcons.Checkmark : GeneralIcons.Unchecked }, void 0),\n            _jsx(\"span\", Object.assign({ className: \"label\" }, { children: label }), void 0)] }), void 0));\n}\n//# sourceMappingURL=readonly.view.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useState, useEffect } from 'react';\nexport function useControlCheckedState(htmlProps) {\n    const { defaultChecked, onChange: extraOnChange } = htmlProps, miscProps = __rest(htmlProps, [\"defaultChecked\", \"onChange\"]);\n    const [checked, setChecked] = useState(!!defaultChecked);\n    useEffect(() => {\n        setChecked(!!defaultChecked);\n    }, [defaultChecked]);\n    return {\n        checked,\n        onChange: (e) => {\n            setChecked(e.target.checked);\n            if (extraOnChange)\n                extraOnChange(e);\n        },\n        miscProps,\n    };\n}\n//# sourceMappingURL=useControlCheckedState.hook.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport './styles.scss';\nimport { GeneralIcons, Icon } from '../../icon';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nimport { useControlCheckedState } from './useControlCheckedState.hook';\nexport function Checkbox({ label, value, htmlProps }) {\n    const { checked, onChange, miscProps } = useControlCheckedState(htmlProps || {});\n    return (_jsxs(\"label\", Object.assign({ className: `${NOKA_COLORS_CLASS} radioOrCheckbox ${miscProps.disabled ? 'disabled' : ''}` }, { children: [_jsx(\"input\", Object.assign({ type: \"checkbox\" }, miscProps, { value: value, checked: checked, onChange: onChange }), void 0),\n            _jsx(\"div\", Object.assign({ className: \"checkbox-control\" }, { children: _jsx(Icon, { icon: GeneralIcons.Checkmark, tooltip: \"checkmark\" }, void 0) }), void 0),\n            _jsx(\"span\", Object.assign({ className: \"label\" }, { children: label }), void 0)] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withReadOnlySwitch } from '../readonly';\nimport { ReadOnlyCheckbox } from './readonly.view';\nimport { Checkbox } from './view';\nexport const Checkboxontainer = withReadOnlySwitch((props) => _jsx(Checkbox, Object.assign({}, props), void 0), (props) => {\n    var _a;\n    return (_jsx(ReadOnlyCheckbox, { label: props.label, isChecked: (_a = props.htmlProps) === null || _a === void 0 ? void 0 : _a.defaultChecked }, void 0));\n});\n//# sourceMappingURL=container.js.map","export var FormControlType;\n(function (FormControlType) {\n    FormControlType[FormControlType[\"INPUT\"] = 0] = \"INPUT\";\n    FormControlType[FormControlType[\"RADIO_GROUP\"] = 1] = \"RADIO_GROUP\";\n    FormControlType[FormControlType[\"CHECKBOX_GROUP\"] = 2] = \"CHECKBOX_GROUP\";\n    FormControlType[FormControlType[\"TEXTAREA\"] = 3] = \"TEXTAREA\";\n    FormControlType[FormControlType[\"ATTACHMENT\"] = 4] = \"ATTACHMENT\";\n    FormControlType[FormControlType[\"DROPDOWN\"] = 5] = \"DROPDOWN\";\n})(FormControlType || (FormControlType = {}));\nexport var ControlRowWidth;\n(function (ControlRowWidth) {\n    ControlRowWidth[\"SMALL\"] = \"small\";\n    ControlRowWidth[\"MEDIUM\"] = \"medium\";\n    ControlRowWidth[\"MEDIUM_LARGE\"] = \"medLarge\";\n    ControlRowWidth[\"LARGE\"] = \"large\";\n    ControlRowWidth[\"FULL\"] = \"full\";\n})(ControlRowWidth || (ControlRowWidth = {}));\nexport var RadioLayout;\n(function (RadioLayout) {\n    RadioLayout[\"HORIZONTAL\"] = \"horizontal\";\n    RadioLayout[\"VERTICAL\"] = \"vertical\";\n    RadioLayout[\"GRID\"] = \"grid\";\n})(RadioLayout || (RadioLayout = {}));\n//# sourceMappingURL=enums.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { EMPTY_VALUE_TEXT } from '../../../assets/constants';\nimport { Checkbox } from '../../standaloneControls/checkbox';\nimport { ReadOnlyControlWrapper } from '../../standaloneControls/readonly';\nimport { RadioLayout } from '../common/enums';\nimport { FormActionType } from '../main/enums';\nexport function getCheckboxOrRadioClassname(props) {\n    const classes = ['checkbox-or-radio-group', props.layout || RadioLayout.HORIZONTAL];\n    if (props.layout === RadioLayout.GRID) {\n        classes.push(`columns-${props.numGridColumns || 3}`);\n    }\n    return classes.join(' ');\n}\nexport function FormCheckbox(props) {\n    var _a;\n    const isSingleSelection = props.selections.length === 1;\n    if (!isSingleSelection && props.isReadOnly && ((_a = props.defaultValue) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n        return _jsx(ReadOnlyControlWrapper, { children: EMPTY_VALUE_TEXT }, void 0);\n    }\n    return (_jsx(\"div\", Object.assign({ className: getCheckboxOrRadioClassname(props) }, { children: props.selections.map((s) => {\n            var _a;\n            const isSelected = isSingleSelection\n                ? props.defaultValue === s.value\n                : (_a = props.defaultValue) === null || _a === void 0 ? void 0 : _a.includes(s.value);\n            const key = `${props.propertyPath}-${s.value}`;\n            if (props.isReadOnly) {\n                if (!isSingleSelection && !isSelected)\n                    return null;\n                return (_jsx(Checkbox, { label: s.text, value: s.value, htmlProps: { defaultChecked: isSelected }, isReadOnly: true }, key));\n            }\n            return (_jsx(Checkbox, { label: s.text, value: s.value, htmlProps: {\n                    name: props.propertyPath,\n                    defaultChecked: isSelected,\n                    disabled: props.isDisabled,\n                    'aria-label': props.label,\n                    onChange: (e) => {\n                        const shouldValidate = props.validateOnChange || props.validateOnBlur;\n                        if (isSingleSelection) {\n                            const value = e.target.checked;\n                            props.saveValueToState(props.propertyPath, value);\n                            if (shouldValidate)\n                                props.validate(value);\n                        }\n                        else {\n                            props.saveValueToState(props.propertyPath, s.value, e.target.checked\n                                ? FormActionType.ADD_ARRAY_VALUE\n                                : FormActionType.REMOVE_ARRAY_VALUE);\n                            if (shouldValidate) {\n                                props.validate(null);\n                            }\n                        }\n                    },\n                } }, key));\n        }) }), void 0));\n}\n//# sourceMappingURL=checkbox.view.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport '../checkbox/styles.scss';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nimport { useControlCheckedState } from '../checkbox/useControlCheckedState.hook';\nexport function Radio({ label, name, value, htmlProps }) {\n    const { checked, onChange, miscProps } = useControlCheckedState(htmlProps || {});\n    return (_jsxs(\"label\", Object.assign({ className: `${NOKA_COLORS_CLASS} radioOrCheckbox ${miscProps.disabled ? 'disabled' : ''}` }, { children: [_jsx(\"input\", Object.assign({}, miscProps, { type: \"radio\", name: name, value: value, checked: checked, onChange: onChange }), void 0),\n            _jsx(\"span\", { className: `radio-control ${checked ? 'checked' : ''}` }, void 0),\n            _jsx(\"span\", Object.assign({ className: \"label\" }, { children: label }), void 0)] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withReadOnlySwitch } from '../readonly';\nimport { Radio } from './view';\nexport const RadioContainer = withReadOnlySwitch((props) => _jsx(Radio, Object.assign({}, props), void 0), (props) => props.label);\n//# sourceMappingURL=container.js.map","export var DateType;\n(function (DateType) {\n    DateType[DateType[\"DATE_ONLY\"] = 0] = \"DATE_ONLY\";\n    DateType[DateType[\"DATE_AND_TIME\"] = 1] = \"DATE_AND_TIME\";\n    DateType[DateType[\"TIME_ONLY\"] = 2] = \"TIME_ONLY\";\n})(DateType || (DateType = {}));\n//# sourceMappingURL=enums.js.map","import { useState, useEffect } from 'react';\nimport { DateType } from './enums';\nconst DEFAULT_DATE_FORMAT = 'MM/dd/yyyy';\nconst DEFAULT_TIME_FORMAT = 'hh:mm a';\nexport function useGetDateFormat(dateType, dateFormat, timeFormat) {\n    const [format, setFormat] = useState(DEFAULT_DATE_FORMAT);\n    useEffect(() => {\n        if (dateType === DateType.DATE_AND_TIME) {\n            setFormat(`${dateFormat || DEFAULT_DATE_FORMAT} ${timeFormat || DEFAULT_TIME_FORMAT}`);\n        }\n        else if (dateType === DateType.DATE_ONLY) {\n            setFormat(dateFormat || DEFAULT_DATE_FORMAT);\n        }\n        else if (dateType === DateType.TIME_ONLY) {\n            setFormat(timeFormat || DEFAULT_TIME_FORMAT);\n        }\n    }, [dateType, dateFormat, timeFormat]);\n    return format;\n}\n//# sourceMappingURL=useGetDateFormat.hook.js.map","export function dateFromMaybeNumber(value) {\n    if (typeof value === 'number') {\n        return new Date(value);\n    }\n    return value;\n}\nfunction convertValueToNumber(value) {\n    var _a, _b;\n    if (typeof value === 'number')\n        return value;\n    if (Array.isArray(value)) {\n        return [(_a = value[0]) === null || _a === void 0 ? void 0 : _a.getTime(), (_b = value[1]) === null || _b === void 0 ? void 0 : _b.getTime()];\n    }\n    if (typeof value === 'object') {\n        return value.getTime();\n    }\n    return value;\n}\nexport function datesAreEqual(a, b) {\n    return convertValueToNumber(a) === convertValueToNumber(b);\n}\n//# sourceMappingURL=utils.js.map","import { useState, useRef, useEffect } from 'react';\nimport { datesAreEqual, dateFromMaybeNumber } from './utils';\nexport function useProperValue(props) {\n    const [value, setValue] = useState();\n    const prevGivenValue = useRef();\n    useEffect(() => {\n        if (props.isRanged) {\n            if (Array.isArray(prevGivenValue.current) &&\n                datesAreEqual(props.startValue, prevGivenValue.current[0]) &&\n                datesAreEqual(props.endValue, prevGivenValue.current[1]))\n                return;\n            const newValue = [\n                dateFromMaybeNumber(props.startValue),\n                dateFromMaybeNumber(props.endValue),\n            ];\n            prevGivenValue.current = newValue;\n            setValue(newValue);\n        }\n        else {\n            if (datesAreEqual(prevGivenValue.current, props.value))\n                return;\n            prevGivenValue.current = props.value;\n            setValue(dateFromMaybeNumber(props.value));\n        }\n    }, [props]);\n    return { value, setValue };\n}\n//# sourceMappingURL=useProperValue.hook.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './styles.scss';\nimport { DateType } from './enums';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nimport { GeneralIcons, Icon } from '../../icon';\nimport { useGetDateFormat } from './useGetDateFormat.hook';\nimport { useProperValue } from './useProperValue.hook';\nexport function DateInput(props) {\n    const { value, setValue } = useProperValue(props);\n    const dateFormat = useGetDateFormat(props.dateType, props.dateFormat, props.timeFormat);\n    const showTime = props.dateType === DateType.DATE_AND_TIME || props.dateType === DateType.TIME_ONLY;\n    const isTimeOnly = props.dateType === DateType.TIME_ONLY;\n    return (_jsxs(\"div\", Object.assign({ className: `${NOKA_COLORS_CLASS} date-control-wrapper` }, { children: [_jsx(DatePicker, { selected: Array.isArray(value) ? value[0] : value, onChange: (date) => {\n                    setValue(date);\n                    props.onChange(date);\n                }, showTimeSelect: showTime, showTimeInput: showTime, placeholderText: props.placeholder, dateFormat: dateFormat, timeFormat: props.timeFormat, showTimeSelectOnly: isTimeOnly, isClearable: true, locale: props.locale, selectsRange: props.isRanged, startDate: props.isRanged && value ? value[0] : undefined, endDate: props.isRanged && value ? value[1] : undefined, minDate: props.earliestDate, maxDate: props.latestDate, minTime: props.earliestTime, maxTime: props.latestTime }, void 0),\n            _jsx(Icon, { icon: isTimeOnly ? GeneralIcons.Clock : GeneralIcons.Calendar }, void 0)] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { format } from 'date-fns';\nimport { EMPTY_VALUE_TEXT } from '../../../assets/constants';\nimport { ReadOnlyControlWrapper } from '../readonly';\nimport { useGetDateFormat } from './useGetDateFormat.hook';\nimport { useProperValue } from './useProperValue.hook';\nexport const ReadOnlyDateInput = (props) => {\n    const { value } = useProperValue(props);\n    const [displayValue, setDisplayValue] = useState(EMPTY_VALUE_TEXT);\n    const dateFormat = useGetDateFormat(props.dateType, props.dateFormat, props.timeFormat);\n    useEffect(() => {\n        if (value == null) {\n            setDisplayValue(EMPTY_VALUE_TEXT);\n        }\n        else if (Array.isArray(value)) {\n            if (value[0] && value[1]) {\n                setDisplayValue(`${format(new Date(value[0]), dateFormat)} - ${format(new Date(value[1]), dateFormat)}`);\n            }\n            else {\n                setDisplayValue(EMPTY_VALUE_TEXT);\n            }\n        }\n        else {\n            setDisplayValue(format(new Date(value), dateFormat));\n        }\n    }, [value, dateFormat]);\n    return _jsx(ReadOnlyControlWrapper, { children: displayValue }, void 0);\n};\n//# sourceMappingURL=readonly.view.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { DateInput } from './view';\nimport { ReadOnlyDateInput } from './readonly.view';\nexport const DateInputContainer = (props) => {\n    const { isReadOnly } = props, standardProps = __rest(props, [\"isReadOnly\"]);\n    return isReadOnly ? (_jsx(ReadOnlyDateInput, Object.assign({}, standardProps), void 0)) : (_jsx(DateInput, Object.assign({}, standardProps), void 0));\n};\n//# sourceMappingURL=container.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport './readonlyStyles.scss';\nimport { EMPTY_VALUE_TEXT } from '../../../assets/constants';\nimport { ReadOnlyControlWrapper } from '../readonly';\nfunction renderSelectedOption(option, key) {\n    return (_jsx(\"div\", Object.assign({ className: \"readonly-option\" }, { children: option.render ? option.render() : option.text }), key));\n}\nexport const ReadOnlyDropdown = (props) => {\n    const selectedOptions = (() => {\n        if (props.isMultiple) {\n            const selectedValues = props.defaultValue;\n            return props.options.filter((o) => selectedValues.includes(o.value));\n        }\n        const selectedValue = props.defaultValue;\n        return props.options.find((o) => o.value === selectedValue);\n    })();\n    if (selectedOptions === undefined) {\n        return _jsx(ReadOnlyControlWrapper, { children: EMPTY_VALUE_TEXT }, void 0);\n    }\n    return (_jsx(\"div\", Object.assign({ className: \"dropdown-readonly-selections\" }, { children: Array.isArray(selectedOptions)\n            ? selectedOptions.map((o, i) => renderSelectedOption(o, `readonly-option-${i}`))\n            : renderSelectedOption(selectedOptions) }), void 0));\n};\n//# sourceMappingURL=readonly.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Option({ option, selectOption, isSelected, isHovered }) {\n    return (_jsx(\"div\", Object.assign({ className: `dropdown-option ${isSelected ? 'selected' : ''} ${isHovered ? 'hovered' : ''}`, onClick: (e) => {\n            e.stopPropagation();\n            selectOption(option);\n        }, role: \"listitem\", \"aria-selected\": isSelected }, { children: option.render ? option.render() : option.text }), void 0));\n}\n//# sourceMappingURL=option.view.js.map","import { useCallback, useEffect, useRef } from 'react';\nexport function useClickOutside(isActive, onClickOutside, manualAvoidClasses) {\n    const ref = useRef(null);\n    function onKeydown(e) {\n        if (e.key === 'Escape') {\n            onClickOutside();\n        }\n    }\n    function onDocumentClicked(e) {\n        if (ref.current && !ref.current.contains(e.target)) {\n            if (manualAvoidClasses) {\n                const element = e.target;\n                const elementClasses = element && element.className && typeof element.className === 'string'\n                    ? element.className.split(' ')\n                    : [];\n                if (elementClasses.some((c) => manualAvoidClasses.includes(c))) {\n                    return;\n                }\n            }\n            onClickOutside();\n        }\n    }\n    const keydownCallback = useCallback(onKeydown, []);\n    const clickCallback = useCallback(onDocumentClicked, []);\n    function addListeners() {\n        document.addEventListener('keydown', keydownCallback, true);\n        document.addEventListener('click', clickCallback, true);\n    }\n    function removeListeners() {\n        document.removeEventListener('keydown', keydownCallback, true);\n        document.removeEventListener('click', clickCallback, true);\n    }\n    useEffect(() => {\n        if (isActive) {\n            addListeners();\n        }\n        else {\n            removeListeners();\n        }\n    }, [isActive]);\n    useEffect(() => {\n        return () => {\n            removeListeners();\n        };\n    }, []);\n    return ref;\n}\n//# sourceMappingURL=clickOutside.hook.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport './styles.scss';\nimport { Option } from './option.view';\nimport { useClickOutside } from '../../utils/clickOutside.hook';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nexport function Dropdown(props) {\n    const configOptions = props.options;\n    function getDefaultOptions() {\n        if (props.defaultValue === undefined) {\n            return undefined;\n        }\n        if (Array.isArray(props.defaultValue)) {\n            if (!props.isMultiple) {\n                throw new Error('Dropdown: isMultiple must be true when the defaultValue is an array.');\n            }\n            const arr = props.defaultValue;\n            return configOptions.filter((o) => arr.includes(o.value));\n        }\n        const o = configOptions.find((o) => o.value === props.defaultValue);\n        return o ? [o] : undefined;\n    }\n    const [isActive, setActive] = useState(false);\n    function closeDropdown() {\n        setActive(false);\n        if (props.onClose)\n            props.onClose();\n    }\n    const [selectedOptions, setSelectedOptions] = useState();\n    const [currHoveredOptionIndex, setCurrHoveredOptionIndex] = useState(-1);\n    const [hoveredOption, setHoveredOption] = useState();\n    const [filter, setFilter] = useState();\n    const outsideRef = useClickOutside(isActive, () => {\n        closeDropdown();\n        setHoveredOption(undefined);\n        setCurrHoveredOptionIndex(-1);\n    }, ['dropdown-option']);\n    useEffect(() => {\n        if (Array.isArray(props.defaultValue)) {\n            if (selectedOptions &&\n                selectedOptions.length === props.defaultValue.length &&\n                selectedOptions.every((o) => props.defaultValue.includes(o.value))) {\n                return;\n            }\n        }\n        else if ((selectedOptions === null || selectedOptions === void 0 ? void 0 : selectedOptions.length) === 1 &&\n            selectedOptions[0].value === props.defaultValue) {\n            return;\n        }\n        setSelectedOptions(getDefaultOptions());\n    }, [props.defaultValue]);\n    const isFirstRender = useRef(true);\n    useEffect(() => {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            return;\n        }\n        if (props.onOptionsChanged) {\n            props.onOptionsChanged(selectedOptions);\n        }\n    }, [selectedOptions]);\n    function selectOption(option) {\n        if (option === undefined) {\n            setSelectedOptions(undefined);\n        }\n        else if (Array.isArray(option)) {\n            setSelectedOptions(option);\n        }\n        else {\n            if (props.saveSelection !== false) {\n                setSelectedOptions([option]);\n            }\n            if (props.isMultiple) {\n                if (selectedOptions === undefined) {\n                    setSelectedOptions([option]);\n                }\n                else {\n                    const existingOptionIndex = selectedOptions.findIndex((o) => o.value === (option === null || option === void 0 ? void 0 : option.value));\n                    if (existingOptionIndex > -1) {\n                        if (selectedOptions.length === 1) {\n                            setSelectedOptions(undefined);\n                        }\n                        else {\n                            setSelectedOptions([\n                                ...selectedOptions.slice(0, existingOptionIndex),\n                                ...selectedOptions.slice(existingOptionIndex + 1),\n                            ]);\n                        }\n                    }\n                    else {\n                        setSelectedOptions([...(selectedOptions || []), option]);\n                    }\n                }\n            }\n        }\n        if ((props.showClearButton || option !== undefined) &&\n            props.onOptionSelected &&\n            !Array.isArray(option)) {\n            props.onOptionSelected(option);\n        }\n        setFilter(undefined);\n        setCurrHoveredOptionIndex(-1);\n        if (!props.isMultiple) {\n            closeDropdown();\n        }\n    }\n    const initialRenderPassed = useRef(false);\n    const prevConfigOptions = useRef([]);\n    useEffect(() => {\n        if (initialRenderPassed.current === false) {\n            initialRenderPassed.current = true;\n            prevConfigOptions.current = configOptions;\n            return;\n        }\n        // Ensure that options changed before proceeding\n        if (prevConfigOptions.current.length === configOptions.length &&\n            prevConfigOptions.current.every((o, i) => o.value === configOptions[i].value && o.text === configOptions[i].text)) {\n            return;\n        }\n        prevConfigOptions.current = configOptions;\n        // Select default option in new options list\n        if (props.isMultiple) {\n            const defaultValues = props.defaultValue;\n            const options = configOptions.filter((o) => defaultValues.includes(o.value));\n            if (options !== undefined) {\n                selectOption(options);\n                return;\n            }\n        }\n        else {\n            const option = configOptions.find((o) => o.value === props.defaultValue);\n            if (option !== undefined) {\n                selectOption(option);\n                return;\n            }\n        }\n        selectOption(undefined);\n    }, [configOptions]);\n    useEffect(() => {\n        if (currHoveredOptionIndex < filteredPinnedOptions.length) {\n            setHoveredOption(filteredPinnedOptions[currHoveredOptionIndex]);\n        }\n        else {\n            setHoveredOption(filteredOptions[currHoveredOptionIndex - filteredPinnedOptions.length]);\n        }\n    }, [currHoveredOptionIndex]);\n    const pinnedOptions = props.pinnedValues\n        ? props.pinnedValues\n            .map((v) => {\n            const option = configOptions.find((o) => o.value === v);\n            if (option === undefined) {\n                return null;\n            }\n            return option;\n        })\n            .filter((o) => o !== null)\n        : [];\n    function filterOptions(options) {\n        if (filter === undefined) {\n            return options;\n        }\n        const cleanedFilter = filter.trim().toLocaleLowerCase();\n        return options.filter((o) => o.text.toLocaleLowerCase().includes(cleanedFilter));\n    }\n    const filteredOptions = filterOptions(configOptions);\n    const filteredPinnedOptions = filterOptions(pinnedOptions);\n    const filteredOptionsExist = filteredOptions.length > 0;\n    function onKeyDown(e) {\n        e.stopPropagation();\n        if (e.key === 'ArrowDown') {\n            if (currHoveredOptionIndex <\n                filteredOptions.length + filteredPinnedOptions.length) {\n                setCurrHoveredOptionIndex(currHoveredOptionIndex + 1);\n            }\n        }\n        else if (e.key === 'ArrowUp') {\n            if (currHoveredOptionIndex >= 0) {\n                setCurrHoveredOptionIndex(currHoveredOptionIndex - 1);\n            }\n        }\n        else if (e.key === 'Enter') {\n            e.preventDefault();\n            if (!filteredOptionsExist && props.allowAdditions && filter && props.onAddNewItem) {\n                props.onAddNewItem(filter, selectOption);\n            }\n            else if (hoveredOption) {\n                selectOption(hoveredOption);\n                setHoveredOption(undefined);\n            }\n            else if (filter && filteredOptions.length === 1) {\n                selectOption(filteredOptions[0]);\n            }\n            closeDropdown();\n        }\n    }\n    const id = `${props.id}-dropdown`;\n    const wrapperClasses = (() => {\n        const classes = [NOKA_COLORS_CLASS, 'dropdown-wrapper'];\n        if (isActive) {\n            classes.push('active');\n        }\n        if (props.allowFiltering === false) {\n            classes.push('unfilterable');\n        }\n        if (props.extraClassName) {\n            classes.push(props.extraClassName);\n        }\n        if (props.isDisabled) {\n            classes.push('disabled');\n        }\n        return classes.join(' ');\n    })();\n    const withClearButton = props.showClearButton &&\n        (props.isMultiple\n            ? selectedOptions && selectedOptions.length > 0\n            : selectedOptions !== undefined);\n    const inputValue = (() => {\n        if (filter !== undefined) {\n            return filter;\n        }\n        if (hoveredOption) {\n            return hoveredOption.text;\n        }\n        if (!props.isMultiple && selectedOptions && selectedOptions.length > 0) {\n            return selectedOptions[0].text;\n        }\n        return '';\n    })();\n    const isOptionSelected = (o) => selectedOptions ? selectedOptions.some((s) => s.value === o.value) : false;\n    return (_jsxs(\"div\", Object.assign({ className: wrapperClasses, onClick: () => {\n            if (!props.isDisabled) {\n                const newState = !isActive;\n                setActive(newState);\n                if (newState && props.onOpen) {\n                    props.onOpen();\n                }\n                else if (!newState && props.onClose) {\n                    props.onClose();\n                }\n            }\n        }, ref: outsideRef }, { children: [_jsxs(\"div\", Object.assign({ className: \"input\" }, { children: [props.isMultiple &&\n                        (selectedOptions === null || selectedOptions === void 0 ? void 0 : selectedOptions.map((o, i) => (_jsxs(\"div\", Object.assign({ className: \"option-tag\" }, { children: [o.text,\n                                _jsx(\"span\", Object.assign({ className: \"option-tag-remove\", onClick: (e) => {\n                                        e.stopPropagation();\n                                        e.preventDefault();\n                                        selectOption(o);\n                                    } }, { children: \"\\u00D7\" }), void 0)] }), `${id}-selected-option-tag-${i}`)))),\n                    _jsx(\"input\", Object.assign({ placeholder: props.placeholder, className: `dropdown-input ${withClearButton ? 'withClearButton' : ''}`, value: inputValue, onChange: (e) => setFilter(e.target.value), onKeyDown: onKeyDown, role: \"combobox\", \"aria-controls\": id, \"aria-haspopup\": \"listbox\", \"aria-expanded\": isActive, \"aria-activedescendant\": selectedOptions && selectedOptions.length > 0\n                            ? selectedOptions[0].text\n                            : undefined, \"aria-autocomplete\": \"list\", disabled: props.isDisabled, readOnly: props.allowFiltering === false, \"aria-multiselectable\": props.isMultiple }, props.filterHtmlProps), void 0)] }), void 0),\n            _jsx(\"input\", Object.assign({ style: { display: 'none' }, defaultValue: props.defaultValue, disabled: props.isDisabled }, props.hiddenInputHtmlProps), void 0),\n            withClearButton && (_jsx(\"span\", Object.assign({ className: \"dropdown-clear\", onClick: (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    selectOption(undefined);\n                } }, { children: \"\\u00D7\" }), void 0)),\n            _jsx(\"div\", { className: `dropdown-arrow ${props.isDisabled ? 'disabled' : ''}` }, void 0),\n            isActive && (_jsxs(\"div\", Object.assign({ className: \"options-container\", role: \"list\", id: id }, { children: [filteredPinnedOptions && filteredPinnedOptions.length > 0 && (_jsxs(_Fragment, { children: [filteredPinnedOptions.map((o, i) => (_jsx(Option, { option: o, selectOption: selectOption, isSelected: isOptionSelected(o), isHovered: hoveredOption === o }, `${props.id}-pinnedOption-${i}`))),\n                            _jsx(\"div\", { className: \"pinned-value-separator\" }, void 0)] }, void 0)),\n                    !filteredOptionsExist && !props.allowAdditions && (_jsx(\"div\", Object.assign({ className: \"dropdown-option\" }, { children: props.emptyOptionsText || '(Empty)' }), void 0)),\n                    !filteredOptionsExist && props.allowAdditions && filter && (_jsx(\"div\", Object.assign({ className: \"dropdown-option\", onClick: () => {\n                            if (props.onAddNewItem) {\n                                props.onAddNewItem(filter, selectOption);\n                            }\n                        } }, { children: props.addNewItemText || 'Add new item...' }), void 0)),\n                    filteredOptions.map((o, i) => (_jsx(Option, { option: o, selectOption: selectOption, isSelected: isOptionSelected(o), isHovered: hoveredOption === o }, `${props.id}-option-${i}`)))] }), void 0))] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withReadOnlySwitch } from '../readonly';\nimport { ReadOnlyDropdown } from './readonly.view';\nimport { Dropdown } from './view';\nexport const DropdownContainer = withReadOnlySwitch((props) => _jsx(Dropdown, Object.assign({}, props), void 0), (props) => (_jsx(ReadOnlyDropdown, { defaultValue: props.defaultValue, isMultiple: props.isMultiple, options: props.options }, void 0)));\n//# sourceMappingURL=container.js.map","import { FileIcons } from '../../icon';\nexport function onDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n}\nexport function onDrop(e, existingFiles, setFiles, setDraggingOver) {\n    e.preventDefault();\n    setDraggingOver(false);\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n        const newFiles = Array.from(files);\n        const uniqueFiles = existingFiles\n            ? newFiles.filter((f) => existingFiles.find((ef) => ef.name === f.name) === undefined)\n            : newFiles;\n        setFiles([...(existingFiles || []), ...uniqueFiles]);\n        e.dataTransfer.clearData();\n    }\n}\nconst FILE_SIZE_THRESHOLD = 1000;\nconst FILE_SIZE_UNITS = ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nexport function formatFileSize(bytes) {\n    if (Math.abs(bytes) < FILE_SIZE_THRESHOLD) {\n        return bytes + ' B';\n    }\n    let u = -1;\n    const r = Math.pow(10, 2);\n    do {\n        bytes /= FILE_SIZE_THRESHOLD;\n        ++u;\n    } while (Math.round(Math.abs(bytes) * r) / r >= FILE_SIZE_THRESHOLD &&\n        u < FILE_SIZE_UNITS.length - 1);\n    return bytes.toFixed(2) + ' ' + FILE_SIZE_UNITS[u];\n}\nconst FILE_EXTENSIONS = {\n    image: [\n        'jpg',\n        'jpeg',\n        'jpe',\n        'jif',\n        'jfif',\n        'png',\n        'gif',\n        'webp',\n        'tiff',\n        'tif',\n        'psd',\n        'raw',\n        'bmp',\n        'heif',\n        'indd',\n        'dib',\n        'arw',\n        'cr2',\n        'nrw',\n        'k25',\n        'svg',\n        'svgz',\n        'ai',\n        'eps',\n    ],\n    video: [\n        'webm',\n        'mkv',\n        'flv',\n        'vob',\n        'ogv',\n        'ogg',\n        'rrc',\n        'gifv',\n        'mng',\n        'mov',\n        'avi',\n        'qt',\n        'wmv',\n        'yuv',\n        'rm',\n        'asf',\n        'amv',\n        'mp4',\n        'm4p',\n        'm4v',\n        'mpg',\n        'mp2',\n        'mpeg',\n        'mpe',\n        'mpv',\n        'm4v',\n        'svi',\n        '3gp',\n        '3g2',\n        'mxf',\n        'roq',\n        'nsv',\n        'flv',\n        'f4v',\n        'f4p',\n        'f4a',\n        'f4b',\n    ],\n    audio: [\n        'aac',\n        'aiff',\n        'ape',\n        'au',\n        'flac',\n        'gsm',\n        'it',\n        'm3u',\n        'm4a',\n        'mid',\n        'mod',\n        'mp3',\n        'mpa',\n        'pls',\n        'ra',\n        's3m',\n        'sid',\n        'wav',\n        'wma',\n        'xm',\n    ],\n    archive: [\n        '7z',\n        'a',\n        'ace',\n        'apk',\n        'ar',\n        'arc',\n        'bz2',\n        'cab',\n        'chm',\n        'cpio',\n        'deb',\n        'dmg',\n        'ear',\n        'egg',\n        'epub',\n        'gz',\n        'iso',\n        'jar',\n        'lz',\n        'lzma',\n        'lzo',\n        'mar',\n        'pea',\n        'pet',\n        'pkg',\n        'rar',\n        'rpm',\n        's7z',\n        'sit',\n        'sitx',\n        'shar',\n        'tar',\n        'tbz2',\n        'tgz',\n        'tlz',\n        'txz',\n        'war',\n        'whl',\n        'xpi',\n        'xz',\n        'zip',\n        'zipx',\n        'zst',\n    ],\n    powerpoint: ['ppt', 'odp'],\n    word: ['doc', 'docx', 'odt', 'docm', 'dot', 'dotm', 'dotx', 'wps', 'xps'],\n    text: [\n        'json',\n        'txt',\n        'log',\n        'md',\n        'msg',\n        'org',\n        'ebook',\n        'pages',\n        'rtf',\n        'rst',\n        'tex',\n        'wpd',\n        'wps',\n    ],\n    excel: [\n        'xls',\n        'xlsx',\n        'xlsm',\n        'xlsb',\n        'xltx',\n        'xltm',\n        'xlt',\n        'xml',\n        'xlam',\n        'xla',\n        'xlw',\n        'xlr',\n        'csv',\n    ],\n};\n// Todo add more icons here\nexport function getIcon(filename) {\n    const extension = filename.split('.').pop();\n    if (extension) {\n        const formattedExtension = extension.toLowerCase();\n        if (formattedExtension === 'pdf') {\n            return FileIcons.Pdf;\n        }\n        if (FILE_EXTENSIONS.powerpoint.includes(formattedExtension)) {\n            return FileIcons.Powerpoint;\n        }\n        if (FILE_EXTENSIONS.word.includes(formattedExtension)) {\n            return FileIcons.Word;\n        }\n        if (FILE_EXTENSIONS.text.includes(formattedExtension)) {\n            return FileIcons.Text;\n        }\n        if (FILE_EXTENSIONS.excel.includes(formattedExtension)) {\n            return FileIcons.Excel;\n        }\n        if (FILE_EXTENSIONS.image.includes(formattedExtension)) {\n            return FileIcons.Image;\n        }\n        if (FILE_EXTENSIONS.video.includes(formattedExtension)) {\n            return FileIcons.Video;\n        }\n        if (FILE_EXTENSIONS.audio.includes(formattedExtension)) {\n            return FileIcons.Audio;\n        }\n        if (FILE_EXTENSIONS.archive.includes(formattedExtension)) {\n            return FileIcons.Archive;\n        }\n    }\n    return FileIcons.Default;\n}\n//# sourceMappingURL=utils.js.map","export var FileUploadStatus;\n(function (FileUploadStatus) {\n    FileUploadStatus[FileUploadStatus[\"IN_PROGRESS\"] = 0] = \"IN_PROGRESS\";\n    FileUploadStatus[FileUploadStatus[\"UPLOADED\"] = 1] = \"UPLOADED\";\n    FileUploadStatus[FileUploadStatus[\"FAILED\"] = 2] = \"FAILED\";\n})(FileUploadStatus || (FileUploadStatus = {}));\n//# sourceMappingURL=enums.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport './styles.scss';\nimport { GeneralIcons, Icon } from '../../icon';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nexport function InlineError({ message }) {\n    return (_jsxs(\"div\", Object.assign({ className: `${NOKA_COLORS_CLASS} error-message`, role: \"alert\" }, { children: [_jsx(Icon, { icon: GeneralIcons.ExclaimationMark, tooltip: \"error\" }, void 0),\n            message] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport './styles.scss';\nimport { formatFileSize, getIcon, onDragOver, onDrop } from './utils';\nimport { GeneralIcons, Icon } from '../../icon';\nimport { InlineError } from '../inlineError';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nimport { FileUploadStatus } from './enums';\nexport function FileUploader(props) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    const [files, setFiles] = useState();\n    const [isDraggingOver, setDraggingOver] = useState(false);\n    const [errorMessage, setErrorMessage] = useState();\n    const [fileSizeMsg, setFileSizeMsg] = useState('');\n    const [selectedListedFileIndices, setSelectedListedFileIndices] = useState([]);\n    useEffect(() => {\n        if (typeof props.defaultValue === 'string') {\n            setFiles([new File([], props.defaultValue)]);\n        }\n        else if (props.defaultValue instanceof File) {\n            setFiles([props.defaultValue]);\n        }\n        else if (props.defaultValue instanceof FileList) {\n            setFiles(Array.from(props.defaultValue));\n        }\n        else if (props.defaultValue == null) {\n            setFiles(undefined);\n        }\n        else if (Array.isArray(props.defaultValue)) {\n            if (typeof props.defaultValue[0] === 'string') {\n                setFiles(props.defaultValue.map((filename) => new File([], filename)));\n            }\n            else if (props.defaultValue[0] instanceof File) {\n                setFiles(props.defaultValue);\n            }\n        }\n    }, [props.defaultValue]);\n    useEffect(() => {\n        var _a;\n        if ((_a = props.messageOverrides) === null || _a === void 0 ? void 0 : _a.fileSizeError) {\n            setFileSizeMsg(props.messageOverrides.fileSizeError(props.individualFileSizeLimit, props.totalFileSizeLimit));\n        }\n        else if (props.individualFileSizeLimit && props.totalFileSizeLimit) {\n            setFileSizeMsg(`Each file must be under ${formatFileSize(props.individualFileSizeLimit)}, with a total limit of ${formatFileSize(props.totalFileSizeLimit)}.`);\n        }\n        else if (props.individualFileSizeLimit) {\n            setFileSizeMsg(`Each file must be under ${formatFileSize(props.individualFileSizeLimit)}.`);\n        }\n        else if (props.totalFileSizeLimit) {\n            setFileSizeMsg(`The total size of files must not exceed ${formatFileSize(props.totalFileSizeLimit)}.`);\n        }\n        else {\n            setFileSizeMsg('');\n        }\n    }, [\n        props.individualFileSizeLimit,\n        props.totalFileSizeLimit,\n        (_a = props.messageOverrides) === null || _a === void 0 ? void 0 : _a.fileSizeError,\n    ]);\n    const fileBrowserButton = useRef(null);\n    const dropzone = useRef(null);\n    function launchFileBrowser(event) {\n        event.preventDefault();\n        if (fileBrowserButton.current) {\n            fileBrowserButton.current.click();\n        }\n    }\n    function removeFile(file, index) {\n        if (props.onRemove)\n            props.onRemove(file.name, index);\n        if (files) {\n            const removalIndex = files.findIndex((f) => f.name === file.name);\n            const newFiles = [...files.slice(0, removalIndex), ...files.slice(removalIndex + 1)];\n            if (newFiles.length === 0) {\n                setFiles(undefined);\n            }\n            else {\n                setFiles(newFiles);\n            }\n            if (fileBrowserButton.current) {\n                fileBrowserButton.current.value = '';\n            }\n        }\n    }\n    function startUpload(event) {\n        var _a, _b;\n        const newFiles = Array.from(event.target.files || []);\n        if (newFiles.length === 0) {\n            return;\n        }\n        if (props.individualFileSizeLimit &&\n            newFiles.some((f) => f.size > props.individualFileSizeLimit)) {\n            setErrorMessage(fileSizeMsg);\n            return;\n        }\n        if (props.totalFileSizeLimit &&\n            newFiles.reduce((totalSize, f) => totalSize + f.size, 0) > props.totalFileSizeLimit) {\n            setErrorMessage(fileSizeMsg);\n            return;\n        }\n        if (files) {\n            const existingFileNames = files.map((f) => f.name);\n            const duplicateFileName = (_a = newFiles.find((f) => existingFileNames.includes(f.name))) === null || _a === void 0 ? void 0 : _a.name;\n            if (duplicateFileName) {\n                setErrorMessage(((_b = props.messageOverrides) === null || _b === void 0 ? void 0 : _b.duplicateFileNameError)\n                    ? props.messageOverrides.duplicateFileNameError(duplicateFileName)\n                    : `A file with the name ${duplicateFileName} already exists.`);\n            }\n        }\n        setErrorMessage(undefined);\n        if (props.onUpload)\n            props.onUpload(newFiles);\n        if (props.isMultiple) {\n            if (newFiles.length > 0) {\n                setFiles([...(files || []), ...newFiles]);\n            }\n        }\n        else {\n            setFiles(newFiles);\n        }\n    }\n    function retryUpload(file) {\n        if (props.onUpload) {\n            props.onUpload([file]);\n        }\n    }\n    const dropZoneClasses = React.useMemo(() => {\n        const classes = ['dropZone'];\n        if (isDraggingOver) {\n            classes.push('draggedOver');\n        }\n        if (props.isDisabled) {\n            classes.push('disabled');\n        }\n        if (errorMessage) {\n            classes.push('error');\n        }\n        return classes.join(' ');\n    }, [isDraggingOver, props.isDisabled, errorMessage]);\n    const fileListSection = React.useMemo(() => {\n        var _a;\n        return (_jsx(\"section\", Object.assign({ className: \"file-list\", \"data-emptyprintmessage\": ((_a = props.messageOverrides) === null || _a === void 0 ? void 0 : _a.noFilesUploaded) || 'No files uploaded.' }, { children: files &&\n                Array.from(files).map((file, i) => {\n                    var _a, _b;\n                    const uploadHasFailed = props.fileStatuses &&\n                        props.fileStatuses[file.name] === FileUploadStatus.FAILED;\n                    const uploadProgress = uploadHasFailed\n                        ? 0\n                        : props.fileUploadProgress\n                            ? `${props.fileUploadProgress[file.name]}%`\n                            : 0;\n                    const isSelected = selectedListedFileIndices.includes(i);\n                    const classNames = ['file'];\n                    if (uploadHasFailed) {\n                        classNames.push('error');\n                    }\n                    if (props.onListedFileSelected) {\n                        classNames.push('clickable');\n                    }\n                    if (props.persistListedFileSelections && isSelected) {\n                        classNames.push('selected');\n                    }\n                    return (_jsxs(\"div\", Object.assign({ className: classNames.join(' '), onClick: () => {\n                            if (props.onListedFileSelected) {\n                                if (props.persistListedFileSelections) {\n                                    if (isSelected) {\n                                        const indexToRemove = selectedListedFileIndices.findIndex((x) => x === i);\n                                        setSelectedListedFileIndices([\n                                            ...selectedListedFileIndices.slice(0, indexToRemove),\n                                            ...selectedListedFileIndices.slice(indexToRemove + 1),\n                                        ]);\n                                    }\n                                    else {\n                                        setSelectedListedFileIndices([...selectedListedFileIndices, i]);\n                                    }\n                                }\n                                props.onListedFileSelected(file, isSelected);\n                            }\n                        } }, { children: [_jsxs(\"div\", Object.assign({ className: \"file-info\" }, { children: [_jsx(Icon, { icon: getIcon(file.name), size: \"2x\", extraClassName: \"file-icon\" }, void 0),\n                                    _jsxs(\"div\", Object.assign({ className: \"main\" }, { children: [file.name,\n                                            file.size > 0 && (_jsx(\"span\", Object.assign({ className: \"file-size\" }, { children: formatFileSize(file.size) }), void 0))] }), void 0),\n                                    uploadHasFailed && (_jsx(Icon, { icon: GeneralIcons.Redo, onClick: () => retryUpload(file), tooltip: ((_a = props.messageOverrides) === null || _a === void 0 ? void 0 : _a.removeFileTooltip) || 'Retry', extraClassName: \"retry\" }, void 0)),\n                                    _jsx(Icon, { icon: GeneralIcons.Remove, onClick: () => removeFile(file, i), tooltip: ((_b = props.messageOverrides) === null || _b === void 0 ? void 0 : _b.removeFileTooltip) || 'Remove', extraClassName: \"remove\" }, void 0)] }), void 0),\n                            file.size > 0 && (_jsx(\"div\", Object.assign({ className: `progress-bar ${uploadProgress === '100%' ? 'complete' : ''}` }, { children: _jsx(\"div\", { className: \"progress-bar-fill\", style: { width: uploadProgress } }, void 0) }), void 0))] }), `file_${i}`));\n                }) }), void 0));\n    }, [files, props.fileStatuses, props.fileUploadProgress]);\n    return (_jsxs(_Fragment, { children: [_jsxs(\"div\", Object.assign({ className: `${NOKA_COLORS_CLASS} file-upload-control` }, { children: [_jsxs(\"section\", Object.assign({ className: dropZoneClasses, onDragEnter: () => setDraggingOver(true), onDragLeave: (e) => {\n                            var _a;\n                            if (!((_a = dropzone.current) === null || _a === void 0 ? void 0 : _a.contains(e.target))) {\n                                setDraggingOver(false);\n                            }\n                        }, onMouseLeave: () => setDraggingOver(false), onDragOver: onDragOver, onDrop: (e) => onDrop(e, files, setFiles, setDraggingOver), ref: dropzone }, { children: [_jsx(\"input\", { ref: fileBrowserButton, type: \"file\", name: props.inputName, onChange: startUpload, multiple: props.isMultiple, accept: (_b = props.supportedFileExtensions) === null || _b === void 0 ? void 0 : _b.join(',') }, void 0),\n                            props.uploadIcon !== null && (_jsx(Icon, { icon: props.uploadIcon || GeneralIcons.Upload, extraClassName: \"upload-icon\", size: \"4x\" }, void 0)),\n                            _jsxs(\"div\", Object.assign({ className: \"instructions\" }, { children: [_jsxs(\"p\", { children: [((_c = props.messageOverrides) === null || _c === void 0 ? void 0 : _c.browsePrefix) || 'Drag and drop files here or ',\n                                            props.isDisabled ? (((_d = props.messageOverrides) === null || _d === void 0 ? void 0 : _d.browse) || 'browse') : (_jsx(\"a\", Object.assign({ href: \"#\", onClick: (e) => launchFileBrowser(e), rel: \"noreferrer\" }, { children: ((_e = props.messageOverrides) === null || _e === void 0 ? void 0 : _e.browse) || 'browse' }), void 0)),\n                                            (_f = props.messageOverrides) === null || _f === void 0 ? void 0 : _f.browseSuffix] }, void 0),\n                                    _jsxs(\"p\", Object.assign({ className: \"further-descriptions\" }, { children: [props.supportedFileExtensions && (_jsxs(_Fragment, { children: [((_g = props.messageOverrides) === null || _g === void 0 ? void 0 : _g.supportedFileFormats) ||\n                                                        `Supported file formats: ${props.supportedFileExtensions.join(', ')}`,\n                                                    _jsx(\"br\", {}, void 0)] }, void 0)),\n                                            props.isMultiple\n                                                ? ((_h = props.messageOverrides) === null || _h === void 0 ? void 0 : _h.multipleFilesSupported) ||\n                                                    'Multiple files may be selected.'\n                                                : ((_j = props.messageOverrides) === null || _j === void 0 ? void 0 : _j.singleSelectionOnly) ||\n                                                    'Only one file may be selected.',\n                                            fileSizeMsg && (_jsxs(_Fragment, { children: [_jsx(\"br\", {}, void 0),\n                                                    fileSizeMsg] }, void 0))] }), void 0)] }), void 0)] }), void 0),\n                    fileListSection] }), void 0),\n            errorMessage && _jsx(InlineError, { message: fileSizeMsg }, void 0)] }, void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport './styles.scss';\nimport { Icon } from '../../icon';\nimport { getIcon } from './utils';\nexport const ReadOnlyFileUploader = ({ filenames }) => (_jsx(\"div\", Object.assign({ className: \"file-upload-control readonly\" }, { children: _jsx(\"section\", Object.assign({ className: \"file-list\" }, { children: filenames.map((name, i) => (_jsx(\"div\", Object.assign({ className: \"file\" }, { children: _jsxs(\"div\", Object.assign({ className: \"file-info\" }, { children: [_jsx(Icon, { icon: getIcon(name), size: \"2x\", extraClassName: \"file-icon\" }, void 0),\n                    _jsx(\"div\", Object.assign({ className: \"main\" }, { children: name }), void 0)] }), void 0) }), `file_${i}`))) }), void 0) }), void 0));\n//# sourceMappingURL=readonly.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withReadOnlySwitch } from '../readonly';\nimport { FileUploader } from './view';\nimport { ReadOnlyFileUploader } from './readonly.view';\nexport const FileUploaderContainer = withReadOnlySwitch((props) => _jsx(FileUploader, Object.assign({}, props), void 0), (props) => (_jsx(ReadOnlyFileUploader, { filenames: Array.isArray(props.defaultValue)\n        ? props.defaultValue\n        : [props.defaultValue] }, void 0)));\n//# sourceMappingURL=container.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport './styles.scss';\nimport { formatMoney, stripNonMoneyValues } from '../../utils/formatters';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nexport function MoneyInput(props) {\n    const [displayValue, setDisplayValue] = useState('');\n    const [numericValue, setNumericValue] = useState(0);\n    const moneySymbol = useRef('$');\n    useEffect(() => {\n        if (props.defaultValue !== undefined) {\n            setDisplayValue(formatMoney(props.defaultValue, props.currencyCode));\n            setNumericValue(typeof props.defaultValue === 'string'\n                ? parseFloat(stripNonMoneyValues(props.defaultValue))\n                : props.defaultValue);\n        }\n        else {\n            setDisplayValue('');\n            setNumericValue(0);\n        }\n    }, [props.defaultValue]);\n    function onBlur() {\n        if (displayValue) {\n            const parsed = parseFloat(displayValue);\n            setNumericValue(parsed);\n            setDisplayValue(formatMoney(parsed, props.currencyCode));\n            if (props.onBlur)\n                props.onBlur(parsed);\n        }\n    }\n    useEffect(() => {\n        if (props.currencyCode) {\n            moneySymbol.current = (0)\n                .toLocaleString(props.currencyCode, {\n                style: 'currency',\n                currency: props.currencyCode,\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            })\n                .replace(/\\d/g, '')\n                .trim();\n        }\n        else {\n            moneySymbol.current = '$';\n        }\n    }, [props.currencyCode]);\n    return (_jsxs(\"div\", Object.assign({ className: `${NOKA_COLORS_CLASS} money-control` }, { children: [_jsx(\"div\", Object.assign({ className: \"money-symbol\" }, { children: moneySymbol.current }), void 0),\n            _jsx(\"input\", Object.assign({}, (props.displayInputProps || {}), { value: displayValue, onChange: (e) => {\n                    const value = stripNonMoneyValues(e.target.value);\n                    setDisplayValue(value);\n                    if (props.onChange)\n                        props.onChange(parseFloat(value));\n                }, onBlur: onBlur, onKeyPress: (e) => {\n                    if (e.key === 'Enter') {\n                        onBlur();\n                    }\n                }, className: \"money\" }), void 0),\n            _jsx(\"input\", Object.assign({}, (props.hiddenInputProps || {}), { style: { display: 'none' }, value: numericValue, readOnly: true }), void 0)] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withReadOnlySwitch } from '../readonly';\nimport { MoneyInput } from './view';\nimport { formatMoney } from '../../utils/formatters';\nexport const MoneyInputContainer = withReadOnlySwitch((props) => _jsx(MoneyInput, Object.assign({}, props), void 0), (props) => formatMoney(props.defaultValue, props.currencyCode, false));\n//# sourceMappingURL=container.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport '../inlineError/styles.scss';\nimport './styles.scss';\nimport { GeneralIcons, Icon } from '../../icon';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nexport const PageError = React.forwardRef(({ message }, ref) => {\n    return (_jsxs(\"div\", Object.assign({ ref: ref, className: `${NOKA_COLORS_CLASS} error-message page-error` }, { children: [_jsx(Icon, { icon: GeneralIcons.ExclaimationMark, tooltip: \"error\" }, void 0),\n            _jsx(\"span\", { children: message }, void 0)] }), void 0));\n});\n//# sourceMappingURL=view.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport toc from 'remark-toc';\n// @ts-expect-error\nimport rehypeHighlight from 'rehype-highlight';\nimport './styles.scss';\nimport { Checkbox } from '../standaloneControls';\nexport const UPLOADED_IMAGE_PREFIX = 'uploaded:';\nconst DEFAULT_OPTIONS = (uploadedImages) => ({\n    remarkPlugins: [gfm, toc],\n    rehypePlugins: [[rehypeHighlight, { ignoreMissing: true }]],\n    components: {\n        input: (props) => {\n            return (_jsx(Checkbox, { label: \"\", htmlProps: { defaultChecked: props.checked, disabled: props.disabled } }, props.key));\n        },\n        li: (props) => {\n            if (props.checked !== null) {\n                const { children, ordered: _ } = props, rest = __rest(props, [\"children\", \"ordered\"]);\n                return (_jsxs(\"li\", Object.assign({}, rest, { children: [children[0],\n                        children[2]] }), void 0));\n            }\n            return _jsx(\"li\", Object.assign({}, props), void 0);\n        },\n        a: (props) => {\n            return (_jsx(\"a\", Object.assign({ href: props.href, target: \"_blank\", rel: \"noreferrer\" }, { children: props.children ? props.children[0] : props.href || '(link)' }), void 0));\n        },\n        img: (props) => {\n            var _a;\n            if ((_a = props.src) === null || _a === void 0 ? void 0 : _a.startsWith(UPLOADED_IMAGE_PREFIX)) {\n                const formattedFilename = props.src.replace(UPLOADED_IMAGE_PREFIX, '').trim();\n                if (uploadedImages && formattedFilename in uploadedImages) {\n                    return _jsx(\"img\", { src: uploadedImages[formattedFilename], alt: props.alt }, void 0);\n                }\n                else {\n                    return 'Error retrieving the uploaded image!';\n                }\n            }\n            return _jsx(\"img\", { src: props.src || '', alt: props.alt }, void 0);\n        },\n    },\n    className: 'noka-markdown-renderer',\n});\nexport const MarkdownRenderer = ({ value, options, uploadedImages }) => {\n    const defaultOptions = DEFAULT_OPTIONS(uploadedImages);\n    return (_jsx(ReactMarkdown, Object.assign({}, (options ? options(defaultOptions) : defaultOptions), { children: value }), void 0));\n};\n//# sourceMappingURL=view.js.map","export function formatFilenameForMarkdownRenderer(name) {\n    return name.replace(/ /g, '');\n}\nexport function formatImageDataString(mimeType, rawImageData) {\n    return `data:${mimeType};base64,${rawImageData}`;\n}\n//# sourceMappingURL=utils.js.map","import { faBold, faCode, faHeading, faItalic, faLink, faList, faListOl, faQuoteRight, faStrikethrough, faTable, } from '@fortawesome/free-solid-svg-icons';\nimport { faCheckSquare, faImage } from '@fortawesome/free-regular-svg-icons';\nimport { UPLOADED_IMAGE_PREFIX } from '../../../markdownRenderer';\nexport function containsLinebreaks(text) {\n    return /\\r|\\n/.test(text);\n}\nfunction withLineBreaks(code, desiredNumber, textIsEmpty, numLineBreaksBeforeSelection) {\n    if (textIsEmpty) {\n        return code;\n    }\n    const numToAdd = desiredNumber - numLineBreaksBeforeSelection;\n    if (numToAdd <= 0) {\n        return code;\n    }\n    const linebreaks = Array.from({ length: numToAdd })\n        .map(() => '\\n')\n        .join('');\n    return `${linebreaks}${code}`;\n}\nexport const IMAGE_CONTROL_INDEX = 8;\n/** null = spacer */\nexport const CONTROLS = [\n    {\n        icon: faHeading,\n        tooltip: 'Header',\n        settings: {\n            noSelections: (fullText) => `${fullText}### `,\n            withSelections: (selection) => {\n                const [firstLine, ...otherLines] = selection.split('\\n');\n                return {\n                    value: `### ${firstLine}\\n\\n${otherLines.join('\\n')}`,\n                    selectionRangeStart: 4,\n                    selectionRangeEnd: 4 + firstLine.length,\n                };\n            },\n        },\n    },\n    {\n        icon: faBold,\n        tooltip: 'Bold',\n        settings: {\n            noSelections: (fullText) => {\n                const newValue = `${fullText}**bolded text**`;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 13,\n                    selectionRangeEnd: length - 2,\n                };\n            },\n            withSelections: (selection) => `**${selection}**`,\n            selectionDeltaAfterChange: 2,\n        },\n    },\n    {\n        icon: faItalic,\n        tooltip: 'Italics',\n        settings: {\n            noSelections: (fullText) => {\n                const newValue = `${fullText}_italicized text_`;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 16,\n                    selectionRangeEnd: length - 1,\n                };\n            },\n            withSelections: (selection) => `_${selection}_`,\n            selectionDeltaAfterChange: 1,\n        },\n    },\n    {\n        icon: faStrikethrough,\n        tooltip: 'Strikethrough',\n        settings: {\n            noSelections: (fullText) => {\n                const newValue = `${fullText}~~strikethrough~~`;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 15,\n                    selectionRangeEnd: length - 2,\n                };\n            },\n            withSelections: (selection) => `~~${selection}~~`,\n            selectionDeltaAfterChange: 2,\n        },\n    },\n    null,\n    {\n        icon: faCode,\n        tooltip: 'Code',\n        settings: {\n            noSelections: (fullText) => {\n                const newValue = `${fullText}\\`code\\``;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 5,\n                    selectionRangeEnd: length - 1,\n                };\n            },\n            withSelections: (selection, textIsEmpty, numLineBreaksBeforeSelection) => containsLinebreaks(selection)\n                ? withLineBreaks('```js\\n' + selection + '\\n```\\n\\n', 2, textIsEmpty, numLineBreaksBeforeSelection)\n                : `\\`${selection}\\``,\n            selectionDeltaAfterChange: (selection) => containsLinebreaks(selection) ? 3 : 1,\n        },\n    },\n    {\n        icon: faQuoteRight,\n        tooltip: 'Quote',\n        settings: {\n            noSelections: (fullText) => (fullText ? `${fullText}\\n\\n>` : '>'),\n            withSelections: (selection) => {\n                if (containsLinebreaks(selection)) {\n                    const lines = selection.split('\\n');\n                    return {\n                        value: lines.map((line) => `> ${line}  `).join('\\n'),\n                        selectionRangeStart: 0,\n                        selectionRangeEnd: 0,\n                    };\n                }\n                const newValue = `> ${selection}`;\n                return {\n                    value: newValue,\n                    selectionRangeStart: 2,\n                    selectionRangeEnd: newValue.length,\n                };\n            },\n        },\n    },\n    {\n        icon: faLink,\n        tooltip: 'Link',\n        settings: {\n            noSelections: (fullText) => {\n                const newValue = `${fullText}[](url)`;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 4,\n                    selectionRangeEnd: length - 1,\n                };\n            },\n            withSelections: (selection) => {\n                if (selection.startsWith('http://') || selection.startsWith('https://')) {\n                    const newValue = `[text](${selection})`;\n                    return {\n                        value: newValue,\n                        selectionRangeStart: 1,\n                        selectionRangeEnd: 5,\n                    };\n                }\n                const newValue = `[${selection}](url)`;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 4,\n                    selectionRangeEnd: length - 1,\n                };\n            },\n        },\n    },\n    {\n        icon: faImage,\n        tooltip: 'Image',\n        settings: {\n            noSelections: (fullText) => {\n                const newValue = `${fullText}![](url)`;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 4,\n                    selectionRangeEnd: length - 1,\n                };\n            },\n            withSelections: (selection) => {\n                if (selection.startsWith('http://') || selection.startsWith('https://')) {\n                    const newValue = `![text](${selection})`;\n                    return {\n                        value: newValue,\n                        selectionRangeStart: 2,\n                        selectionRangeEnd: 6,\n                    };\n                }\n                const newValue = `![${selection}](url)`;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 4,\n                    selectionRangeEnd: length - 1,\n                };\n            },\n        },\n    },\n    null,\n    {\n        icon: faList,\n        tooltip: 'Bulleted List',\n        settings: {\n            noSelections: (fullText) => {\n                const code = '- Item';\n                const newValue = fullText ? `${fullText}\\n\\n${code}` : code;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 4,\n                    selectionRangeEnd: length,\n                };\n            },\n            withSelections: (selection, textIsEmpty, numLineBreaksBeforeSelection) => {\n                if (containsLinebreaks(selection)) {\n                    const lines = selection.split('\\n');\n                    const newLines = lines.map((line) => `- ${line}`).join('\\n');\n                    const newValue = withLineBreaks(newLines, 2, textIsEmpty, numLineBreaksBeforeSelection);\n                    return {\n                        value: newValue,\n                        selectionRangeStart: 0,\n                        selectionRangeEnd: newValue.length,\n                    };\n                }\n                return {\n                    value: `- ${selection}`,\n                    selectionRangeStart: 2,\n                    selectionRangeEnd: selection.length + 2,\n                };\n            },\n        },\n    },\n    {\n        icon: faListOl,\n        tooltip: 'Numbered List',\n        settings: {\n            noSelections: (fullText) => {\n                const code = '1. Item';\n                const newValue = fullText ? `${fullText}\\n\\n${code}` : code;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 4,\n                    selectionRangeEnd: length,\n                };\n            },\n            withSelections: (selection, textIsEmpty, numLineBreaksBeforeSelection) => {\n                let newValue = `1. ${selection}`;\n                if (containsLinebreaks(selection)) {\n                    const lines = selection.split('\\n');\n                    const newLines = lines.map((line, i) => `${i + 1}. ${line}`).join('\\n');\n                    newValue = newLines;\n                }\n                const finalNewValue = withLineBreaks(newValue, 2, textIsEmpty, numLineBreaksBeforeSelection);\n                return {\n                    value: finalNewValue,\n                    selectionRangeStart: 0,\n                    selectionRangeEnd: finalNewValue.length,\n                };\n            },\n        },\n    },\n    {\n        icon: faCheckSquare,\n        tooltip: 'Checklist',\n        settings: {\n            noSelections: (fullText) => {\n                const code = '* [ ] Item';\n                const newValue = fullText ? `${fullText}\\n\\n${code}` : code;\n                const length = newValue.length;\n                return {\n                    value: newValue,\n                    selectionRangeStart: length - 4,\n                    selectionRangeEnd: length,\n                };\n            },\n            withSelections: (selection, textIsEmpty, numLineBreaksBeforeSelection) => {\n                if (containsLinebreaks(selection)) {\n                    const lines = selection.split('\\n');\n                    const newLines = lines.map((line) => `* [ ] ${line}`).join('\\n');\n                    return withLineBreaks(newLines, 2, textIsEmpty, numLineBreaksBeforeSelection);\n                }\n                return `* [ ] ${selection}`;\n            },\n        },\n    },\n    {\n        icon: faTable,\n        tooltip: 'Table',\n        settings: {\n            noSelections: (fullText, textIsEmpty, numLineBreaksAtEndOfText) => {\n                const code = withLineBreaks(TABLE_CODE, 2, textIsEmpty, numLineBreaksAtEndOfText);\n                return `${fullText}${code}`;\n            },\n            withSelections: (selection, textIsEmpty, numLineBreaksBeforeSelection) => {\n                const code = withLineBreaks(TABLE_CODE, 2, textIsEmpty, numLineBreaksBeforeSelection);\n                return `${selection}${code}`;\n            },\n        },\n    },\n];\nconst TABLE_CODE = `| Center Aligned | Left Aligned | Right Aligned |\n| -------------- | :----------- | -------------: |\n| Row 1          |              |                |\n| Row 2          | Code does not need good spacing! | |`;\nexport function getNumLinebreaksAtEnd(text) {\n    let numLinebreaksAtEnd = 0;\n    for (let i = text.length - 1; i >= 0; i--) {\n        if (text[i] === '\\n')\n            numLinebreaksAtEnd++;\n        else\n            break;\n    }\n    return numLinebreaksAtEnd;\n}\nexport const ADD_UPLOADED_IMAGE_SETTINGS = (filename) => ({\n    noSelections: (fullText) => {\n        const newValue = `${fullText}![${filename}](${UPLOADED_IMAGE_PREFIX}${filename})`;\n        const length = newValue.length;\n        return {\n            value: newValue,\n            selectionRangeStart: length,\n            selectionRangeEnd: length,\n        };\n    },\n    withSelections: (selection) => {\n        const newValue = `[${selection}](${UPLOADED_IMAGE_PREFIX}${filename})`;\n        const length = newValue.length;\n        return {\n            value: newValue,\n            selectionRangeStart: length,\n            selectionRangeEnd: length,\n        };\n    },\n});\nexport const ADD_IMAGE_BY_URL_SETTINGS = (url) => ({\n    noSelections: (fullText) => {\n        const newValue = `${fullText}![](${url})`;\n        const length = newValue.length;\n        return {\n            value: newValue,\n            selectionRangeStart: length,\n            selectionRangeEnd: length,\n        };\n    },\n    withSelections: (selection) => {\n        const newValue = `![${selection}](${url})`;\n        const length = newValue.length;\n        return {\n            value: newValue,\n            selectionRangeStart: length,\n            selectionRangeEnd: length,\n        };\n    },\n});\n//# sourceMappingURL=utils.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport './styles.scss';\nimport { GeneralIcons, Icon } from '../icon';\nimport { useClickOutside } from '../utils/clickOutside.hook';\nexport const Modal = (props) => {\n    const ref = useClickOutside(!!props.closeOnClickOutside, () => props.setOpen(false));\n    return (_jsx(\"div\", Object.assign({ className: `background-overlay ${props.className || ''}`, id: props.id }, { children: _jsxs(\"article\", Object.assign({ className: \"modal\", style: props.width ? { width: props.width } : {}, ref: ref }, { children: [_jsx(Icon, { icon: GeneralIcons.Close, extraClassName: \"modal-close\", onClick: () => props.setOpen(false) }, void 0),\n                (props.headerText || props.icon) && (_jsxs(\"section\", Object.assign({ className: \"modal-header\" }, { children: [props.icon && _jsx(Icon, { icon: props.icon, size: \"2x\" }, void 0),\n                        _jsx(\"span\", { children: props.headerText }, void 0)] }), void 0)),\n                _jsx(\"section\", Object.assign({ className: \"modal-contents\" }, { children: props.children }), void 0),\n                _jsxs(\"section\", Object.assign({ className: \"modal-footer button-container\" }, { children: [props.buttons,\n                        props.showCloseButton && (_jsx(\"button\", Object.assign({ onClick: () => {\n                                props.setOpen(false);\n                                if (props.onClose)\n                                    props.onClose();\n                            }, className: \"primary\" }, { children: props.closeButtonText || 'Close' }), void 0))] }), void 0)] }), void 0) }), void 0));\n};\n//# sourceMappingURL=view.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\nimport { FileUploader } from '../../fileUpload';\nimport { Modal } from '../../../modal';\nimport { Input, InputType } from '../../input';\nimport { ADD_IMAGE_BY_URL_SETTINGS, ADD_UPLOADED_IMAGE_SETTINGS, } from './utils';\nimport { formatFilenameForMarkdownRenderer, formatImageDataString, } from '../../../markdownRenderer';\nexport function fileToUploadedImage(file) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const buffer = yield file.arrayBuffer();\n        const bytes = [].slice.call(new Uint8Array(buffer));\n        const binary = bytes.reduce((result, b) => (result += String.fromCharCode(b)), '');\n        const imageData = btoa(binary);\n        const imageDataStr = formatImageDataString(file.type, imageData);\n        return {\n            formattedFilename: formatFilenameForMarkdownRenderer(file.name),\n            imageData: imageDataStr,\n            fileObject: file,\n        };\n    });\n}\nexport const ImageUploadModal = (props) => {\n    var _a, _b, _c, _d, _e;\n    const [imageUploaderUrl, setImageUploaderUrl] = useState();\n    if (!props.show) {\n        return null;\n    }\n    const _f = props.imageUploaderProperties || {}, { onUpload: customOnImageUpload, onRemove: customOnImageRemove } = _f, customImageUploaderProperties = __rest(_f, [\"onUpload\", \"onRemove\"]);\n    function onImageUpload(files) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const newlyUploadedImages = yield Promise.all(files.map(fileToUploadedImage));\n            props.setUplodedImages([...props.uploadedImages, ...newlyUploadedImages]);\n        });\n    }\n    function onImageRemove(filename) {\n        const fn = formatFilenameForMarkdownRenderer(filename);\n        const index = props.uploadedImages.findIndex((x) => x.formattedFilename === fn);\n        props.setUplodedImages([\n            ...props.uploadedImages.slice(0, index),\n            ...props.uploadedImages.slice(index + 1),\n        ]);\n    }\n    function onUploadedImageSelected(file) {\n        props.addText(ADD_UPLOADED_IMAGE_SETTINGS(formatFilenameForMarkdownRenderer(file.name)))();\n    }\n    return (_jsxs(Modal, Object.assign({ setOpen: props.setShowImageUploader, icon: faImage, headerText: ((_a = props.messageOverrides) === null || _a === void 0 ? void 0 : _a.header) || 'Upload Image', className: \"textarea-image-upload-modal\", width: 600, closeOnClickOutside: true, buttons: imageUploaderUrl && (_jsx(\"button\", Object.assign({ type: \"button\", onClick: () => {\n                props.addText(ADD_IMAGE_BY_URL_SETTINGS(imageUploaderUrl))();\n                props.setShowImageUploader(false);\n                setImageUploaderUrl(undefined);\n            } }, { children: ((_b = props.messageOverrides) === null || _b === void 0 ? void 0 : _b.addButtonLabel) || 'Add' }), void 0)) }, { children: [_jsx(\"div\", Object.assign({ className: \"instructions\" }, { children: ((_c = props.messageOverrides) === null || _c === void 0 ? void 0 : _c.instructions) || 'Click on an uploaded image to add it.' }), void 0),\n            _jsx(FileUploader, Object.assign({}, customImageUploaderProperties, { supportedFileExtensions: ['.jpg', '.jpeg', '.png'], onListedFileSelected: onUploadedImageSelected, onUpload: (files) => {\n                    if (customOnImageUpload) {\n                        customOnImageUpload(files);\n                    }\n                    if (onImageUpload) {\n                        onImageUpload(files);\n                    }\n                }, onRemove: (filename, index) => {\n                    if (customOnImageRemove) {\n                        customOnImageRemove(filename, index);\n                    }\n                    if (onImageRemove) {\n                        onImageRemove(filename);\n                    }\n                }, defaultValue: props.uploadedImages.map((i) => i.fileObject) }), void 0),\n            _jsxs(\"div\", Object.assign({ className: \"input-section\" }, { children: [_jsx(\"label\", { children: ((_d = props.messageOverrides) === null || _d === void 0 ? void 0 : _d.enterImageUrlLabel) || 'Or, enter an image URL:' }, void 0),\n                    _jsx(Input, { type: InputType.TEXT, htmlProps: {\n                            placeholder: ((_e = props.messageOverrides) === null || _e === void 0 ? void 0 : _e.enterImageUrlPlaceholder) || 'https://...',\n                        }, onChange: (value) => {\n                            if (value && value.trim() !== '') {\n                                setImageUploaderUrl(value);\n                            }\n                        } }, void 0)] }), void 0)] }), void 0));\n};\n//# sourceMappingURL=imageUploadModal.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useMemo, useState } from 'react';\nimport { Icon } from '../../../icon';\nimport { useRef } from 'react';\nimport { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { CONTROLS, getNumLinebreaksAtEnd, IMAGE_CONTROL_INDEX, } from './utils';\nimport { MarkdownRenderer } from '../../../markdownRenderer';\nimport { fileToUploadedImage, ImageUploadModal } from './imageUploadModal';\nexport function useMarkdown(use, defaultValue, customOnChange, allowImageUpload, isDisabled, imageUploaderProperties, messageOverrides) {\n    const [value, setValue] = useState('');\n    const ref = useRef(null);\n    const currentSelection = useRef();\n    const currentSelectionDeltaAfterChange = useRef(0);\n    const [uploadedImages, setUplodedImages] = useState([]);\n    const [showImageUploader, setShowImageUploader] = useState(false);\n    useEffect(() => {\n        if (use) {\n            setValue(defaultValue || '');\n        }\n    }, [defaultValue, use]);\n    useEffect(() => {\n        if (imageUploaderProperties) {\n            const defaultUploadedImages = imageUploaderProperties.defaultValue;\n            if (defaultValue == null) {\n                setUplodedImages([]);\n            }\n            else if (defaultUploadedImages instanceof File) {\n                fileToUploadedImage(defaultUploadedImages).then((image) => {\n                    setUplodedImages([image]);\n                });\n            }\n            else if (Array.isArray(defaultUploadedImages) &&\n                defaultUploadedImages.length > 0 &&\n                defaultUploadedImages[0] instanceof File) {\n                Promise.all(defaultUploadedImages.map(fileToUploadedImage)).then((images) => setUplodedImages(images));\n            }\n        }\n    }, [imageUploaderProperties === null || imageUploaderProperties === void 0 ? void 0 : imageUploaderProperties.defaultValue]);\n    useEffect(() => {\n        if (isDisabled && showImageUploader) {\n            setShowImageUploader(false);\n        }\n    }, [isDisabled]);\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if (isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        }\n        if (customOnChange && (value !== defaultValue || '')) {\n            // @ts-expect-error\n            customOnChange({ target: { value } });\n        }\n        if (ref.current) {\n            ref.current.focus();\n            if (currentSelection.current) {\n                const delta = currentSelectionDeltaAfterChange.current;\n                ref.current.setSelectionRange(currentSelection.current.start + delta, currentSelection.current.end + delta);\n                currentSelection.current = undefined;\n            }\n        }\n    }, [value, customOnChange]);\n    if (!use) {\n        return {\n            formattingControlsJsx: null,\n            value: undefined,\n            textareaRef: ref,\n            onChange: customOnChange,\n        };\n    }\n    const addText = useCallback((settings) => {\n        return () => {\n            if (ref.current === null) {\n                return;\n            }\n            currentSelection.current = {\n                start: ref.current.selectionStart,\n                end: ref.current.selectionEnd,\n            };\n            const selection = currentSelection.current;\n            function getResult(result, selectionOffset) {\n                if (typeof result === 'object') {\n                    currentSelection.current = {\n                        start: selectionOffset + result.selectionRangeStart,\n                        end: selectionOffset + result.selectionRangeEnd,\n                    };\n                    return result.value;\n                }\n                return result;\n            }\n            if (selection.start === selection.end) {\n                currentSelectionDeltaAfterChange.current = 0;\n                setValue((value) => getResult(settings.noSelections(value, value.length === 0, getNumLinebreaksAtEnd(value)), 0));\n            }\n            else {\n                setValue((value) => {\n                    const parts = {\n                        start: value.slice(0, selection.start),\n                        selection: value.slice(selection.start, selection.end),\n                        end: value.slice(selection.end),\n                    };\n                    currentSelectionDeltaAfterChange.current =\n                        typeof settings.selectionDeltaAfterChange === 'function'\n                            ? settings.selectionDeltaAfterChange(parts.selection)\n                            : settings.selectionDeltaAfterChange || 0;\n                    const result = getResult(settings.withSelections(parts.selection, parts.start.length === 0, getNumLinebreaksAtEnd(parts.start)), parts.start.length);\n                    return `${parts.start}${result}${parts.end}`;\n                });\n            }\n        };\n    }, [ref, setValue]);\n    const jsx = useMemo(() => (_jsx(\"section\", Object.assign({ className: `textarea-formatting-controls ${isDisabled ? 'disabled' : ''}` }, { children: CONTROLS.map((c, i) => c ? (_jsx(Icon, { icon: c.icon, tooltip: c.tooltip, onClick: isDisabled\n                ? undefined\n                : allowImageUpload && i === IMAGE_CONTROL_INDEX\n                    ? () => setShowImageUploader(true)\n                    : addText(c.settings) }, `textarea-formatting-control-${i}`)) : (_jsx(\"span\", { className: \"spacer\" }, `textarea-formatting-spacer-${i}`))) }), void 0)), [isDisabled]);\n    const previewArea = useMemo(() => (_jsx(MarkdownRenderer, { value: value, uploadedImages: uploadedImages.reduce((result, image) => (Object.assign(Object.assign({}, result), { [image.formattedFilename]: image.imageData })), {}) }, void 0)), [value, uploadedImages]);\n    const CODE = {\n        bullet: '- ',\n        ol: /^[0-9]+\\. /,\n        task: '* [ ] ',\n        checkedTask: '* [ ] ',\n    };\n    const LIST_ITEM_CODE = Object.values(CODE).filter((c) => typeof c === 'string');\n    /** @returns true if setValue was called, false otherwise. */\n    function setValueBasedOnLastLine(lastLine, previousLines, codeToCheckFor) {\n        if (lastLine === codeToCheckFor) {\n            setValue(`${previousLines}\\n`);\n            return true;\n        }\n        else if (lastLine.startsWith(codeToCheckFor)) {\n            setValue((value) => `${value}\\n${codeToCheckFor}`);\n            return true;\n        }\n        return false;\n    }\n    function onKeyPress(e) {\n        if (ref.current && e.key === 'Enter') {\n            e.preventDefault();\n            e.stopPropagation();\n            const lines = ref.current.value.split('\\n');\n            const lastLine = lines[lines.length - 1];\n            const previousLines = lines.slice(0, -1).join('\\n');\n            const areValuesSet = LIST_ITEM_CODE.some((c) => setValueBasedOnLastLine(lastLine, previousLines, c));\n            if (!areValuesSet) {\n                const startsWithOl = CODE.ol.exec(lastLine);\n                if (startsWithOl) {\n                    const prefix = startsWithOl[0];\n                    if (lastLine === prefix) {\n                        setValue(`${previousLines}\\n`);\n                    }\n                    else {\n                        const nextNumber = parseInt(prefix.slice(0, -2)) + 1;\n                        setValue((value) => `${value}\\n${nextNumber}. `);\n                    }\n                }\n                else {\n                    setValue((value) => `${value}\\n`);\n                }\n            }\n        }\n    }\n    const imageUploadModal = React.useMemo(() => {\n        return (_jsx(ImageUploadModal, { show: showImageUploader, setShowImageUploader: setShowImageUploader, messageOverrides: messageOverrides, imageUploaderProperties: imageUploaderProperties, uploadedImages: uploadedImages, setUplodedImages: setUplodedImages, addText: addText }, void 0));\n    }, [\n        showImageUploader,\n        messageOverrides,\n        imageUploaderProperties,\n        uploadedImages,\n        addText,\n    ]);\n    return {\n        formattingControlsJsx: jsx,\n        value,\n        textareaRef: ref,\n        onChange: (e) => {\n            setValue(e.target.value);\n            if (customOnChange) {\n                customOnChange(e);\n            }\n        },\n        markdownPreviewArea: previewArea,\n        onKeyPress,\n        imageUploadModal,\n    };\n}\n//# sourceMappingURL=useMarkdown.hook.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport './styles.scss';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nimport { useMarkdown } from './useMarkdown';\nexport function Textarea(props) {\n    var _a, _b;\n    const classNames = [];\n    if (!props.characterLimit || props.characterLimit > 300) {\n        classNames.push('long');\n    }\n    if (props.allowHorizontalResize && props.allowVerticalResize) {\n        classNames.push('resizable');\n    }\n    else if (props.allowHorizontalResize) {\n        classNames.push('resizable-h');\n    }\n    else if (props.allowVerticalResize) {\n        classNames.push('resizable-v');\n    }\n    const _c = props.htmlProps || {}, { onChange: customOnChange } = _c, miscHtmlProps = __rest(_c, [\"onChange\"]);\n    const { formattingControlsJsx, markdownPreviewArea, value, textareaRef, onChange, onKeyPress, imageUploadModal, } = useMarkdown(!!props.useMarkdown, props.defaultValue, customOnChange, !!props.allowImageUpload, props.isDisabled, props.imageUploaderProperties, (_a = props.messageOverrides) === null || _a === void 0 ? void 0 : _a.imageUploadModal);\n    return (_jsxs(\"div\", Object.assign({ className: `${NOKA_COLORS_CLASS} textarea-wrapper` }, { children: [formattingControlsJsx,\n            _jsx(\"textarea\", Object.assign({}, miscHtmlProps, { onChange: onChange, defaultValue: value ? undefined : props.defaultValue, maxLength: props.characterLimit, className: classNames.join(' '), value: value, ref: textareaRef, onKeyPress: onKeyPress, disabled: props.isDisabled }), void 0),\n            props.characterLimit && (_jsxs(\"span\", Object.assign({ className: \"characterLimit-label\" }, { children: [((_b = props.messageOverrides) === null || _b === void 0 ? void 0 : _b.characterLimitLabel) || 'Character Limit', \":\", ' ',\n                    props.characterLimit] }), void 0)),\n            imageUploadModal,\n            markdownPreviewArea] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withReadOnlySwitch } from '../readonly';\nimport { Textarea } from './view';\nexport const TextareaContainer = withReadOnlySwitch((props) => _jsx(Textarea, Object.assign({}, props), void 0), (props) => props.defaultValue);\n//# sourceMappingURL=container.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { GeneralIcons, Icon } from '../../icon';\nimport { InlineError } from '../../standaloneControls/inlineError';\nexport const CONTROL_ID_DATA_ATTR = 'data-controlid';\nexport function FormControlWrapper(props) {\n    const classes = ['control'];\n    if (props.hasError) {\n        classes.push('error');\n    }\n    if (props.alignRight) {\n        classes.push('right-aligned');\n    }\n    if (props.isInline) {\n        classes.push('inline');\n    }\n    return (_jsxs(\"div\", Object.assign({ className: classes.join(' '), style: props.growthRatio !== undefined ? { flex: props.growthRatio } : {} }, { [CONTROL_ID_DATA_ATTR]: props.propertyPath }, { children: [props.label !== undefined && (_jsxs(\"label\", Object.assign({ htmlFor: props.propertyPath }, { children: [props.label || '\\u00A0',\n                    props.onInfoIconClicked && (_jsx(Icon, { icon: GeneralIcons.Info, tooltip: props.infoIconTooltip || 'Info', onClick: props.onInfoIconClicked, extraClassName: \"info\" }, void 0))] }), void 0)),\n            props.description && (_jsx(\"div\", Object.assign({ className: \"control-description\" }, { children: props.description }), void 0)),\n            _jsxs(\"div\", Object.assign({ className: \"control-child-wrapper\", style: { width: props.width } }, { children: [props.children,\n                    props.customElement] }), void 0),\n            props.errorMessage && _jsx(InlineError, { message: props.errorMessage }, void 0)] }), void 0));\n}\n//# sourceMappingURL=wrapper.view.js.map","import { FormInput } from './input.view';\nimport { FormRadio } from './radio.view';\nimport { FormCheckbox } from './checkbox.view';\nimport { FormTextarea } from './textarea.view';\nimport { FormAttachmentControl } from './attachment.view';\nimport { FormDropdown } from './dropdown.view';\nimport { FormMoneyInput } from './money.view';\nimport { FormControlWrapper } from './wrapper.view';\nimport { FormDateInput } from './date.view';\nexport const FormControls = {\n    Wrapper: FormControlWrapper,\n    Input: FormInput,\n    Radio: FormRadio,\n    Checkbox: FormCheckbox,\n    Textarea: FormTextarea,\n    Attachment: FormAttachmentControl,\n    Dropdown: FormDropdown,\n    Money: FormMoneyInput,\n    DateInput: FormDateInput,\n};\nexport * from './models';\nexport { CONTROL_ID_DATA_ATTR } from './wrapper.view';\n//# sourceMappingURL=index.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Input, InputType } from '../../standaloneControls/input';\nexport function FormInput(props) {\n    return (_jsx(Input, { type: (props.inputType || InputType.TEXT), defaultValue: props.defaultValue, onChange: (value) => {\n            if (props.validateOnChange)\n                props.validate(value);\n        }, onBlur: (value) => {\n            props.saveValueToState(props.propertyPath, value);\n            if (props.validateOnBlur)\n                props.validate(value);\n        }, htmlProps: Object.assign(Object.assign({}, props.htmlProps), { name: props.propertyPath, 'aria-label': props.label, placeholder: props.placeholder, 'aria-invalid': props.hasError, disabled: props.isDisabled }), isReadOnly: props.isReadOnly }, void 0));\n}\n//# sourceMappingURL=input.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport '../../standaloneControls/checkbox/styles.scss';\nimport { getCheckboxOrRadioClassname } from './checkbox.view';\nimport { Radio } from '../../standaloneControls/radio';\nexport function FormRadio(props) {\n    const wrapperClassName = getCheckboxOrRadioClassname(props);\n    if (props.isReadOnly) {\n        const selection = props.selections.find((s) => s.value === props.defaultValue);\n        return (_jsx(\"div\", Object.assign({ className: wrapperClassName }, { children: _jsx(Radio, { name: props.propertyPath, label: (selection === null || selection === void 0 ? void 0 : selection.text) || '', value: props.defaultValue, isReadOnly: true }, void 0) }), void 0));\n    }\n    return (_jsx(\"div\", Object.assign({ className: wrapperClassName }, { children: props.selections.map((s) => (_jsx(Radio, { htmlProps: {\n                defaultChecked: props.defaultValue === s.value,\n                disabled: props.isDisabled,\n                'aria-label': props.label,\n                onChange: (e) => {\n                    if (e.target.checked) {\n                        props.saveValueToState(props.propertyPath, s.value);\n                    }\n                    if (props.validateOnChange || props.validateOnBlur)\n                        props.validate(s.value);\n                },\n            }, name: props.propertyPath, label: s.text, value: s.value }, `${props.propertyPath}-${s.value}`))) }), void 0));\n}\n//# sourceMappingURL=radio.view.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Textarea } from '../../standaloneControls/textarea';\nimport { FormActionType } from '../main/enums';\nexport function FormTextarea(props) {\n    const usesRichImageUpload = props.useMarkdown && props.allowImageUpload;\n    const _a = props.imageUploaderProperties || {}, { onUpload: customOnUpload, onRemove: customOnRemove } = _a, customImageUploaderProperties = __rest(_a, [\"onUpload\", \"onRemove\"]);\n    const finalImageUploaderProperties = Object.assign({}, customImageUploaderProperties);\n    if (usesRichImageUpload) {\n        const imagesPropertyPath = props.uploadedImagesPropertyPath || `${props.propertyPath}_images`;\n        finalImageUploaderProperties.onUpload = (files) => {\n            if (customOnUpload)\n                customOnUpload(files);\n            if (finalImageUploaderProperties.isMultiple) {\n                props.saveValueToState(imagesPropertyPath, props.saveFullImageFile ? files : files.map((f) => f.name), FormActionType.ADD_ARRAY_VALUE);\n            }\n            else {\n                props.saveValueToState(imagesPropertyPath, props.saveFullImageFile ? files[0] : files[0].name);\n            }\n        };\n        finalImageUploaderProperties.onRemove = (filename, index) => {\n            if (customOnRemove)\n                customOnRemove(filename, index);\n            if (finalImageUploaderProperties.isMultiple) {\n                props.saveValueToState(imagesPropertyPath, index, FormActionType.REMOVE_ARRAY_INDEX);\n            }\n            else {\n                props.saveValueToState(imagesPropertyPath, undefined);\n            }\n        };\n        finalImageUploaderProperties.defaultValue = props.defaultUploadedImages;\n    }\n    return (_jsx(Textarea, { characterLimit: props.characterLimit, defaultValue: props.defaultValue, isReadOnly: props.isReadOnly, allowHorizontalResize: props.allowHorizontalResize, allowVerticalResize: props.allowVerticalResize, htmlProps: {\n            name: props.propertyPath,\n            'aria-label': props.label,\n            'aria-invalid': props.hasError,\n            className: (props.characterLimit || 0) > 300 ? 'long' : '',\n            onChange: props.validateOnChange\n                ? (e) => props.validate(e.target.value)\n                : undefined,\n            onBlur: (e) => {\n                const value = e.target.value;\n                props.saveValueToState(props.propertyPath, value);\n                if (props.validateOnBlur)\n                    props.validate(value);\n            },\n            placeholder: props.placeholder,\n        }, isDisabled: props.isDisabled, useMarkdown: props.useMarkdown, allowImageUpload: props.allowImageUpload, imageUploaderProperties: finalImageUploaderProperties, messageOverrides: props.messageOverrides }, void 0));\n}\n//# sourceMappingURL=textarea.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { FileUploader } from '../../standaloneControls/fileUpload';\nimport { FormActionType } from '../main/enums';\n/** Removes everything aside from letters, numbers, dots, and hyphens from a string. */\nexport function formatFilename(filename) {\n    return filename.replace(/[^a-zA-Z0-9-\\\\.]/g, '');\n}\nexport function FormAttachmentControl(props) {\n    const shouldValidate = props.validateOnBlur || props.validateOnChange;\n    return (_jsx(FileUploader, { defaultValue: props.defaultValue, supportedFileExtensions: props.supportedFileExtensions, onUpload: (files) => {\n            if (props.onUpload)\n                props.onUpload(files);\n            if (props.isMultiple) {\n                props.saveValueToState(props.propertyPath, props.saveFullFile ? files : files.map((f) => f.name), FormActionType.ADD_ARRAY_VALUE);\n            }\n            else {\n                props.saveValueToState(props.propertyPath, props.saveFullFile ? files[0] : files[0].name);\n            }\n            if (shouldValidate)\n                props.validate(null);\n        }, onRemove: (filename, index) => {\n            if (props.onRemove)\n                props.onRemove(filename, index);\n            if (props.isMultiple) {\n                props.saveValueToState(props.propertyPath, index, FormActionType.REMOVE_ARRAY_INDEX);\n            }\n            else {\n                props.saveValueToState(props.propertyPath, undefined);\n            }\n            if (shouldValidate)\n                props.validate(null);\n        }, isMultiple: props.isMultiple, messageOverrides: props.messageOverrides, uploadIcon: props.uploadIcon, fileUploadProgress: props.fileUploadProgress, fileStatuses: props.fileStatuses, individualFileSizeLimit: props.individualFileSizeLimit, totalFileSizeLimit: props.totalFileSizeLimit, isDisabled: props.isDisabled, isReadOnly: props.isReadOnly, inputName: props.propertyPath }, void 0));\n}\n//# sourceMappingURL=attachment.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRef } from 'react';\nimport { Dropdown } from '../../standaloneControls/dropdown';\nexport function FormDropdown(props) {\n    const latestValues = useRef();\n    return (_jsx(Dropdown, { options: props.options, placeholder: props.placeholder, pinnedValues: props.pinnedValues, defaultValue: props.defaultValue, id: props.propertyPath, filterHtmlProps: {\n            'aria-invalid': props.hasError,\n            'aria-label': props.label,\n        }, hiddenInputHtmlProps: {\n            name: props.propertyPath,\n        }, onOptionSelected: (option) => {\n            if (props.onOptionSelected) {\n                props.onOptionSelected(option);\n            }\n            if (!props.isMultiple && props.saveSelection !== false) {\n                const value = option ? option.value : undefined;\n                props.saveValueToState(props.propertyPath, value);\n                if (props.validateOnChange)\n                    props.validate(value);\n                latestValues.current = value;\n            }\n        }, onOptionsChanged: (options) => {\n            if (props.onOptionsChanged) {\n                props.onOptionsChanged(options);\n            }\n            if (props.isMultiple && props.saveSelection !== false) {\n                const values = options === null || options === void 0 ? void 0 : options.map((o) => o.value);\n                if (props.defaultValue !== undefined && values === undefined) {\n                    props.saveValueToState(props.propertyPath, []);\n                }\n                else {\n                    props.saveValueToState(props.propertyPath, values);\n                }\n                if (props.validateOnChange)\n                    props.validate(values);\n                latestValues.current = values;\n            }\n        }, onClose: () => {\n            if (props.onClose) {\n                props.onClose();\n            }\n            if (props.validateOnBlur)\n                props.validate((latestValues === null || latestValues === void 0 ? void 0 : latestValues.current) || null);\n        }, onOpen: props.onOpen, isDisabled: props.isDisabled, showClearButton: props.showClearButton, isMultiple: props.isMultiple, isReadOnly: props.isReadOnly, allowFiltering: props.allowFiltering, saveSelection: props.saveSelection, extraClassName: props.extraClassName, emptyOptionsText: props.emptyOptionsText, allowAdditions: props.allowAdditions, addNewItemText: props.addNewItemText, onAddNewItem: props.onAddNewItem }, void 0));\n}\n//# sourceMappingURL=dropdown.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { MoneyInput } from '../../standaloneControls/money';\nexport function FormMoneyInput(props) {\n    return (_jsx(MoneyInput, { defaultValue: props.defaultValue, onBlur: (numericValue) => {\n            props.saveValueToState(props.propertyPath, numericValue);\n            if (props.validateOnBlur)\n                props.validate(numericValue);\n        }, onChange: (numericValue) => {\n            if (props.validateOnChange)\n                props.validate(numericValue);\n        }, currencyCode: props.currencyCode, displayInputProps: {\n            placeholder: props.placeholder,\n            'aria-invalid': props.hasError,\n            'aria-label': props.label,\n            disabled: props.isDisabled,\n        }, hiddenInputProps: {\n            name: props.propertyPath,\n            disabled: props.isDisabled,\n        }, isReadOnly: props.isReadOnly }, void 0));\n}\n//# sourceMappingURL=money.view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { DateInput } from '../../standaloneControls/date';\nconst DO_NOT_SAVE_VALUE = -1;\nexport function FormDateInput(props) {\n    const rangedProps = props.isRanged\n        ? {\n            isRanged: true,\n            startValue: props.defaultValue ? props.defaultValue[0] : undefined,\n            endValue: props.defaultValue ? props.defaultValue[1] : undefined,\n        }\n        : {\n            value: props.defaultValue,\n        };\n    return (_jsx(DateInput, Object.assign({ onChange: (date) => {\n            const newValue = (() => {\n                if (Array.isArray(date)) {\n                    if (date[0] && date[1]) {\n                        return [date[0].getTime(), date[1].getTime()];\n                    }\n                    return DO_NOT_SAVE_VALUE;\n                }\n                if (date == null) {\n                    return date;\n                }\n                return date.getTime();\n            })();\n            if (newValue !== DO_NOT_SAVE_VALUE) {\n                props.saveValueToState(props.propertyPath, newValue);\n                if (props.validateOnBlur || props.validateOnChange) {\n                    props.validate(newValue);\n                }\n            }\n        }, dateType: props.dateType, earliestDate: props.earliestDate, latestDate: props.latestDate, earliestTime: props.earliestTime, latestTime: props.latestTime, dateFormat: props.dateFormat, timeFormat: props.timeFormat, locale: props.locale, placeholder: props.placeholder }, rangedProps, { isReadOnly: props.isReadOnly }), void 0));\n}\n//# sourceMappingURL=date.view.js.map","import { ErrorType } from './enums';\nexport const EMAIL_REGEX = \n// eslint-disable-next-line no-control-regex\n/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\nexport const PHONE_REGEX = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\nexport const DEFAULT_ERROR_MESSAGES = (controlConfig) => ({\n    [ErrorType.REQUIRED]: 'This value is required.',\n    [ErrorType.MIN_LENGTH]: `Must be at least ${controlConfig.minLength} characters.`,\n    [ErrorType.MAX_LENGTH]: `Must be at most ${controlConfig.maxLength} characters.`,\n    [ErrorType.MIN_VALUE]: `Must be greater than ${controlConfig.minValue}.`,\n    [ErrorType.MAX_VALUE]: `Must be less than ${controlConfig.maxValue}.`,\n    [ErrorType.EMAIL]: 'Please enter a valid email.',\n    [ErrorType.PHONE]: 'Please enter a valid phone number.',\n    [ErrorType.CUSTOM]: 'This value is invalid.',\n    [ErrorType.CHECKBOX_REQUIRED]: 'At least one selection is required.',\n    [ErrorType.CHECKBOX_MIN_SELECTIONS]: `Must have at least ${controlConfig.minNumSelections} selections.`,\n    [ErrorType.CHECKBOX_MAX_SELECTIONS]: `Can have at most ${controlConfig.maxNumSelections} selections.`,\n});\n//# sourceMappingURL=data.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { get } from 'lodash';\nimport { FormControls } from '../controls';\nimport { FormControlType } from '../common/enums';\nimport { ErrorType } from './enums';\nimport { EMAIL_REGEX, PHONE_REGEX, DEFAULT_ERROR_MESSAGES } from './data';\nimport { InputType } from '../../standaloneControls/input';\nexport function runFormValidator(data, formValidator, setControlError, formValidatorPropertyPaths) {\n    if (formValidator) {\n        const errors = formValidator(data);\n        if (errors) {\n            Object.entries(errors).forEach(([propertypath, errorMessage]) => {\n                setControlError(propertypath, ErrorType.CUSTOM, errorMessage);\n            });\n        }\n        const errorPaths = errors ? Object.keys(errors) : undefined;\n        formValidatorPropertyPaths.current.forEach((propertyPath) => {\n            if (errorPaths && errorPaths.includes(propertyPath))\n                return;\n            setControlError(propertyPath, undefined);\n        });\n        formValidatorPropertyPaths.current = errorPaths || [];\n    }\n}\nexport function validateEntireForm(controlValidators, data, formValidator, setControlError, formValidatorPropertyPaths) {\n    Object.values(controlValidators).forEach((validate) => validate(null));\n    runFormValidator(data, formValidator, setControlError, formValidatorPropertyPaths);\n}\nfunction validateControl(propertyPath, controlConfig, data, isDisabled, isRequired, setControlError, validateControlOnNextUpdate) {\n    return (value) => {\n        if (value === null) {\n            validateControlOnNextUpdate(propertyPath);\n            return;\n        }\n        if (isDisabled) {\n            setControlError(propertyPath, undefined);\n            return;\n        }\n        if (isRequired) {\n            if (controlConfig.type === FormControlType.CHECKBOX_GROUP) {\n                if (controlConfig.minNumSelections &&\n                    (!value || value.length < controlConfig.minNumSelections)) {\n                    setControlError(controlConfig.propertyPath, ErrorType.CHECKBOX_MIN_SELECTIONS);\n                    return;\n                }\n                if (!value || value.length === 0) {\n                    if (controlConfig.selections.length === 1) {\n                        setControlError(controlConfig.propertyPath, ErrorType.REQUIRED);\n                        return;\n                    }\n                    setControlError(controlConfig.propertyPath, ErrorType.CHECKBOX_REQUIRED);\n                    return;\n                }\n            }\n            if (value == null || (typeof value === 'string' && value.trim() === '')) {\n                setControlError(controlConfig.propertyPath, ErrorType.REQUIRED);\n                return;\n            }\n        }\n        if (value && controlConfig.type === FormControlType.INPUT) {\n            if (controlConfig.minLength && value.length < controlConfig.minLength) {\n                setControlError(controlConfig.propertyPath, ErrorType.MIN_LENGTH);\n                return;\n            }\n            if (controlConfig.maxLength && value.length > controlConfig.maxLength) {\n                setControlError(controlConfig.propertyPath, ErrorType.MAX_LENGTH);\n                return;\n            }\n            if (controlConfig.inputType === InputType.EMAIL && !EMAIL_REGEX.test(value)) {\n                setControlError(controlConfig.propertyPath, ErrorType.EMAIL);\n                return;\n            }\n            if (controlConfig.inputType === InputType.PHONE &&\n                value &&\n                !PHONE_REGEX.test(value)) {\n                setControlError(controlConfig.propertyPath, ErrorType.PHONE);\n                return;\n            }\n            if (controlConfig.inputType === InputType.NUMBER) {\n                if (controlConfig.minValue && value < controlConfig.minValue) {\n                    setControlError(controlConfig.propertyPath, ErrorType.MIN_VALUE);\n                    return;\n                }\n                if (controlConfig.maxValue && value > controlConfig.maxValue) {\n                    setControlError(controlConfig.propertyPath, ErrorType.MAX_VALUE);\n                    return;\n                }\n            }\n        }\n        if (controlConfig.type === FormControlType.CHECKBOX_GROUP) {\n            if (controlConfig.maxNumSelections &&\n                value.length > controlConfig.maxNumSelections) {\n                setControlError(controlConfig.propertyPath, ErrorType.CHECKBOX_MAX_SELECTIONS);\n                return;\n            }\n        }\n        if (controlConfig.validator) {\n            const customErrorMessage = controlConfig.validator(value, data);\n            if (customErrorMessage != null) {\n                setControlError(controlConfig.propertyPath, ErrorType.CUSTOM, customErrorMessage);\n                return;\n            }\n        }\n        setControlError(controlConfig.propertyPath, undefined);\n    };\n}\nfunction getControlDescription(controlConfig) {\n    const userDescriptionExists = controlConfig.description !== undefined;\n    if (typeof controlConfig.description !== 'function' && userDescriptionExists) {\n        return controlConfig.description;\n    }\n    let existingMessage;\n    if (controlConfig.type === FormControlType.CHECKBOX_GROUP) {\n        const { minNumSelections, maxNumSelections } = controlConfig;\n        existingMessage = (() => {\n            if (minNumSelections && maxNumSelections) {\n                if (minNumSelections === maxNumSelections) {\n                    return `Select exactly ${minNumSelections} choices.`;\n                }\n                return `Select between ${minNumSelections} and ${maxNumSelections} choices.`;\n            }\n            if (minNumSelections) {\n                return `Select at least ${minNumSelections} choices.`;\n            }\n            if (maxNumSelections) {\n                return `Select at most ${maxNumSelections} choices.`;\n            }\n            return undefined;\n        })();\n    }\n    if (userDescriptionExists) {\n        return controlConfig.description(existingMessage);\n    }\n    return existingMessage;\n}\nexport function usesValidateMode(toCheck, mode) {\n    return toCheck ? (toCheck & mode) === mode : false;\n}\nexport function getBooleanResult(property, data, parentResult) {\n    if (typeof property === 'boolean') {\n        return property;\n    }\n    if (property !== undefined) {\n        return property(data);\n    }\n    return parentResult;\n}\nexport function generateControl(controlConfig, data, defaultValues, isFormRequired, isFormDisabled, isFormReadOnly, saveValueToState, setControlError, validateOnBlur, validateOnChange, errors, errorMessages, hideErrors, controlValidators, setTriggerFormValidator, validateControlOnNextUpdate, formatRequiredLabels, formatOptionalLabels, infoIconTooltip, key, parentPropertyPath, arrayEntryIndex) {\n    if (getBooleanResult(controlConfig.isHidden, data, false)) {\n        return null;\n    }\n    const propertyPath = parentPropertyPath\n        ? `${parentPropertyPath}.${arrayEntryIndex}.${controlConfig.propertyPath}`\n        : controlConfig.propertyPath;\n    const defaultValue = get(parentPropertyPath || controlConfig.type === FormControlType.RADIO_GROUP\n        ? data\n        : defaultValues, propertyPath);\n    const hasError = hideErrors || controlConfig.hideErrorMessage ? false : propertyPath in errors;\n    const isDisabled = !!getBooleanResult(controlConfig.isDisabled, data, isFormDisabled);\n    const isRequired = !!getBooleanResult(controlConfig.isRequired, data, isFormRequired);\n    const isReadOnly = !!getBooleanResult(controlConfig.isReadOnly, data, isFormReadOnly);\n    const customElement = typeof controlConfig.customElement === 'function'\n        ? controlConfig.customElement(data)\n        : controlConfig.customElement;\n    const controlValidator = validateControl(propertyPath, controlConfig, data, isDisabled, isRequired, setControlError, validateControlOnNextUpdate);\n    controlValidators[propertyPath] = controlValidator;\n    const baseProps = {\n        propertyPath,\n        label: controlConfig.label,\n        defaultValue,\n        isDisabled,\n        isReadOnly,\n        hasError,\n        validate: validateOnBlur || validateOnChange\n            ? (value) => {\n                controlValidator(value);\n                setTriggerFormValidator(true);\n            }\n            : controlValidator,\n        validateOnBlur,\n        validateOnChange,\n        saveValueToState,\n    };\n    const specificProps = Object.keys(baseProps).reduce((result, key) => {\n        const _a = result, _b = key, _remove = _a[_b], rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n        return rest;\n    }, controlConfig);\n    const control = (() => {\n        switch (specificProps.type) {\n            case FormControlType.INPUT: {\n                switch (specificProps.inputType) {\n                    case InputType.MONEY:\n                        return _jsx(FormControls.Money, Object.assign({}, baseProps, specificProps), void 0);\n                    case InputType.DATE:\n                        return (_jsx(FormControls.DateInput, Object.assign({}, baseProps, specificProps), void 0));\n                    default:\n                        return _jsx(FormControls.Input, Object.assign({}, baseProps, specificProps), void 0);\n                }\n            }\n            case FormControlType.RADIO_GROUP:\n                return _jsx(FormControls.Radio, Object.assign({}, baseProps, specificProps), void 0);\n            case FormControlType.CHECKBOX_GROUP:\n                return _jsx(FormControls.Checkbox, Object.assign({}, baseProps, specificProps), void 0);\n            case FormControlType.TEXTAREA: {\n                if (specificProps.uploadedImagesPropertyPath) {\n                    const defaultUploadedImages = get(defaultValues, specificProps.uploadedImagesPropertyPath);\n                    return (_jsx(FormControls.Textarea, Object.assign({}, baseProps, specificProps, { defaultUploadedImages: defaultUploadedImages }), void 0));\n                }\n                return _jsx(FormControls.Textarea, Object.assign({}, baseProps, specificProps), void 0);\n            }\n            case FormControlType.ATTACHMENT:\n                return _jsx(FormControls.Attachment, Object.assign({}, baseProps, specificProps), void 0);\n            case FormControlType.DROPDOWN: {\n                const { options } = specificProps, rest = __rest(specificProps, [\"options\"]);\n                return (_jsx(FormControls.Dropdown, Object.assign({}, baseProps, { options: typeof options === 'function' ? options(data) : options }, rest), void 0));\n            }\n        }\n    })();\n    return (_jsx(FormControls.Wrapper, Object.assign({ label: (() => {\n            if (controlConfig.label) {\n                if (formatRequiredLabels && isRequired) {\n                    return formatRequiredLabels(controlConfig.label);\n                }\n                if (formatOptionalLabels && !isRequired) {\n                    return formatOptionalLabels(controlConfig.label);\n                }\n            }\n            return controlConfig.label;\n        })(), hasError: hasError, errorMessage: (() => {\n            if (!hasError) {\n                return undefined;\n            }\n            const error = errors[propertyPath];\n            if (error.customMessage) {\n                return error.customMessage;\n            }\n            if (typeof errorMessages === 'function') {\n                const msg = errorMessages(controlConfig)[error.type];\n                if (msg)\n                    return msg;\n            }\n            return (errorMessages[error.type] ||\n                DEFAULT_ERROR_MESSAGES(controlConfig)[error.type]);\n        })(), growthRatio: controlConfig.growthRatio, width: controlConfig.width, alignRight: controlConfig.alignRight, propertyPath: propertyPath, description: getControlDescription(controlConfig), onInfoIconClicked: controlConfig.onInfoIconClicked, infoIconTooltip: infoIconTooltip, isInline: controlConfig.isInline, customElement: customElement }, { children: control }), key));\n}\nexport function scrollToElement(element, scrollContainerSelector) {\n    var _a;\n    const scrollOptions = {\n        top: (element === null || element === void 0 ? void 0 : element.offsetTop) || 0,\n        behavior: 'smooth',\n    };\n    if (scrollContainerSelector) {\n        (_a = document.querySelector(scrollContainerSelector)) === null || _a === void 0 ? void 0 : _a.scrollTo(scrollOptions);\n    }\n    else {\n        window.scrollTo(scrollOptions);\n    }\n}\n//# sourceMappingURL=utils.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ControlRowWidth } from '../common/enums';\nexport function FormControlRow(props) {\n    const widthClassName = props.width || ControlRowWidth.FULL;\n    const childrenClassName = React.Children.count(props.children) >= 3 ? 'withThreeOrMoreChildren' : '';\n    return (_jsx(\"div\", Object.assign({ className: `control-row ${widthClassName} ${childrenClassName}` }, { children: props.children }), void 0));\n}\n//# sourceMappingURL=view.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { get } from 'lodash';\nimport './styles.scss';\nimport { FormActionType } from '../main/enums';\nimport { GeneralIcons, Icon, TooltipLabelMode } from '../../icon';\nimport { useEntryReorder } from './useReorder.hook';\nexport function FormArraySection(_a) {\n    var _b, _c;\n    var { sectionConfig } = _a, props = __rest(_a, [\"sectionConfig\"]);\n    const entries = get(props.data, sectionConfig.parentPropertyPath);\n    const isReadOnly = props.isFormReadOnly || sectionConfig.isReadOnly;\n    const onEntryReordered = useCallback((fromIndex, toIndex) => {\n        const entryToMove = entries[fromIndex];\n        const entriesWithItemRemoved = [\n            ...entries.slice(0, fromIndex),\n            ...entries.slice(fromIndex + 1),\n        ];\n        const entriesWithItemAddedToNewIndex = [\n            ...entriesWithItemRemoved.slice(0, toIndex),\n            entryToMove,\n            ...entriesWithItemRemoved.slice(toIndex),\n        ];\n        props.saveValueToState(sectionConfig.parentPropertyPath, entriesWithItemAddedToNewIndex);\n    }, [entries]);\n    const { reorderProps, dropZones } = useEntryReorder(!isReadOnly && !!sectionConfig.allowReordering, entries, onEntryReordered);\n    const [removedEntries, setRemovedEntries] = useState([]);\n    function addEntry() {\n        props.saveValueToState(sectionConfig.parentPropertyPath, sectionConfig.blankValues, FormActionType.ADD_ARRAY_VALUE, true);\n    }\n    function removeEntry(index, entry) {\n        if (entry !== sectionConfig.blankValues) {\n            setRemovedEntries([...removedEntries, entry]);\n        }\n        props.saveValueToState(sectionConfig.parentPropertyPath, index, FormActionType.REMOVE_ARRAY_INDEX);\n    }\n    function restoreLastRemovedEntry() {\n        const lastRemovedEntry = removedEntries[removedEntries.length - 1];\n        props.saveValueToState(sectionConfig.parentPropertyPath, lastRemovedEntry, FormActionType.ADD_ARRAY_VALUE);\n        setRemovedEntries(removedEntries.slice(0, -1));\n    }\n    useEffect(() => {\n        if ((sectionConfig.addEntryWhenEmpty, entries.length === 0)) {\n            addEntry();\n        }\n    }, [sectionConfig.addEntryWhenEmpty, entries.length]);\n    return (_jsxs(\"div\", Object.assign({ className: \"control-array-section\" }, { children: [entries.map((e, i) => {\n                var _a, _b;\n                return (_jsxs(React.Fragment, { children: [dropZones && dropZones[i],\n                        _jsxs(\"div\", Object.assign({ className: \"control-array-section-entry\" }, (!isReadOnly && sectionConfig.allowReordering ? reorderProps[i].row : {}), { children: [_jsxs(\"div\", Object.assign({ className: \"header\" }, { children: [_jsxs(\"div\", { children: [!isReadOnly && sectionConfig.allowReordering && (_jsxs(\"span\", Object.assign({ className: \"control-array-move-indicator\" }, reorderProps[i].indicator, { title: ((_a = sectionConfig.messageOverrides) === null || _a === void 0 ? void 0 : _a.reorderEntry) || 'Reorder' }, { children: [_jsx(Icon, { icon: GeneralIcons.Move }, void 0),\n                                                        _jsx(Icon, { icon: GeneralIcons.Move }, void 0)] }), void 0)),\n                                                _jsxs(\"span\", { children: [sectionConfig.itemName || 'Entry', \" #\", i + 1] }, void 0)] }, void 0),\n                                        !isReadOnly && (_jsx(Icon, { icon: GeneralIcons.Remove, tooltip: ((_b = sectionConfig.messageOverrides) === null || _b === void 0 ? void 0 : _b.removeEntry) || 'Remove Entry', onClick: () => removeEntry(i, e), tooltipAsLabel: TooltipLabelMode.ON_HOVER }, void 0))] }), void 0),\n                                _jsx(\"div\", Object.assign({ className: \"main\" }, { children: props.renderControls(i) }), void 0)] }), void 0)] }, `${sectionConfig.parentPropertyPath}-entry-${i}`));\n            }),\n            dropZones && dropZones[dropZones.length - 1],\n            !isReadOnly && (_jsxs(_Fragment, { children: [_jsx(Icon, { icon: GeneralIcons.Add, tooltip: ((_b = sectionConfig.messageOverrides) === null || _b === void 0 ? void 0 : _b.addEntry) || 'Add Entry', onClick: () => addEntry(), tooltipAsLabel: TooltipLabelMode.ALWAYS }, void 0),\n                    removedEntries.length > 0 && (_jsx(Icon, { icon: GeneralIcons.Redo, tooltip: ((_c = sectionConfig.messageOverrides) === null || _c === void 0 ? void 0 : _c.restoreEntry) || 'Restore Last Entry', onClick: restoreLastRemovedEntry, tooltipAsLabel: TooltipLabelMode.ALWAYS, extraClassName: \"control-array-restore-entry-button\" }, void 0))] }, void 0))] }), void 0));\n}\n//# sourceMappingURL=view.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nexport function useEntryReorder(isEnabled, entries, onReorder) {\n    const [currDraggingRowIndex, setCurrDraggingRowIndex] = useState(-1);\n    const [currDraggingPos, setCurrDraggingPos] = useState({\n        x: 0,\n        y: 0,\n    });\n    const currDraggingElem = useRef();\n    const targetDropZoneIndex = useRef();\n    const targetDropZoneIsLastElem = useRef(false);\n    const onDocumentMouseMove = useCallback((event) => {\n        if (currDraggingElem.current) {\n            setCurrDraggingPos({ x: event.pageX, y: event.pageY });\n        }\n    }, []);\n    const onDocumentMouseUp = useCallback((currDraggingRowIndex, onReorder) => {\n        return () => {\n            var _a;\n            if (currDraggingElem.current) {\n                (_a = document\n                    .querySelector('.control-array-section-entry.dragging')) === null || _a === void 0 ? void 0 : _a.classList.remove('dragging');\n                currDraggingElem.current = undefined;\n                if (targetDropZoneIndex.current !== undefined) {\n                    const fromIndex = currDraggingRowIndex;\n                    const toIndex = targetDropZoneIndex.current;\n                    const properToIndex = targetDropZoneIsLastElem.current\n                        ? toIndex\n                        : fromIndex < toIndex\n                            ? toIndex - 1\n                            : toIndex;\n                    onReorder(fromIndex, properToIndex);\n                    targetDropZoneIndex.current = undefined;\n                    targetDropZoneIsLastElem.current = false;\n                }\n                setCurrDraggingRowIndex(-1);\n            }\n        };\n    }, []);\n    useEffect(() => {\n        const mouseUpFunc = onDocumentMouseUp(currDraggingRowIndex, onReorder);\n        document.addEventListener('mousemove', onDocumentMouseMove);\n        document.addEventListener('mouseup', mouseUpFunc);\n        return () => {\n            document.removeEventListener('mousemove', onDocumentMouseMove);\n            document.removeEventListener('mouseup', mouseUpFunc);\n        };\n    }, [isEnabled, currDraggingRowIndex, onReorder]);\n    function getMoveIndicatorProps(physicalRowIndex) {\n        return {\n            draggable: true,\n            onMouseDown: () => setCurrDraggingRowIndex(physicalRowIndex),\n        };\n    }\n    function getEntryProps(physicalRowIndex) {\n        var _a;\n        return {\n            onDragStart: (event) => {\n                currDraggingElem.current = {\n                    width: event.currentTarget.offsetWidth,\n                    height: event.currentTarget.offsetHeight,\n                };\n                event.currentTarget.classList.add('dragging');\n                event.stopPropagation();\n            },\n            style: currDraggingRowIndex === physicalRowIndex\n                ? {\n                    top: currDraggingPos.y,\n                    left: currDraggingPos.x,\n                    width: (_a = currDraggingElem.current) === null || _a === void 0 ? void 0 : _a.width,\n                }\n                : undefined,\n        };\n    }\n    function getDropZoneDragDropProps(physicalRowIndex, isLastElem) {\n        const belongsToCurrDraggingElement = currDraggingRowIndex === physicalRowIndex;\n        const classNames = ['array-entry-drop-zone'];\n        if (belongsToCurrDraggingElement) {\n            classNames.push('placeholder');\n            if (currDraggingElem.current) {\n                classNames.push('active');\n            }\n        }\n        return {\n            onMouseEnter: () => {\n                if (belongsToCurrDraggingElement || !currDraggingElem.current)\n                    return;\n                targetDropZoneIndex.current = physicalRowIndex;\n                if (isLastElem) {\n                    targetDropZoneIsLastElem.current = true;\n                }\n            },\n            style: belongsToCurrDraggingElement && currDraggingElem.current\n                ? {\n                    height: currDraggingElem.current.height,\n                }\n                : undefined,\n            className: classNames.join(' '),\n        };\n    }\n    const reorderProps = React.useMemo(() => isEnabled\n        ? entries.map((_, i) => ({\n            indicator: getMoveIndicatorProps(i),\n            row: getEntryProps(i),\n        }))\n        : [], [entries, currDraggingRowIndex, currDraggingPos, isEnabled]);\n    const dropZones = React.useMemo(() => {\n        if (!isEnabled || currDraggingRowIndex === -1) {\n            return undefined;\n        }\n        const zones = entries.map((_, i) => {\n            return i === currDraggingRowIndex + 1 ? null : (_jsx(\"div\", Object.assign({}, getDropZoneDragDropProps(i, false)), `array-entry-drop-zone-${i}`));\n        });\n        const lastIndex = entries.length - 1;\n        if (currDraggingRowIndex === lastIndex) {\n            return [...zones, null];\n        }\n        return [\n            ...zones,\n            _jsx(\"div\", Object.assign({}, getDropZoneDragDropProps(lastIndex, true)), \"array-entry-drop-zone-last\"),\n        ];\n    }, [isEnabled, entries, currDraggingRowIndex, currDraggingElem.current]);\n    return { reorderProps, dropZones };\n}\n//# sourceMappingURL=useReorder.hook.js.map","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport { get } from 'lodash';\nimport './styles.scss';\nimport { validateProps } from './props';\nimport { createFormReducer, initialFormState } from './formReducer';\nimport { FormControlRow } from '../controlRow';\nimport { generateControl, getBooleanResult, runFormValidator, scrollToElement, usesValidateMode, validateEntireForm, } from './utils';\nimport { ErrorType, FormActionType, PageErrorDisplayMode, SubmissionErrorScrollMode, ValidationMode, } from './enums';\nimport { PageError } from '../../standaloneControls/pageError';\nimport { FormArraySection } from '../arraySection';\nimport { NOKA_COLORS_CLASS } from '../../../assets/constants';\nimport { GeneralIcons, Icon } from '../../icon';\nimport { CONTROL_ID_DATA_ATTR } from '../controls';\nexport function Form(props) {\n    const [state, dispatch] = useReducer(createFormReducer(), initialFormState(props.defaultValues));\n    const controlValidators = useRef({});\n    const [triggerFormValidator, setTriggerFormValidator] = useState(false);\n    const controlValidatorsToTrigger = useRef([]);\n    const formValidatorPropertyPaths = useRef([]);\n    const [triggerFullValidation, setTriggerFullValidation] = useState(false);\n    const isAwaitingSubmit = useRef(false);\n    const submitButtonClicked = useRef(false);\n    const [showPageError, setShowPageError] = useState(false);\n    const pageErrorRef = useRef(null);\n    const pageErrorDisplayMode = props.pageErrorDisplayMode || PageErrorDisplayMode.SHOW_AFTER_SUBMIT;\n    const onSubmissionError = props.onSubmissionError || SubmissionErrorScrollMode.FIRST_FIELD_WITH_ERROR;\n    useEffect(() => {\n        validateProps(props);\n    }, []);\n    const setControlError = useCallback((propertyPath, errorType, customErrorMessage) => {\n        if (errorType) {\n            dispatch({\n                type: FormActionType.SET_ERROR,\n                propertyPath: propertyPath,\n                errorType: errorType,\n                customErrorMessage,\n            });\n        }\n        else {\n            dispatch({\n                type: FormActionType.CLEAR_ERROR,\n                propertyPath: propertyPath,\n            });\n        }\n    }, [dispatch]);\n    const isFirstRun = useRef(true);\n    useEffect(() => {\n        if (isFirstRun.current) {\n            isFirstRun.current = false;\n            return;\n        }\n        if (props.serverErrors) {\n            Object.entries(props.serverErrors).map(([propertyPath, message]) => setControlError(propertyPath, ErrorType.CUSTOM, message));\n        }\n        else {\n            validateEntireForm(controlValidators.current, state.data, props.validator, setControlError, formValidatorPropertyPaths);\n        }\n    }, [props.serverErrors, setControlError]);\n    const saveValueToState = useCallback((propertyPath, value, type, allowDuplicates) => {\n        if (type === FormActionType.REMOVE_ARRAY_INDEX) {\n            dispatch({\n                type,\n                propertyPath: propertyPath,\n                index: value,\n            });\n        }\n        else {\n            dispatch({\n                type: type || FormActionType.SET_VALUE,\n                propertyPath: propertyPath,\n                value,\n                allowDuplicates,\n            });\n        }\n    }, [dispatch]);\n    const renderControl = useCallback((controlConfig, sectionConfig, key, arrayEntryIndex) => generateControl(controlConfig, state.data, props.defaultValues, getBooleanResult(sectionConfig.isRequired, state.data, props.isRequired), getBooleanResult(sectionConfig.isDisabled, state.data, props.isDisabled), getBooleanResult(sectionConfig.isReadOnly, state.data, props.isReadOnly), saveValueToState, setControlError, usesValidateMode(props.validationMode, ValidationMode.BLUR), usesValidateMode(props.validationMode, ValidationMode.CHANGE), state.errors, props.errorMessages || {}, (() => {\n        if (props.hideErrorsOnLoad) {\n            return !state.isDirty;\n        }\n        if (props.hideErrorsBeforeSubmit) {\n            return !submitButtonClicked.current;\n        }\n        return false;\n    })(), controlValidators.current, setTriggerFormValidator, (propertyPath) => (controlValidatorsToTrigger.current = [\n        ...controlValidatorsToTrigger.current,\n        propertyPath,\n    ]), props.formatRequiredLabels, props.formatOptionalLabels, props.infoIconTooltip, key, sectionConfig.isArray ? sectionConfig.parentPropertyPath : undefined, arrayEntryIndex), [state.data, props.defaultValues, state.errors, props.isReadOnly]);\n    useEffect(() => {\n        dispatch({ type: FormActionType.REPLACE_DATA, data: props.defaultValues });\n    }, [props.defaultValues]);\n    useEffect(() => {\n        if (triggerFullValidation ||\n            usesValidateMode(props.validationMode, ValidationMode.LOAD)) {\n            validateEntireForm(controlValidators.current, state.data, props.validator, setControlError, formValidatorPropertyPaths);\n            if (triggerFullValidation) {\n                setTriggerFullValidation(false);\n            }\n        }\n    }, [props.defaultValues, triggerFullValidation]);\n    useEffect(() => {\n        if (triggerFormValidator) {\n            runFormValidator(state.data, props.validator, setControlError, formValidatorPropertyPaths);\n            setTriggerFormValidator(false);\n        }\n    }, [triggerFormValidator]);\n    useEffect(() => {\n        if (triggerFullValidation || controlValidatorsToTrigger.current.length > 0) {\n            controlValidatorsToTrigger.current.forEach((propertyPath) => controlValidators.current[propertyPath](get(state.data, propertyPath)));\n        }\n    }, [state.data, triggerFullValidation]);\n    useEffect(() => {\n        if (pageErrorDisplayMode === PageErrorDisplayMode.SHOW_ON_FIELD_ERROR ||\n            isAwaitingSubmit.current) {\n            setShowPageError(Object.keys(state.errors).length > 0);\n        }\n        if (isAwaitingSubmit.current && props.onSubmit) {\n            if (Object.keys(state.errors).length === 0) {\n                setShowPageError(false);\n                props.onSubmit(state.data);\n            }\n            else {\n                if (pageErrorDisplayMode === PageErrorDisplayMode.SHOW_AFTER_SUBMIT) {\n                    setShowPageError(true);\n                }\n            }\n            isAwaitingSubmit.current = false;\n        }\n    }, [state.errors]);\n    useEffect(() => {\n        if (showPageError) {\n            const errorKeys = Object.keys(state.errors);\n            if (errorKeys.length === 0) {\n                setShowPageError(false);\n            }\n            else {\n                if (onSubmissionError === SubmissionErrorScrollMode.PAGE_ERROR &&\n                    props.pageErrorDisplayMode !== PageErrorDisplayMode.HIDE) {\n                    scrollToElement(pageErrorRef.current, props.scrollContainerSelector);\n                }\n                else if (onSubmissionError === SubmissionErrorScrollMode.FIRST_FIELD_WITH_ERROR) {\n                    let firstControlName = '';\n                    props.sections.some((s) => {\n                        if (firstControlName)\n                            return true;\n                        s.controlRows.some((r) => {\n                            if (firstControlName)\n                                return true;\n                            r.controls.some((c) => {\n                                const name = c.propertyPath;\n                                if (errorKeys.includes(name)) {\n                                    firstControlName = name;\n                                    return true;\n                                }\n                            });\n                        });\n                    });\n                    if (firstControlName) {\n                        const firstControl = document.querySelector(`[${CONTROL_ID_DATA_ATTR}=${firstControlName}]`);\n                        scrollToElement(firstControl, props.scrollContainerSelector);\n                    }\n                }\n            }\n        }\n    }, [showPageError]);\n    const formContents = React.useMemo(() => props.sections.map((section, i) => {\n        if (getBooleanResult(section.isHidden, state.data, false)) {\n            return null;\n        }\n        function renderControls(arrayEntryIndex) {\n            return section.controlRows.map((row, j) => (_jsx(FormControlRow, Object.assign({ width: row.width }, { children: row.controls.map((controlConfig, k) => renderControl(controlConfig, section, `formControl-${i}-${j}-${k}`, arrayEntryIndex)) }), `formControlRow-${i}-${j}`)));\n        }\n        return (_jsxs(React.Fragment, { children: [section.headerText !== '' && (_jsxs(\"h2\", { children: [section.headerText,\n                        section.onInfoIconClicked && (_jsx(Icon, { icon: GeneralIcons.Info, tooltip: \"Info\", onClick: section.onInfoIconClicked, extraClassName: \"info\" }, void 0))] }, void 0)),\n                section.isArray ? (_jsx(FormArraySection, { sectionConfig: section, data: state.data, renderControls: renderControls, saveValueToState: saveValueToState, isFormReadOnly: props.isReadOnly }, void 0)) : (renderControls())] }, `formSection-${i}`));\n    }), [props.sections, state.data, props.isReadOnly, renderControl, saveValueToState]);\n    const submitButton = React.useMemo(() => props.onSubmit &&\n        !props.isReadOnly && (_jsx(\"button\", Object.assign({ type: \"submit\", disabled: props.disableSubmitWhenInvalid && Object.keys(state.errors).length > 0 }, { children: props.submitButtonText || 'Submit' }), void 0)), [\n        props.isReadOnly,\n        props.disableSubmitWhenInvalid,\n        state.errors,\n        props.submitButtonText,\n        props.onSubmit,\n    ]);\n    return (_jsxs(_Fragment, { children: [showPageError && props.pageErrorDisplayMode !== PageErrorDisplayMode.HIDE && (_jsx(PageError, { ref: pageErrorRef, message: props.pageErrorMessage || 'Please fix the errors on the page.' }, void 0)),\n            _jsxs(\"form\", Object.assign({}, (props.htmlProps || {}), { id: props.id, className: `${NOKA_COLORS_CLASS} ${props.className || ''}`, onSubmit: (e) => {\n                    e.preventDefault();\n                    submitButtonClicked.current = true;\n                    if (usesValidateMode(props.validationMode, ValidationMode.SUBMIT)) {\n                        isAwaitingSubmit.current = true;\n                        setTriggerFullValidation(true);\n                    }\n                    else if (Object.keys(state.errors).length > 0) {\n                        setShowPageError(true);\n                    }\n                    else if (props.onSubmit) {\n                        props.onSubmit(state.data);\n                    }\n                } }, { children: [formContents,\n                    submitButton] }), void 0)] }, void 0));\n}\n//# sourceMappingURL=view.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { set, get, cloneDeep } from 'lodash';\nimport { FormActionType } from './enums';\nexport const initialFormState = (defaultValues) => ({\n    data: defaultValues,\n    errors: {},\n    isDirty: false,\n});\nexport function createFormReducer() {\n    return (state, action) => {\n        switch (action.type) {\n            case FormActionType.SET_VALUE: {\n                const newData = set(cloneDeep(state.data), action.propertyPath, action.value);\n                if (!state.isDirty) {\n                    const existingData = get(state.data, action.propertyPath);\n                    if (get(newData, action.propertyPath) === existingData) {\n                        return state;\n                    }\n                }\n                return Object.assign(Object.assign({}, state), { isDirty: true, data: newData });\n            }\n            case FormActionType.REPLACE_DATA:\n                return Object.assign(Object.assign({}, state), { isDirty: false, data: cloneDeep(action.data) });\n            case FormActionType.ADD_ARRAY_VALUE: {\n                const existingValue = get(state.data, action.propertyPath) || [];\n                const newValue = (() => {\n                    const valueIsArray = Array.isArray(action.value);\n                    if (!action.allowDuplicates) {\n                        if (existingValue.includes(action.value)) {\n                            return existingValue;\n                        }\n                        if (valueIsArray && existingValue.some((v) => v === action.value)) {\n                            return existingValue;\n                        }\n                    }\n                    if (valueIsArray) {\n                        return [...existingValue, ...action.value];\n                    }\n                    return [...existingValue, action.value];\n                })();\n                return Object.assign(Object.assign({}, state), { isDirty: true, data: set(cloneDeep(state.data), action.propertyPath, newValue) });\n            }\n            case FormActionType.REMOVE_ARRAY_VALUE: {\n                const existingValue = get(state.data, action.propertyPath) || [];\n                return Object.assign(Object.assign({}, state), { isDirty: true, data: set(cloneDeep(state.data), action.propertyPath, existingValue.filter((v) => v !== action.value)) });\n            }\n            case FormActionType.REMOVE_ARRAY_INDEX: {\n                const existingValue = get(state.data, action.propertyPath) || [];\n                return Object.assign(Object.assign({}, state), { isDirty: true, data: set(cloneDeep(state.data), action.propertyPath, action.index === 0\n                        ? existingValue.slice(1)\n                        : [\n                            ...existingValue.slice(0, action.index),\n                            ...existingValue.slice(action.index + 1),\n                        ]) });\n            }\n            case FormActionType.SET_ERROR:\n                return Object.assign(Object.assign({}, state), { errors: Object.assign(Object.assign({}, state.errors), { [action.propertyPath]: {\n                            type: action.errorType,\n                            customMessage: action.customErrorMessage,\n                        } }) });\n            case FormActionType.CLEAR_ERROR: {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _a = state.errors, _b = action.propertyPath, _ = _a[_b], errorsWithoutPropertyPath = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n                return Object.assign(Object.assign({}, state), { errors: errorsWithoutPropertyPath });\n            }\n            default:\n                return state;\n        }\n    };\n}\n//# sourceMappingURL=formReducer.js.map","import { PageErrorDisplayMode, ValidationMode } from './enums';\nimport { usesValidateMode } from './utils';\nexport function validateProps(props) {\n    if (props.pageErrorDisplayMode === PageErrorDisplayMode.SHOW_ON_FIELD_ERROR &&\n        !usesValidateMode(props.validationMode, ValidationMode.BLUR) &&\n        !usesValidateMode(props.validationMode, ValidationMode.CHANGE)) {\n        throw new Error('When the pageErrorDisplayMode is set to SHOW_ON_FIELD_ERROR,  the validation mode must be set to either BLUR or CHANGE.');\n    }\n}\n//# sourceMappingURL=props.js.map","import { DropdownOption } from '@nokacreative/generic-react-form'\n\nexport const countries: DropdownOption[] = [\n  { text: 'Afghanistan', value: 'AF' },\n  { text: 'Åland Islands', value: 'AX' },\n  { text: 'Albania', value: 'AL' },\n  { text: 'Algeria', value: 'DZ' },\n  { text: 'American Samoa', value: 'AS' },\n  { text: 'Andorra', value: 'AD' },\n  { text: 'Angola', value: 'AO' },\n  { text: 'Anguilla', value: 'AI' },\n  { text: 'Antarctica', value: 'AQ' },\n  { text: 'Antigua and Barbuda', value: 'AG' },\n  { text: 'Argentina', value: 'AR' },\n  { text: 'Armenia', value: 'AM' },\n  { text: 'Aruba', value: 'AW' },\n  { text: 'Australia', value: 'AU' },\n  { text: 'Austria', value: 'AT' },\n  { text: 'Azerbaijan', value: 'AZ' },\n  { text: 'Bahamas', value: 'BS' },\n  { text: 'Bahrain', value: 'BH' },\n  { text: 'Bangladesh', value: 'BD' },\n  { text: 'Barbados', value: 'BB' },\n  { text: 'Belarus', value: 'BY' },\n  { text: 'Belgium', value: 'BE' },\n  { text: 'Belize', value: 'BZ' },\n  { text: 'Benin', value: 'BJ' },\n  { text: 'Bermuda', value: 'BM' },\n  { text: 'Bhutan', value: 'BT' },\n  { text: 'Bolivia', value: 'BO' },\n  { text: 'Bosnia and Herzegovina', value: 'BA' },\n  { text: 'Botswana', value: 'BW' },\n  { text: 'Bouvet Island', value: 'BV' },\n  { text: 'Brazil', value: 'BR' },\n  { text: 'British Indian Ocean Territory', value: 'IO' },\n  { text: 'Brunei Darussalam', value: 'BN' },\n  { text: 'Bulgaria', value: 'BG' },\n  { text: 'Burkina Faso', value: 'BF' },\n  { text: 'Burundi', value: 'BI' },\n  { text: 'Cambodia', value: 'KH' },\n  { text: 'Cameroon', value: 'CM' },\n  { text: 'Canada', value: 'CA' },\n  { text: 'Cape Verde', value: 'CV' },\n  { text: 'Cayman Islands', value: 'KY' },\n  { text: 'Central African Republic', value: 'CF' },\n  { text: 'Chad', value: 'TD' },\n  { text: 'Chile', value: 'CL' },\n  { text: 'China', value: 'CN' },\n  { text: 'Christmas Island', value: 'CX' },\n  { text: 'Cocos (Keeling) Islands', value: 'CC' },\n  { text: 'Colombia', value: 'CO' },\n  { text: 'Comoros', value: 'KM' },\n  { text: 'Congo', value: 'CG' },\n  { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n  { text: 'Cook Islands', value: 'CK' },\n  { text: 'Costa Rica', value: 'CR' },\n  { text: \"Cote D'Ivoire\", value: 'CI' },\n  { text: 'Croatia', value: 'HR' },\n  { text: 'Cuba', value: 'CU' },\n  { text: 'Cyprus', value: 'CY' },\n  { text: 'Czech Republic', value: 'CZ' },\n  { text: 'Denmark', value: 'DK' },\n  { text: 'Djibouti', value: 'DJ' },\n  { text: 'Dominica', value: 'DM' },\n  { text: 'Dominican Republic', value: 'DO' },\n  { text: 'Ecuador', value: 'EC' },\n  { text: 'Egypt', value: 'EG' },\n  { text: 'El Salvador', value: 'SV' },\n  { text: 'Equatorial Guinea', value: 'GQ' },\n  { text: 'Eritrea', value: 'ER' },\n  { text: 'Estonia', value: 'EE' },\n  { text: 'Ethiopia', value: 'ET' },\n  { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n  { text: 'Faroe Islands', value: 'FO' },\n  { text: 'Fiji', value: 'FJ' },\n  { text: 'Finland', value: 'FI' },\n  { text: 'France', value: 'FR' },\n  { text: 'French Guiana', value: 'GF' },\n  { text: 'French Polynesia', value: 'PF' },\n  { text: 'French Southern Territories', value: 'TF' },\n  { text: 'Gabon', value: 'GA' },\n  { text: 'Gambia', value: 'GM' },\n  { text: 'Georgia', value: 'GE' },\n  { text: 'Germany', value: 'DE' },\n  { text: 'Ghana', value: 'GH' },\n  { text: 'Gibraltar', value: 'GI' },\n  { text: 'Greece', value: 'GR' },\n  { text: 'Greenland', value: 'GL' },\n  { text: 'Grenada', value: 'GD' },\n  { text: 'Guadeloupe', value: 'GP' },\n  { text: 'Guam', value: 'GU' },\n  { text: 'Guatemala', value: 'GT' },\n  { text: 'Guernsey', value: 'GG' },\n  { text: 'Guinea', value: 'GN' },\n  { text: 'Guinea-Bissau', value: 'GW' },\n  { text: 'Guyana', value: 'GY' },\n  { text: 'Haiti', value: 'HT' },\n  { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n  { text: 'Holy See (Vatican City State)', value: 'VA' },\n  { text: 'Honduras', value: 'HN' },\n  { text: 'Hong Kong', value: 'HK' },\n  { text: 'Hungary', value: 'HU' },\n  { text: 'Iceland', value: 'IS' },\n  { text: 'India', value: 'IN' },\n  { text: 'Indonesia', value: 'ID' },\n  { text: 'Iran, Islamic Republic Of', value: 'IR' },\n  { text: 'Iraq', value: 'IQ' },\n  { text: 'Ireland', value: 'IE' },\n  { text: 'Isle of Man', value: 'IM' },\n  { text: 'Israel', value: 'IL' },\n  { text: 'Italy', value: 'IT' },\n  { text: 'Jamaica', value: 'JM' },\n  { text: 'Japan', value: 'JP' },\n  { text: 'Jersey', value: 'JE' },\n  { text: 'Jordan', value: 'JO' },\n  { text: 'Kazakhstan', value: 'KZ' },\n  { text: 'Kenya', value: 'KE' },\n  { text: 'Kiribati', value: 'KI' },\n  { text: \"Korea, Democratic People'S Republic of\", value: 'KP' },\n  { text: 'Korea, Republic of', value: 'KR' },\n  { text: 'Kuwait', value: 'KW' },\n  { text: 'Kyrgyzstan', value: 'KG' },\n  { text: \"Lao People'S Democratic Republic\", value: 'LA' },\n  { text: 'Latvia', value: 'LV' },\n  { text: 'Lebanon', value: 'LB' },\n  { text: 'Lesotho', value: 'LS' },\n  { text: 'Liberia', value: 'LR' },\n  { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n  { text: 'Liechtenstein', value: 'LI' },\n  { text: 'Lithuania', value: 'LT' },\n  { text: 'Luxembourg', value: 'LU' },\n  { text: 'Macao', value: 'MO' },\n  { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n  { text: 'Madagascar', value: 'MG' },\n  { text: 'Malawi', value: 'MW' },\n  { text: 'Malaysia', value: 'MY' },\n  { text: 'Maldives', value: 'MV' },\n  { text: 'Mali', value: 'ML' },\n  { text: 'Malta', value: 'MT' },\n  { text: 'Marshall Islands', value: 'MH' },\n  { text: 'Martinique', value: 'MQ' },\n  { text: 'Mauritania', value: 'MR' },\n  { text: 'Mauritius', value: 'MU' },\n  { text: 'Mayotte', value: 'YT' },\n  { text: 'Mexico', value: 'MX' },\n  { text: 'Micronesia, Federated States of', value: 'FM' },\n  { text: 'Moldova, Republic of', value: 'MD' },\n  { text: 'Monaco', value: 'MC' },\n  { text: 'Mongolia', value: 'MN' },\n  { text: 'Montserrat', value: 'MS' },\n  { text: 'Morocco', value: 'MA' },\n  { text: 'Mozambique', value: 'MZ' },\n  { text: 'Myanmar', value: 'MM' },\n  { text: 'Namibia', value: 'NA' },\n  { text: 'Nauru', value: 'NR' },\n  { text: 'Nepal', value: 'NP' },\n  { text: 'Netherlands', value: 'NL' },\n  { text: 'Netherlands Antilles', value: 'AN' },\n  { text: 'New Caledonia', value: 'NC' },\n  { text: 'New Zealand', value: 'NZ' },\n  { text: 'Nicaragua', value: 'NI' },\n  { text: 'Niger', value: 'NE' },\n  { text: 'Nigeria', value: 'NG' },\n  { text: 'Niue', value: 'NU' },\n  { text: 'Norfolk Island', value: 'NF' },\n  { text: 'Northern Mariana Islands', value: 'MP' },\n  { text: 'Norway', value: 'NO' },\n  { text: 'Oman', value: 'OM' },\n  { text: 'Pakistan', value: 'PK' },\n  { text: 'Palau', value: 'PW' },\n  { text: 'Palestinian Territory, Occupied', value: 'PS' },\n  { text: 'Panama', value: 'PA' },\n  { text: 'Papua New Guinea', value: 'PG' },\n  { text: 'Paraguay', value: 'PY' },\n  { text: 'Peru', value: 'PE' },\n  { text: 'Philippines', value: 'PH' },\n  { text: 'Pitcairn', value: 'PN' },\n  { text: 'Poland', value: 'PL' },\n  { text: 'Portugal', value: 'PT' },\n  { text: 'Puerto Rico', value: 'PR' },\n  { text: 'Qatar', value: 'QA' },\n  { text: 'Reunion', value: 'RE' },\n  { text: 'Romania', value: 'RO' },\n  { text: 'Russian Federation', value: 'RU' },\n  { text: 'RWANDA', value: 'RW' },\n  { text: 'Saint Helena', value: 'SH' },\n  { text: 'Saint Kitts and Nevis', value: 'KN' },\n  { text: 'Saint Lucia', value: 'LC' },\n  { text: 'Saint Pierre and Miquelon', value: 'PM' },\n  { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n  { text: 'Samoa', value: 'WS' },\n  { text: 'San Marino', value: 'SM' },\n  { text: 'Sao Tome and Principe', value: 'ST' },\n  { text: 'Saudi Arabia', value: 'SA' },\n  { text: 'Senegal', value: 'SN' },\n  { text: 'Serbia and Montenegro', value: 'CS' },\n  { text: 'Seychelles', value: 'SC' },\n  { text: 'Sierra Leone', value: 'SL' },\n  { text: 'Singapore', value: 'SG' },\n  { text: 'Slovakia', value: 'SK' },\n  { text: 'Slovenia', value: 'SI' },\n  { text: 'Solomon Islands', value: 'SB' },\n  { text: 'Somalia', value: 'SO' },\n  { text: 'South Africa', value: 'ZA' },\n  { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n  { text: 'Spain', value: 'ES' },\n  { text: 'Sri Lanka', value: 'LK' },\n  { text: 'Sudan', value: 'SD' },\n  { text: 'Suriname', value: 'SR' },\n  { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n  { text: 'Swaziland', value: 'SZ' },\n  { text: 'Sweden', value: 'SE' },\n  { text: 'Switzerland', value: 'CH' },\n  { text: 'Syrian Arab Republic', value: 'SY' },\n  { text: 'Taiwan, Province of China', value: 'TW' },\n  { text: 'Tajikistan', value: 'TJ' },\n  { text: 'Tanzania, United Republic of', value: 'TZ' },\n  { text: 'Thailand', value: 'TH' },\n  { text: 'Timor-Leste', value: 'TL' },\n  { text: 'Togo', value: 'TG' },\n  { text: 'Tokelau', value: 'TK' },\n  { text: 'Tonga', value: 'TO' },\n  { text: 'Trinidad and Tobago', value: 'TT' },\n  { text: 'Tunisia', value: 'TN' },\n  { text: 'Turkey', value: 'TR' },\n  { text: 'Turkmenistan', value: 'TM' },\n  { text: 'Turks and Caicos Islands', value: 'TC' },\n  { text: 'Tuvalu', value: 'TV' },\n  { text: 'Uganda', value: 'UG' },\n  { text: 'Ukraine', value: 'UA' },\n  { text: 'United Arab Emirates', value: 'AE' },\n  { text: 'United Kingdom', value: 'GB' },\n  { text: 'United States', value: 'US' },\n  { text: 'United States Minor Outlying Islands', value: 'UM' },\n  { text: 'Uruguay', value: 'UY' },\n  { text: 'Uzbekistan', value: 'UZ' },\n  { text: 'Vanuatu', value: 'VU' },\n  { text: 'Venezuela', value: 'VE' },\n  { text: 'Viet Nam', value: 'VN' },\n  { text: 'Virgin Islands, British', value: 'VG' },\n  { text: 'Virgin Islands, U.S.', value: 'VI' },\n  { text: 'Wallis and Futuna', value: 'WF' },\n  { text: 'Western Sahara', value: 'EH' },\n  { text: 'Yemen', value: 'YE' },\n  { text: 'Zambia', value: 'ZM' },\n  { text: 'Zimbabwe', value: 'ZW' },\n]\n","import { FormSectionConfig, ControlRowWidth, FormControlType, DateType, FileUploadStatus, InputType } from '@nokacreative/generic-react-form'\nimport { UserModel } from '../../domain/user.model'\nimport { countries } from './countries'\n\nexport const config = (\n  onUpload: (files: File[]) => void,\n  onRemove: (filename: string, index: number) => void,\n  fileUploadProgress: { [filename: string]: number },\n  fileStatuses: { [filename: string]: FileUploadStatus }\n): FormSectionConfig<UserModel>[] => {\n  return [\n    {\n      headerText: 'Login Details',\n      onInfoIconClicked: () =>\n        alert(\n          \"You can open up a modal or tooltip here. It's also available next to specific fields, like 'Bio' in this sample.\"\n        ),\n      controlRows: [\n        {\n          width: ControlRowWidth.FULL,\n          controls: [\n            {\n              type: FormControlType.INPUT,\n              label: 'Username',\n              propertyPath: 'username',\n              isRequired: true,\n              validator: (fieldValue: string) => {\n                if (fieldValue.toLocaleLowerCase().startsWith('a')) {\n                  return \"Cannot start with 'a'.\"\n                }\n              },\n            },\n            {\n              type: FormControlType.INPUT,\n              label: 'Password',\n              propertyPath: 'password',\n              inputType: InputType.PASSWORD,\n              isRequired: true,\n            },\n            {\n              type: FormControlType.INPUT,\n              label: 'Email',\n              propertyPath: 'email',\n              inputType: InputType.EMAIL,\n              isRequired: true,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      headerText: 'Profile',\n      controlRows: [\n        {\n          controls: [\n            {\n              type: FormControlType.INPUT,\n              label: 'Name',\n              propertyPath: 'name',\n              isRequired: true,\n            },\n            {\n              type: FormControlType.INPUT,\n              label: 'Age',\n              propertyPath: 'age',\n              inputType: InputType.NUMBER,\n              growthRatio: 0.3,\n            },\n            {\n              type: FormControlType.INPUT,\n              label: 'Date of birth',\n              propertyPath: 'dob',\n              inputType: InputType.DATE,\n              dateType: DateType.DATE_ONLY,\n              growthRatio: 0.64,\n            },\n          ],\n        },\n        {\n          controls: [\n            {\n              type: FormControlType.RADIO_GROUP,\n              label: 'Gender',\n              propertyPath: 'gender',\n              selections: [\n                { value: 'male', text: 'Male' },\n                { value: 'female', text: 'Female' },\n                { value: 'other', text: 'Other' },\n              ],\n            },\n            {\n              type: FormControlType.DROPDOWN,\n              label: 'Country',\n              propertyPath: 'country',\n              options: countries,\n              placeholder: 'Select',\n              pinnedValues: ['CA', 'US'],\n              showClearButton: true,\n            },\n          ],\n        },\n        {\n          width: ControlRowWidth.MEDIUM_LARGE,\n          controls: [\n            {\n              type: FormControlType.TEXTAREA,\n              label: 'Bio',\n              propertyPath: 'bio',\n              characterLimit: 300,\n              onInfoIconClicked: () =>\n                alert(\n                  \"You can open up a modal or tooltip here. It's also available next to section headers.\"\n                ),\n            },\n          ],\n        },\n        {\n          controls: [\n            {\n              type: FormControlType.ATTACHMENT,\n              label: 'Photo',\n              propertyPath: 'photoFilename',\n              supportedFileExtensions: ['png', 'jpg', 'bmp'],\n              onUpload,\n              onRemove,\n              messageOverrides: {\n                supportedFileFormats: 'Supported file formats: Image Files',\n              },\n              fileUploadProgress,\n              fileStatuses,\n              isMultiple: true,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      headerText: 'Job Search Details',\n      controlRows: [\n        {\n          width: ControlRowWidth.SMALL,\n          controls: [\n            {\n              type: FormControlType.INPUT,\n              label: 'Target Annual Salary',\n              propertyPath: 'targetAnnualSalary',\n              inputType: InputType.MONEY,\n              isRequired: true,\n            },\n          ],\n        },\n        {\n          controls: [\n            {\n              type: FormControlType.CHECKBOX_GROUP,\n              label: 'Fields',\n              propertyPath: 'fields',\n              isRequired: true,\n              selections: [\n                { value: 'engineering', text: 'Engineering' },\n                { value: 'architecture', text: 'Architecture' },\n                { value: 'art', text: 'Art' },\n              ],\n            },\n          ],\n        },\n        {\n          width: ControlRowWidth.SMALL,\n          controls: [\n            {\n              type: FormControlType.INPUT,\n              label: 'Phone Number',\n              propertyPath: 'phone',\n              isRequired: true,\n              inputType: InputType.PHONE,\n            },\n          ],\n        },\n      ],\n    },\n  ]\n}\n\n// @ts-expect-error\nexport const emptyModel: UserModel = {\n  username: '',\n  password: '',\n  email: '',\n  name: '',\n  gender: 'male',\n  fields: [],\n}\n","import { PartyModel } from '../domain/party.model'\nimport { UserModel } from '../domain/user.model'\n\n// Fake document DB\nexport interface Database {\n  users: UserModel[]\n  parties: PartyModel[]\n}\n\nexport const database: Database = {\n  users: [\n    {\n      username: 'user1',\n      password: 'asdf@#3',\n      email: 'user.1@asdf.com',\n      name: 'User 1',\n      age: 20,\n      gender: 'male',\n      dob: new Date(2001, 5, 1).getTime(),\n      bio: 'Hi',\n      targetAnnualSalary: 1300000,\n      fields: ['engineering'],\n      phone: '123-456-7890',\n      country: 'CA',\n      photoFilename: 'photo.jpg',\n    },\n    {\n      username: 'user2',\n      password: 'A1B2C3',\n      email: 'second-user@fgsg.com',\n      name: 'User 2',\n      age: 30,\n      gender: 'female',\n      dob: new Date(1991, 8, 30).getTime(),\n      bio: 'Hurray',\n      targetAnnualSalary: 9000000000,\n      fields: ['architecture', 'art'],\n      phone: '000-000-0000',\n      country: 'US',\n    },\n  ],\n  parties: [\n    {\n      venue: 'Some Place',\n      date: new Date().getTime(),\n      guests: [\n        { name: 'Person 1', email: 'person1@email.com' },\n        { name: 'Person 2', email: 'person2@email.com' },\n      ],\n    },\n  ],\n}\n","import { useRef, useState } from 'react'\nimport { FileUploadStatus } from '@nokacreative/generic-react-form'\n\nexport function useFakeClient() {\n  const [fileStatuses, setFileStatuses] = useState<{\n    [filename: string]: FileUploadStatus\n  }>({})\n  const [progress, setProgress] = useState<{ [filename: string]: number }>({})\n  const numTimesUploadedTest = useRef<number>(0)\n\n  function upload(files: File[]) {\n    const id = setInterval(() => {\n      setProgress((progress: { [filename: string]: number }) => {\n        const newProgressMap = { ...progress }\n        files.forEach((f) => {\n          const currentProgress = newProgressMap[f.name]\n          if (\n            numTimesUploadedTest.current <= 2 &&\n            f.name.split('.')[0].toLowerCase() === 'test'\n          ) {\n            if (currentProgress === 40) {\n              setFileStatuses({\n                ...fileStatuses,\n                [f.name]: FileUploadStatus.FAILED,\n              })\n              newProgressMap[f.name] = 0\n              numTimesUploadedTest.current += 1\n              return\n            }\n            if (fileStatuses[f.name] === FileUploadStatus.FAILED) {\n              setFileStatuses({\n                ...fileStatuses,\n                [f.name]: FileUploadStatus.IN_PROGRESS,\n              })\n              numTimesUploadedTest.current += 1\n              return\n            }\n          }\n          let newProgress = 100\n          if (currentProgress === undefined) {\n            newProgress = 0\n            setFileStatuses({\n              ...fileStatuses,\n              [f.name]: FileUploadStatus.IN_PROGRESS,\n            })\n          } else if (currentProgress < 100) {\n            newProgress = currentProgress + 20\n          } else {\n            setFileStatuses({\n              ...fileStatuses,\n              [f.name]: FileUploadStatus.UPLOADED,\n            })\n            clearInterval(id)\n          }\n          newProgressMap[f.name] = newProgress\n        })\n        return newProgressMap\n      })\n    }, 500)\n  }\n\n  function remove(filename: string) {\n    const { [filename]: _, ...rest } = fileStatuses\n    setFileStatuses(rest)\n  }\n\n  return { upload, remove, fileStatuses, progress }\n}\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport './styles.scss'\n\ntype Props<T> = {\n  headerText: string\n  description: React.ReactNode\n  children?: React.ReactNode\n  renderForm?: (\n    onSubmit: (data: T) => void,\n    submittedData: T | undefined,\n    sampleDataToUse: T | undefined\n  ) => React.ReactNode\n  sampleData?: T[]\n  sampleDataName?: (data: T) => string\n}\n\nexport function SamplePage<T>(props: Props<T>) {\n  const [submittedData, setSubmittedData] = useState<T>()\n  const [sampleDataToUse, setSampleDataToUse] = useState<T>()\n  return (\n    <article className=\"sample-page\">\n      <h1>{props.headerText}</h1>\n      <div className=\"description\">\n        {props.description}\n        {props.sampleData && (\n          <section className=\"sample-data-section\">\n            <p>Check out some sample data:</p>\n            {props.sampleData.map((d, i) => (\n              <button\n                type=\"button\"\n                className=\"sample-selection\"\n                key={`sample-data-${i}`}\n                onClick={() => setSampleDataToUse(d)}\n              >\n                {(props.sampleDataName as Function)(d)}\n              </button>\n            ))}\n          </section>\n        )}\n      </div>\n\n      {submittedData && (\n        <div className=\"banner\">\n          <FontAwesomeIcon icon={faCheck} />\n          <span>Submitted!</span>\n        </div>\n      )}\n      {props.renderForm &&\n        props.renderForm(\n          (data: T) => setSubmittedData(data),\n          submittedData,\n          sampleDataToUse\n        )}\n      {props.children}\n    </article>\n  )\n}\n","import { Form, ValidationMode } from '@nokacreative/generic-react-form'\nimport './styles.scss'\n\nimport { config, emptyModel } from './data'\nimport { database } from '../../assets/database'\nimport { useFakeClient } from './fakeClient'\nimport { SamplePage } from '../../common/samplePage'\nimport { UserModel } from '../../domain/user.model'\n\nexport const Basic = () => {\n  const { upload, remove, fileStatuses, progress } = useFakeClient()\n\n  return (\n    <SamplePage\n      headerText=\"Overview\"\n      description={\n        <>\n          <p>\n            An overview of all the control types and some configuration offered by this\n            package.\n          </p>\n          <p>\n            In this particular sample, all fields marked with a red asterisk are required.\n          </p>\n        </>\n      }\n      renderForm={(\n        onSubmit: (data: UserModel) => void,\n        submittedData: UserModel | undefined,\n        sampleDataToUse: UserModel | undefined\n      ) => (\n        <Form\n          sections={config(upload, remove, progress, fileStatuses)}\n          defaultValues={sampleDataToUse || submittedData || emptyModel}\n          onSubmit={onSubmit}\n          formatRequiredLabels={(label: string) => (\n            <>\n              <span className=\"required-asterisk\">*</span>\n              {label}\n            </>\n          )}\n          validationMode={ValidationMode.BLUR | ValidationMode.SUBMIT}\n          scrollContainerSelector=\"main\"\n          isReadOnly={submittedData !== undefined}\n        />\n      )}\n      sampleData={database.users}\n      sampleDataName={(user: UserModel) => user.name}\n    />\n  )\n}\n","import {\n  FormSectionConfig,\n  ControlRowWidth,\n  FormControlType,\n  DateType,\n  InputType,\n} from '@nokacreative/generic-react-form'\nimport { PartyModel } from '../../domain/party.model'\n\nexport const emptyModel: PartyModel = {\n  venue: '',\n  date: new Date().getTime(),\n  guests: [\n    {\n      name: '',\n      email: '',\n    },\n  ],\n}\n\nexport const config: FormSectionConfig<PartyModel>[] = [\n  {\n    headerText: 'Booking Details',\n    controlRows: [\n      {\n        width: ControlRowWidth.FULL,\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Venue Name',\n            propertyPath: 'venue',\n            isRequired: true,\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Date',\n            propertyPath: 'date',\n            inputType: InputType.DATE,\n            dateType: DateType.DATE_AND_TIME,\n            earliestDate: new Date(),\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Guests to invite',\n    isArray: true,\n    parentPropertyPath: 'guests',\n    addEntryWhenEmpty: true,\n    allowReordering: true,\n    itemName: 'Guest',\n    blankValues: emptyModel.guests,\n    controlRows: [\n      {\n        width: ControlRowWidth.FULL,\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Name',\n            propertyPath: 'name',\n            isRequired: true,\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Email',\n            propertyPath: 'email',\n            inputType: InputType.EMAIL,\n          },\n        ],\n      },\n    ],\n  },\n]\n","import React from 'react'\nimport { Form, ValidationMode } from '@nokacreative/generic-react-form'\n\nimport { config, emptyModel } from './data'\nimport { database } from '../../assets/database'\nimport { SamplePage } from '../../common/samplePage'\nimport { PartyModel } from '../../domain/party.model'\n\nexport const ArraySample = () => (\n  <SamplePage\n    headerText=\"Arrays\"\n    description={\n      <>\n        The array section in this form is the <em>Guests to invite</em> section. Array\n        entries can be added, removed, with the following optional functionality:\n        <ul>\n          <li>Allow entries to be reordered</li>\n          <li>Add an empty entry when the last one is removed</li>\n          <li>\n            Specification of a name for each entry (&quot;Guest&quot; in this sample)\n          </li>\n        </ul>\n      </>\n    }\n    renderForm={(\n      onSubmit: (data: PartyModel) => void,\n      submittedData: PartyModel | undefined,\n      sampleDataToUse: PartyModel | undefined\n    ) => (\n      <Form\n        sections={config}\n        defaultValues={sampleDataToUse || submittedData || emptyModel}\n        onSubmit={onSubmit}\n        validationMode={ValidationMode.BLUR}\n        scrollContainerSelector=\"main\"\n        isReadOnly={submittedData !== undefined}\n      />\n    )}\n    sampleData={database.parties}\n    sampleDataName={(party: PartyModel) => party.venue}\n  />\n)\n","import { useState } from 'react'\nimport './styles.scss'\n\nimport { SamplePage } from '../../common/samplePage'\nimport {\n  DateInput,\n  DateType,\n  Input,\n  InputType,\n  Checkbox,\n  Radio,\n  Dropdown,\n  InlineError,\n} from '@nokacreative/generic-react-form'\n\nexport const StandaloneSample = () => {\n  const [showError, setShowError] = useState<boolean>(false)\n\n  return (\n    <SamplePage\n      headerText=\"Standalone Controls\"\n      description=\"All controls, including error messages, can be used independently, outside of forms.\"\n    >\n      <label>Text Input</label>\n      <Input\n        type={InputType.TEXT}\n        htmlProps={{ placeholder: 'Type \"hello\" to see something happen!' }}\n        onChange={(value: string) => {\n          setShowError(value === 'hello')\n        }}\n      />\n      {showError && <InlineError message=\"Something happened\" />}\n\n      <label>Date Input</label>\n      <DateInput\n        dateType={DateType.DATE_AND_TIME}\n        onChange={() => {\n          /* Skip */\n        }}\n      />\n\n      <br />\n      <p>Select your desired option:</p>\n      <Dropdown\n        options={[\n          { value: 'a', text: 'None of these' },\n          { value: 'b', text: 'Sample Controls' },\n          { value: 'c', text: 'Will do anything' },\n          { value: 'd', text: 'FYI' },\n        ]}\n        id=\"standalone-dropdown\"\n        defaultValue=\"a\"\n      />\n\n      <br />\n      <p>Agree to our terms and conditions:</p>\n      <Checkbox label=\"Sure\" />\n\n      <br />\n      <p>View this page in:</p>\n      <Radio label=\"Normal mode\" name=\"pageMode\" value=\"normal\" />\n      <Radio label=\"Compact mode\" name=\"pageMode\" value=\"compact\" />\n    </SamplePage>\n  )\n}\n","import {\n  FormSectionConfig,\n  ControlRowWidth,\n  FormControlType,\n  RadioLayout,\n  InputType,\n} from '@nokacreative/generic-react-form'\nimport { TestModel } from './model'\n\nexport const emptyModel: TestModel = {\n  petType: '',\n  breed: '',\n  color: [],\n  age: 0,\n  favFood: 'Nothing when under 1',\n}\n\nexport const config: FormSectionConfig<TestModel>[] = [\n  {\n    headerText: 'I am looking for a...',\n    controlRows: [\n      {\n        width: ControlRowWidth.FULL,\n        controls: [\n          {\n            type: FormControlType.RADIO_GROUP,\n            label: undefined,\n            propertyPath: 'petType',\n            isRequired: true,\n            selections: [\n              { value: 'dog', text: 'Dog' },\n              { value: 'cat', text: 'Cat' },\n              { value: 'turtle', text: 'Turtle' },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Dog details',\n    isHidden: (data: TestModel) => data.petType !== 'dog',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: \"We don't have those\",\n            propertyPath: 'noDogs',\n            selections: [{ value: true, text: 'OK' }],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Cat details',\n    isHidden: (data: TestModel) => data.petType !== 'cat',\n    controlRows: [\n      {\n        width: ControlRowWidth.MEDIUM_LARGE,\n        controls: [\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Breed',\n            propertyPath: 'breed',\n            placeholder: 'Choose...',\n            options: [\n              {\n                text: \"I don't\",\n                value: 'a',\n              },\n              {\n                text: 'actually know',\n                value: 'b',\n              },\n              {\n                text: 'any cat breeds',\n                value: 'c',\n              },\n              {\n                text: 'but this one is colourless',\n                value: 'd',\n              },\n            ],\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: 'Colour',\n            propertyPath: 'color',\n            isDisabled: (data: TestModel) => data.breed === 'd',\n            selections: [\n              { value: 'black', text: 'Black' },\n              { value: 'white', text: 'White' },\n              { value: 'gray', text: 'Gray' },\n              { value: 'brown', text: 'Brown' },\n              { value: 'orange', text: 'Orange' },\n              { value: 'yellow', text: 'Yellow' },\n            ],\n            layout: RadioLayout.GRID,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Turtle details',\n    isHidden: (data: TestModel) => data.petType !== 'turtle',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            inputType: InputType.NUMBER,\n            label: 'Age',\n            propertyPath: 'age',\n            growthRatio: 0.5,\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Favourite food',\n            propertyPath: 'favFood',\n            isReadOnly: (data: TestModel) => data.age < 1,\n          },\n        ],\n      },\n    ],\n  },\n]\n","import React from 'react'\nimport { Form, ValidationMode } from '@nokacreative/generic-react-form'\n\nimport { config, emptyModel } from './data'\nimport { SamplePage } from '../../common/samplePage'\nimport { TestModel } from './model'\n\nexport const ConditionalSample = () => (\n  <SamplePage\n    headerText=\"Conditional configurations\"\n    description={\n      <>\n        <p>\n          All sections and individual fields can be toggled dynamically based off the\n          current form data in the following ways:\n        </p>\n        <ul>\n          <li>Show or Hide</li>\n          <li>Make required or not required</li>\n          <li>Disable or enable</li>\n          <li>Make read-only or not</li>\n        </ul>\n        <p>\n          Note that the most specific setting will be used. For example, if the entire\n          form is set to read-only, but a specific section or field sets{' '}\n          <code>isReadOnly: false</code>, then only that section or field will not be\n          read-only.\n        </p>\n        <p>\n          This is demonstrated here with the <em>Favourite food</em> field under the{' '}\n          <em>Turtle</em> selection: if you set the age to anything over 0, the field will\n          be enabled. On submission, the form is set to read-only, but the condition for\n          enabling the field still holds true, thus causing it to still be enabled.\n          <br />\n          <span className=\"footnote\">\n            (Note: To get around this, the configuration should include checks for whether\n            or not the form was submitted.)\n          </span>\n        </p>\n        <p>\n          The exception to this is for hidden sections, which will not render (and thus go\n          through and check) any of its fields for optimization; thus, a section marked as\n          hidden with one specific field set to <code>isHidden: false</code> will still be\n          entirely hidden.\n        </p>\n      </>\n    }\n    renderForm={(\n      onSubmit: (data: TestModel) => void,\n      submittedData: TestModel | undefined,\n      sampleDataToUse: TestModel | undefined\n    ) => {\n      const isSubmitted = submittedData !== undefined\n      return (\n        <Form\n          sections={config}\n          defaultValues={sampleDataToUse || submittedData || emptyModel}\n          onSubmit={onSubmit}\n          validationMode={\n            ValidationMode.LOAD | ValidationMode.BLUR | ValidationMode.SUBMIT\n          }\n          scrollContainerSelector=\"main\"\n          isReadOnly={isSubmitted}\n          disableSubmitWhenInvalid\n          hideErrorsOnLoad\n        />\n      )\n    }}\n  />\n)\n","import addDays from 'date-fns/addDays'\nimport { registerLocale } from 'react-datepicker'\nimport es from 'date-fns/locale/es'\n\nimport {\n  FormSectionConfig,\n  FormControlType,\n  ControlRowWidth,\n  DateType,\n  InputType,\n} from '@nokacreative/generic-react-form'\nimport { TestModel } from './model'\n\nregisterLocale('es', es)\n\nexport const emptyModel: TestModel = {\n  name: '',\n  phone: '',\n  email: '',\n  age: 0,\n  salary: 500,\n  dateTime: new Date().getTime(),\n  date: new Date().getTime(),\n  time: new Date().getTime(),\n  rangedDate: [],\n  rangedTime: [],\n}\n\nexport const config: FormSectionConfig<TestModel>[] = [\n  {\n    headerText: 'Standard Inputs',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Text',\n            propertyPath: 'name',\n            placeholder: 'Placeholder',\n            minLength: 3,\n            maxLength: 10,\n            description: (\n              <span>\n                Between 3 and 10 characters (<b>minLength</b> and <b>maxLength</b>)\n              </span>\n            ),\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Number',\n            propertyPath: 'age',\n            inputType: InputType.NUMBER,\n            minValue: 20,\n            maxValue: 50,\n            description: (\n              <span>\n                Between 20 and 50 characters (<b>minValue</b> and <b>maxValue</b>)\n              </span>\n            ),\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Email',\n            propertyPath: 'email',\n            inputType: InputType.EMAIL,\n            description: 'Automatically validates when required',\n            isRequired: true,\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Phone',\n            propertyPath: 'phone',\n            inputType: InputType.PHONE,\n            description: 'Automatically validates when required',\n            isRequired: true,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Special Inputs',\n    controlRows: [\n      {\n        width: ControlRowWidth.SMALL,\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Money',\n            propertyPath: 'salary',\n            inputType: InputType.MONEY,\n            currencyCode: 'JPY',\n            description: 'Can specify currency code',\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Date and Time',\n            propertyPath: 'date',\n            inputType: InputType.DATE,\n            dateType: DateType.DATE_AND_TIME,\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Date Only',\n            propertyPath: 'date',\n            inputType: InputType.DATE,\n            dateType: DateType.DATE_ONLY,\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Time Only',\n            propertyPath: 'time',\n            inputType: InputType.DATE,\n            dateType: DateType.TIME_ONLY,\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Ranged',\n            propertyPath: 'rangeDate',\n            inputType: InputType.DATE,\n            dateType: DateType.DATE_ONLY,\n            earliestDate: new Date(),\n            latestDate: addDays(new Date(), 20),\n            isRanged: true,\n            description: 'With earliest and latest date',\n          },\n          {\n            type: FormControlType.INPUT,\n            label: 'Ranged time',\n            propertyPath: 'rangedTime',\n            inputType: InputType.DATE,\n            dateType: DateType.TIME_ONLY,\n            description: 'With earliest and latest time',\n            earliestTime: (() => {\n              const x = new Date()\n              x.setHours(8)\n              return x\n            })(),\n            latestTime: (() => {\n              const x = new Date()\n              x.setHours(17)\n              return x\n            })(),\n          },\n        ],\n      },\n      {\n        width: ControlRowWidth.MEDIUM,\n        controls: [\n          {\n            type: FormControlType.INPUT,\n            label: 'Formatted',\n            propertyPath: 'rangeDate',\n            inputType: InputType.DATE,\n            dateType: DateType.DATE_AND_TIME,\n            dateFormat: 'QQQQ',\n            timeFormat: 'H O',\n            locale: 'es',\n            description: 'Date format, time format, and locale',\n          },\n        ],\n      },\n    ],\n  },\n]\n","import { Form, ValidationMode } from '@nokacreative/generic-react-form'\n\nimport { SamplePage } from '../../common/samplePage'\nimport { config, emptyModel } from './data'\nimport { TestModel } from './model'\n\nexport const InputsSample = () => (\n  <SamplePage\n    headerText=\"Input\"\n    description=\"All available input types and their configurations.\"\n    renderForm={(\n      onSubmit: (data: TestModel) => void,\n      submittedData: TestModel | undefined\n    ) => (\n      <Form\n        sections={config}\n        defaultValues={submittedData || emptyModel}\n        validationMode={ValidationMode.BLUR | ValidationMode.SUBMIT}\n        onSubmit={onSubmit}\n        submitButtonText=\"OK\"\n        isReadOnly={submittedData !== undefined}\n      />\n    )}\n  />\n)\n","import {\n  FormSectionConfig,\n  FormControlType,\n  ControlRowWidth,\n  RadioLayout,\n  RadioSelection,\n} from '@nokacreative/generic-react-form'\nimport { TestModel } from './model'\n\nexport const emptyModel: TestModel = {\n  r1: '',\n  r2: '',\n  c1: [],\n  c2: [],\n  c3: [],\n  c4: [],\n  c5: [],\n  c6: [],\n}\n\nfunction generateSelections(numSelections: number): RadioSelection[] {\n  return Array.from({ length: numSelections }).map((_, i) => ({\n    value: `v${i}`,\n    text: `Value ${i + 1}`,\n  }))\n}\n\nexport const config: FormSectionConfig<TestModel>[] = [\n  {\n    headerText: 'Radios and H/V Layouts',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.RADIO_GROUP,\n            label: 'Horizontal Layout (default)',\n            propertyPath: 'r1',\n            selections: generateSelections(3),\n          },\n          {\n            type: FormControlType.RADIO_GROUP,\n            label: 'Vertical Layout',\n            propertyPath: 'r2',\n            selections: generateSelections(3),\n            layout: RadioLayout.VERTICAL,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Checkboxes and Grid Layout',\n    controlRows: [\n      {\n        width: ControlRowWidth.MEDIUM,\n        controls: [\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: '2 columns',\n            propertyPath: 'c1',\n            selections: generateSelections(4),\n            layout: RadioLayout.GRID,\n            numGridColumns: 2,\n          },\n        ],\n      },\n      {\n        width: ControlRowWidth.MEDIUM_LARGE,\n        controls: [\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: '3 columns (default)',\n            propertyPath: 'c2',\n            selections: generateSelections(6),\n            layout: RadioLayout.GRID,\n            numGridColumns: 3,\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: '4 columns',\n            propertyPath: 'c3',\n            selections: generateSelections(8),\n            layout: RadioLayout.GRID,\n            numGridColumns: 4,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Checkboxes-exclusive validators',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: 'Min selections',\n            propertyPath: 'c4',\n            isRequired: true,\n            selections: generateSelections(4),\n            minNumSelections: 2,\n          },\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: 'Max selections',\n            propertyPath: 'c5',\n            selections: generateSelections(4),\n            maxNumSelections: 2,\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.CHECKBOX_GROUP,\n            label: 'Min and Max',\n            propertyPath: 'c6',\n            isRequired: true,\n            selections: generateSelections(6),\n            minNumSelections: 2,\n            maxNumSelections: 4,\n          },\n        ],\n      },\n    ],\n  },\n]\n","import { Form, ValidationMode } from '@nokacreative/generic-react-form'\nimport { SamplePage } from '../../common/samplePage'\nimport { config, emptyModel } from './data'\nimport { TestModel } from './model'\n\nexport const RadioCheckboxSample = () => (\n  <SamplePage\n    headerText=\"Radios And Checkboxes\"\n    description={\n      <>\n        <p>\n          Both radios and checkboxes allow for a horizontal, vertical, or grid layout.\n          When using a grid, the number of columns can be specified to be 2, 3, or 4.\n          <br />\n          <span className=\"footnote\">\n            Note: If viewing on mobile or small screen widths, the grids will\n            automatically resize to a column count that best suits the current available\n            space.\n          </span>\n        </p>\n        <p>\n          Checkboxes have additional properties to specify the minimum and/or maximum\n          number of selections required. If either is specified, an overridable\n          description is automatically applied to the control. Note that a required\n          checkbox with no minimum specified implies that at least one selection is\n          required.\n        </p>\n      </>\n    }\n    renderForm={(\n      onSubmit: (data: TestModel) => void,\n      submittedData: TestModel | undefined\n    ) => (\n      <Form\n        sections={config}\n        defaultValues={submittedData || emptyModel}\n        validationMode={ValidationMode.BLUR | ValidationMode.SUBMIT}\n        onSubmit={onSubmit}\n        submitButtonText=\"OK\"\n        isReadOnly={submittedData !== undefined}\n      />\n    )}\n  />\n)\n","import { FormSectionConfig, FormControlType } from '@nokacreative/generic-react-form'\nimport { TestModel } from './model'\n\nexport const emptyModel: TestModel = {\n  limit: '',\n  resize1: '',\n  resize2: '',\n  resize3: '',\n  md: '',\n  md2: '',\n}\n\nexport const config: FormSectionConfig<TestModel>[] = [\n  {\n    headerText: '',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.TEXTAREA,\n            label: 'Character limit',\n            propertyPath: 'limit',\n            characterLimit: 10,\n          },\n          {\n            type: FormControlType.TEXTAREA,\n            label: 'Vertical Resize',\n            propertyPath: 'resize1',\n            allowVerticalResize: true,\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.TEXTAREA,\n            label: 'Horizontal Resize',\n            propertyPath: 'resize2',\n            allowHorizontalResize: true,\n          },\n          {\n            type: FormControlType.TEXTAREA,\n            label: 'Both Directions Resize',\n            propertyPath: 'resize3',\n            allowVerticalResize: true,\n            allowHorizontalResize: true,\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.TEXTAREA,\n            label: 'Rich',\n            propertyPath: 'md',\n            useMarkdown: true,\n          },\n          {\n            type: FormControlType.TEXTAREA,\n            label: 'Rich (with image uploader)',\n            propertyPath: 'md2',\n            useMarkdown: true,\n            allowImageUpload: true,\n          },\n        ],\n      },\n    ],\n  },\n]\n","import { Form, ValidationMode } from '@nokacreative/generic-react-form'\nimport { SamplePage } from '../../common/samplePage'\nimport { config, emptyModel } from './data'\nimport { TestModel } from './model'\n\nexport const TextareaSample = () => (\n  <SamplePage\n    headerText=\"Textareas\"\n    description={\n      <>\n        <p>\n          Textareas can be configured to have a character limit and resize directions. A\n          character limit stops the user from being able to type past the specified amount\n          of characters, as opposed to causing a validation error.\n        </p>\n        <p>\n          A rich textarea supporting markdown can also be created by simply adding{' '}\n          <em>useMarkdown: true</em> to the configuration. For images, a full-fledge image\n          uploader can be used by specifying <em>allowImageUpload: true</em>. A previewer\n          is added below rich textareas and is updated in realtime.\n        </p>\n        <p>\n          <span className=\"footnote\">\n            Note: a read-only version of rich textareas currently just render the exact\n            text content instead of the preview. A <em>MarkdownRenderer</em> is available\n            to render out rich contents.\n          </span>\n        </p>\n      </>\n    }\n    renderForm={(\n      onSubmit: (data: TestModel) => void,\n      submittedData: TestModel | undefined\n    ) => (\n      <Form\n        sections={config}\n        defaultValues={submittedData || emptyModel}\n        validationMode={ValidationMode.BLUR | ValidationMode.SUBMIT}\n        onSubmit={onSubmit}\n        submitButtonText=\"OK\"\n        isReadOnly={submittedData !== undefined}\n      />\n    )}\n  />\n)\n","import {\n  FormSectionConfig,\n  FormControlType,\n  ControlRowWidth,\n  DropdownOption,\n} from '@nokacreative/generic-react-form'\nimport { TestModel } from './model'\n\nexport const emptyModel: TestModel = {\n  basic: '',\n  pinned: '',\n  multi: [],\n  multiClear: [],\n  noFiltering: '',\n  emptyText: '',\n  ecn: '',\n}\n\nconst options: DropdownOption[] = [\n  { value: 'a', text: 'Option A' },\n  { value: 'b', text: 'Option B' },\n  { value: 'c', text: 'Option C' },\n  { value: 'd', text: 'Option D' },\n  { value: 'e', text: 'Option E' },\n  { value: 'f', text: 'Option F' },\n  { value: 'g', text: 'Option G' },\n]\n\nexport const config = (isSubmitted: boolean): FormSectionConfig<TestModel>[] => [\n  {\n    headerText: 'Common',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Basic',\n            propertyPath: 'basic',\n            options,\n            placeholder: 'Optional placeholder',\n          },\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'With Pinned values',\n            propertyPath: 'pinned',\n            options,\n            pinnedValues: ['c', 'd'],\n            placeholder: 'Select...',\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Multiple',\n            propertyPath: 'multi',\n            options,\n            placeholder: 'Select multiple...',\n            isMultiple: true,\n          },\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Multiple with Clear Button',\n            propertyPath: 'multi',\n            options,\n            placeholder: 'Select multiple...',\n            isMultiple: true,\n            showClearButton: true,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Special',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'No Filtering',\n            propertyPath: 'noFiltering',\n            description: 'Good for menu items',\n            options: [\n              { value: 'print', text: 'Print' },\n              { value: 'help', text: 'Help' },\n            ],\n            allowFiltering: false,\n            placeholder: 'Menu',\n          },\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'No Filtering + no save',\n            propertyPath: '',\n            description: (\n              <>\n                The value is not saved to the form&apos;s data, and not persisted as a\n                selection. There is also an <code>onOptionSelected</code> callback here.\n              </>\n            ),\n            options: [\n              { value: 'print', text: 'Print' },\n              { value: 'help', text: 'Help' },\n            ],\n            allowFiltering: false,\n            saveSelection: false,\n            placeholder: 'Menu',\n            onOptionSelected: (option: DropdownOption | undefined) => {\n              if (option?.value === 'print') {\n                alert('Printing!')\n              } else if (option?.value === 'help') {\n                alert('This is a help modal')\n              }\n            },\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Empty Options text',\n            propertyPath: '',\n            options,\n            placeholder: \"Type 'asdf'\",\n            emptyOptionsText: 'Nothing here!!!',\n            description: 'Used when there are no filter results',\n          },\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Extra class name',\n            propertyPath: '',\n            options,\n            description: 'For extra styling',\n            placeholder: 'This is a placeholder',\n            extraClassName: 'test',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    headerText: 'Callbacks',\n    onInfoIconClicked: () => alert('This section will be hidden on submit.'),\n    isHidden: isSubmitted,\n    controlRows: [\n      {\n        width: ControlRowWidth.MEDIUM,\n        controls: [\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Open and Close',\n            propertyPath: '',\n            options,\n            onOpen: () => alert('Opened'),\n            onClose: () => alert('Closed'),\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Single Option Selected',\n            propertyPath: 'emptyText',\n            options,\n            showClearButton: true,\n            onOptionSelected: (option: DropdownOption | undefined) =>\n              option\n                ? alert(`You selected ${option.text}`)\n                : alert('You cleared the selection'),\n          },\n          {\n            type: FormControlType.DROPDOWN,\n            label: 'Options Chanaged',\n            propertyPath: 'ecn',\n            options,\n            showClearButton: true,\n            isMultiple: true,\n            onOptionsChanged: (options: DropdownOption[] | undefined) =>\n              options\n                ? alert(`You selected ${options.length} option(s)`)\n                : alert('You cleared all selections'),\n          },\n        ],\n      },\n    ],\n  },\n]\n","import { Form, ValidationMode } from '@nokacreative/generic-react-form'\nimport './styles.scss'\n\nimport { SamplePage } from '../../common/samplePage'\nimport { config, emptyModel } from './data'\nimport { TestModel } from './model'\n\nexport const DropdownSample = () => (\n  <SamplePage\n    headerText=\"Dropdowns\"\n    description=\"Dropdowns have many available configurations, though the most basic one only requires a list of options. They are filterable by default.\"\n    renderForm={(\n      onSubmit: (data: TestModel) => void,\n      submittedData: TestModel | undefined\n    ) => (\n      <Form\n        sections={config(submittedData !== undefined)}\n        defaultValues={submittedData || emptyModel}\n        validationMode={ValidationMode.BLUR | ValidationMode.SUBMIT}\n        onSubmit={onSubmit}\n        submitButtonText=\"OK\"\n        isReadOnly={submittedData !== undefined}\n      />\n    )}\n  />\n)\n","import { faUpload } from '@fortawesome/free-solid-svg-icons'\nimport {\n  FormSectionConfig,\n  FormControlType,\n  FileUploadStatus,\n} from '@nokacreative/generic-react-form'\nimport { TestModel } from './model'\n\nexport const emptyModel: TestModel = {\n  multi: [],\n}\n\nconst onUpload = (files: File[]) => alert(`You have uploaded ${files.length} file(s).`)\nconst onRemove = (filename: string) => alert(`You have removed ${filename}.`)\n\nexport const config = (\n  clientUpload: (files: File[]) => void,\n  clientRemove: (filename: string, index: number) => void,\n  fileUploadProgress: { [filename: string]: number },\n  fileStatuses: { [filename: string]: FileUploadStatus }\n): FormSectionConfig<TestModel>[] => [\n  {\n    headerText: 'Common',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.ATTACHMENT,\n            label: 'Basic',\n            propertyPath: 'basic',\n            description:\n              'In this section, the callbacks do nothing except for show alerts',\n            onUpload,\n            onRemove,\n          },\n\n          {\n            type: FormControlType.ATTACHMENT,\n            label: 'Supported Extensions',\n            propertyPath: 'ext',\n            description: 'Whitelists extensions to allow.',\n            onUpload,\n            onRemove,\n            supportedFileExtensions: ['.jpg', '.txt'],\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.ATTACHMENT,\n            label: 'Multiple',\n            propertyPath: 'multi',\n            description: 'Can select multiple in the file browser, and add to the list',\n            onUpload,\n            onRemove,\n            isMultiple: true,\n          },\n\n          {\n            type: FormControlType.ATTACHMENT,\n            label: 'Upload Icon',\n            propertyPath: 'icon',\n            description: 'Any FontAwesome icon',\n            onUpload,\n            onRemove,\n            uploadIcon: faUpload,\n          },\n        ],\n      },\n    ],\n  },\n\n  {\n    headerText: 'Functionality',\n    controlRows: [\n      {\n        controls: [\n          {\n            type: FormControlType.ATTACHMENT,\n            label: 'Validation',\n            propertyPath: 'fsl',\n            description: 'File size limits (individual and/or total) can be specified.',\n            onUpload,\n            onRemove,\n            individualFileSizeLimit: 2500,\n            totalFileSizeLimit: 5000,\n          },\n        ],\n      },\n      {\n        controls: [\n          {\n            type: FormControlType.ATTACHMENT,\n            label: 'Progress and Statuses',\n            propertyPath: 'client',\n            description:\n              \"This fake client will fail to upload files named 'test' for the first time.\",\n            onUpload: clientUpload,\n            onRemove: clientRemove,\n            fileUploadProgress,\n            fileStatuses,\n          },\n        ],\n      },\n    ],\n  },\n]\n","import { Form, ValidationMode } from '@nokacreative/generic-react-form'\nimport { SamplePage } from '../../common/samplePage'\nimport { useFakeClient } from '../basic/fakeClient'\nimport { config, emptyModel } from './data'\nimport { TestModel } from './model'\n\nexport const AttachmentSample = () => {\n  const { upload, remove, fileStatuses, progress } = useFakeClient()\n  return (\n    <SamplePage\n      headerText=\"Attachment Controls\"\n      description={\n        <>\n          <p>\n            Otherwise known as <b>File Uploaders</b>. They support many optional\n            configurations, with the basic one only requiring a callback for{' '}\n            <em>onUpload()</em> and <em>onRemove()</em>.\n          </p>\n          <p>\n            Instructional messages such as whether or not multiple files can be selected,\n            and what the supported file formats are, are automatically added. They can\n            also all be overriden.\n          </p>\n        </>\n      }\n      renderForm={(\n        onSubmit: (data: TestModel) => void,\n        submittedData: TestModel | undefined\n      ) => (\n        <Form\n          sections={config(upload, remove, progress, fileStatuses)}\n          defaultValues={submittedData || emptyModel}\n          validationMode={ValidationMode.BLUR | ValidationMode.SUBMIT}\n          onSubmit={onSubmit}\n          submitButtonText=\"OK\"\n          isReadOnly={submittedData !== undefined}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\nimport './styles.scss'\n\nimport { ROUTES } from '../assets/routes'\nimport { Basic } from '../pages/basic'\nimport { ArraySample } from '../pages/array'\nimport { StandaloneSample } from '../pages/standalone'\nimport { ConditionalSample } from '../pages/condition'\nimport { InputsSample } from '../pages/inputs'\nimport { RadioCheckboxSample } from '../pages/radioCheckbox'\nimport { TextareaSample } from '../pages/textarea'\nimport { DropdownSample } from '../pages/dropdown'\nimport { AttachmentSample } from '../pages/attachment'\n\nexport const Entry = () => (\n  <Router basename=\"/\">\n    <div id=\"links\">\n      <p>Select the sample you would like to view:</p>\n      <Link to={ROUTES.basic}>Overview</Link>\n      <Link to={ROUTES.array}>Arrays</Link>\n      <Link to={ROUTES.inputs}>Inputs</Link>\n      <Link to={ROUTES.radioCheckbox}>Radios And Checkboxes</Link>\n      <Link to={ROUTES.textareas}>Textareas</Link>\n      <Link to={ROUTES.dropdowns}>Dropdowns</Link>\n      <Link to={ROUTES.attachments}>Attachment Controls</Link>\n      <Link to={ROUTES.conditional}>Conditional Configurations</Link>\n      <Link to={ROUTES.standalone}>Standalone Controls</Link>\n    </div>\n    <main>\n      <Switch>\n        <Route path={ROUTES.basic} component={Basic} />\n        <Route path={ROUTES.array} component={ArraySample} />\n        <Route path={ROUTES.inputs} component={InputsSample} />\n        <Route path={ROUTES.radioCheckbox} component={RadioCheckboxSample} />\n        <Route path={ROUTES.textareas} component={TextareaSample} />\n        <Route path={ROUTES.dropdowns} component={DropdownSample} />\n        <Route path={ROUTES.attachments} component={AttachmentSample} />\n        <Route path={ROUTES.conditional} component={ConditionalSample} />\n        <Route path={ROUTES.standalone} component={StandaloneSample} />\n      </Switch>\n    </main>\n  </Router>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport reportWebVitals from './reportWebVitals'\nimport { Entry } from './entry'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Entry />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}